{
  "contractName": "Arbitrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract Arbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract Arbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealPossible",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract Arbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_choices",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "appealPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "internalType": "enum Arbitrator.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract Arbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract Arbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract Arbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum Arbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Cl\\u00e9ment Lesaege - <clement@lesaege.com>  Arbitrator abstract contract.  When developing arbitrator contracts we need to:  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).  -Define the functions for cost display (arbitrationCost and appealCost).  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\",\"events\":{\"AppealDecision(uint256,address)\":{\"details\":\"To be raised when the current ruling is appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"AppealPossible(uint256,address)\":{\"details\":\"To be raised when a dispute can be appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"DisputeCreation(uint256,address)\":{\"details\":\"To be raised when a dispute is created.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}}},\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealCost(uint256,bytes)\":{\"details\":\"Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"fee\":\"Amount to be paid.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"start\":\"end The start and end of the period.\"}},\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"fee\":\"Amount to be paid.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract.  Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"title\":\"Arbitrator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol\":\"Arbitrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/gustavo/projects/dagora/contracts/arbitration/Arbitrable.sol\":{\"keccak256\":\"0x303554f83af82d901b5136ab9ca362a7944a69ab29ff1314afb2f04cbc75e00d\",\"urls\":[\"bzz-raw://8a0d6e2e096c9a0663b953d4b3ff31c9723341f7050ef577914e65992fc959e4\",\"dweb:/ipfs/QmTBBUiXuuvcC4GhvFyrcTmLhH7Cmixhj4xEkEMAFhqe2D\"]},\"/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol\":{\"keccak256\":\"0xfc956c98ef62bf85f6d65fad6a31afba48b7cf8a82a5884c7adf98a938e3603c\",\"urls\":[\"bzz-raw://df586a3bf951d5cddbe17a4db131ace97702e65b44f54dc29619fe977536cfac\",\"dweb:/ipfs/QmecCqMZrB6WuahwmdB9BvgUHW5VJBwiSz5NvoTJEmhUwb\"]},\"/home/gustavo/projects/dagora/contracts/arbitration/IArbitrable.sol\":{\"keccak256\":\"0xb8e4f21b3a03c18d419a6a793c7208cdc741bd81cc25e7f89a982f8cbd02cbfb\",\"urls\":[\"bzz-raw://f4376952fc7bea392308fca93cc990b583e929f0a2955ef1688c926fd851a603\",\"dweb:/ipfs/QmfWtyzgJvbCK2AWe1zgUp28RovqsNGfgVFERjkbvrSWHf\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\n *  @authors: [@clesaege]\n *  @reviewers: [@remedcu]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity >=0.4.15;\n\nimport \"./Arbitrable.sol\";\n\n/** @title Arbitrator\n *  @author Clément Lesaege - <clement@lesaege.com>\n *  Arbitrator abstract contract.\n *  When developing arbitrator contracts we need to:\n *  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n *  -Define the functions for cost display (arbitrationCost and appealCost).\n *  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\n */\nabstract contract Arbitrator {\n    enum DisputeStatus { Waiting, Appealable, Solved }\n\n    modifier requireArbitrationFee(bytes memory _extraData) {\n        require(\n            msg.value >= arbitrationCost(_extraData),\n            \"Not enough ETH to cover arbitration costs.\"\n        );\n        _;\n    }\n    modifier requireAppealFee(uint256 _disputeID, bytes memory _extraData) {\n        require(\n            msg.value >= appealCost(_disputeID, _extraData),\n            \"Not enough ETH to cover appeal costs.\"\n        );\n        _;\n    }\n\n    /** @dev To be raised when a dispute is created.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event DisputeCreation(\n        uint256 indexed _disputeID,\n        Arbitrable indexed _arbitrable\n    );\n\n    /** @dev To be raised when a dispute can be appealed.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event AppealPossible(\n        uint256 indexed _disputeID,\n        Arbitrable indexed _arbitrable\n    );\n\n    /** @dev To be raised when the current ruling is appealed.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event AppealDecision(\n        uint256 indexed _disputeID,\n        Arbitrable indexed _arbitrable\n    );\n\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\n     *  Must be paid at least arbitrationCost(_extraData).\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint256 _choices, bytes memory _extraData)\n        public\n        virtual\n        payable\n        requireArbitrationFee(_extraData)\n        returns (uint256 disputeID)\n    {}\n\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return fee Amount to be paid.\n     */\n    function arbitrationCost(bytes memory _extraData)\n        public\n        virtual\n        view\n        returns (uint256 fee);\n\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Can be used to give extra info on the appeal.\n     */\n    function appeal(uint256 _disputeID, bytes memory _extraData)\n        public\n        payable\n        requireAppealFee(_disputeID, _extraData)\n    {\n        emit AppealDecision(_disputeID, Arbitrable(msg.sender));\n    }\n\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return fee Amount to be paid.\n     */\n    function appealCost(uint256 _disputeID, bytes memory _extraData)\n        public\n        virtual\n        view\n        returns (uint256 fee);\n\n    /** @dev Compute the start and end of the dispute's current or next appeal period, if possible.\n     *  @param _disputeID ID of the dispute.\n     *  @return start end The start and end of the period.\n     */\n    function appealPeriod(uint256 _disputeID)\n        public\n        virtual\n        view\n        returns (uint256 start, uint256 end)\n    {}\n\n    /** @dev Return the status of a dispute.\n     *  @param _disputeID ID of the dispute to rule.\n     *  @return status The status of the dispute.\n     */\n    function disputeStatus(uint256 _disputeID)\n        public\n        virtual\n        view\n        returns (DisputeStatus status);\n\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     *  @param _disputeID ID of the dispute.\n     *  @return ruling The ruling which has been given or the one which will be given if there is no appeal.\n     */\n    function currentRuling(uint256 _disputeID)\n        public\n        virtual\n        view\n        returns (uint256 ruling);\n}\n",
  "sourcePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol",
  "ast": {
    "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol",
    "exportedSymbols": {
      "Arbitrator": [
        258
      ]
    },
    "id": 259,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 115,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "119:25:2"
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrable.sol",
        "file": "./Arbitrable.sol",
        "id": 116,
        "nodeType": "ImportDirective",
        "scope": 259,
        "sourceUnit": 114,
        "src": "146:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 117,
          "nodeType": "StructuredDocumentation",
          "src": "174:525:2",
          "text": "@title Arbitrator\n  @author Clément Lesaege - <clement@lesaege.com>\n  Arbitrator abstract contract.\n  When developing arbitrator contracts we need to:\n  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n  -Define the functions for cost display (arbitrationCost and appealCost).\n  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling)."
        },
        "fullyImplemented": false,
        "id": 258,
        "linearizedBaseContracts": [
          258
        ],
        "name": "Arbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Arbitrator.DisputeStatus",
            "id": 121,
            "members": [
              {
                "id": 118,
                "name": "Waiting",
                "nodeType": "EnumValue",
                "src": "756:7:2"
              },
              {
                "id": 119,
                "name": "Appealable",
                "nodeType": "EnumValue",
                "src": "765:10:2"
              },
              {
                "id": 120,
                "name": "Solved",
                "nodeType": "EnumValue",
                "src": "777:6:2"
              }
            ],
            "name": "DisputeStatus",
            "nodeType": "EnumDefinition",
            "src": "735:50:2"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "847:157:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "878:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "878:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 129,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "907:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 128,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "891:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "891:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "878:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:44:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "857:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:129:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "857:129:2"
                },
                {
                  "id": 135,
                  "nodeType": "PlaceholderStatement",
                  "src": "996:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 137,
            "name": "requireArbitrationFee",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "822:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:25:2"
            },
            "src": "791:213:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1080:159:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1111:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1111:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 147,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1135:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 148,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "1147:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 146,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "1124:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1111:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f7374732e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        },
                        "value": "Not enough ETH to cover appeal costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1090:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:131:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:131:2"
                },
                {
                  "id": 154,
                  "nodeType": "PlaceholderStatement",
                  "src": "1231:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 156,
            "name": "requireAppealFee",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "1035:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "1055:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:45:2"
            },
            "src": "1009:230:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "1245:168:2",
              "text": "@dev To be raised when a dispute is created.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "id": 163,
            "name": "DisputeCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1449:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1485:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$113",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 160,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 113,
                    "src": "1485:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$113",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:82:2"
            },
            "src": "1418:104:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "1528:173:2",
              "text": "@dev To be raised when a dispute can be appealed.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "id": 170,
            "name": "AppealPossible",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1736:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1772:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$113",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 167,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 113,
                    "src": "1772:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$113",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:82:2"
            },
            "src": "1706:103:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "1815:178:2",
              "text": "@dev To be raised when the current ruling is appealed.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "id": 177,
            "name": "AppealDecision",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "2028:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "2064:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$113",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 174,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 113,
                    "src": "2064:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$113",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2018:82:2"
            },
            "src": "1998:103:2"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2671:2:2",
              "statements": []
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "2107:364:2",
              "text": "@dev Create a dispute. Must be called by the arbitrable contract.\n  Must be paid at least arbitrationCost(_extraData).\n  @param _choices Amount of choices the arbitrator can make in this dispute.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return disputeID ID of the dispute created."
            },
            "functionSelector": "c13517e1",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 185,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 182,
                    "src": "2619:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 184,
                  "name": "requireArbitrationFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 137,
                  "src": "2597:21:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2597:33:2"
              }
            ],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2499:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2517:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2498:43:2"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2648:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:19:2"
            },
            "scope": 258,
            "src": "2476:197:2",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "2679:327:2",
              "text": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return fee Amount to be paid."
            },
            "functionSelector": "f7434ea9",
            "id": 199,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "3036:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3035:25:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "3122:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3122:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3121:13:2"
            },
            "scope": 258,
            "src": "3011:124:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "3529:72:2",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "3559:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3582:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3582:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 213,
                          "name": "Arbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "3571:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrable_$113_$",
                            "typeString": "type(contract Arbitrable)"
                          }
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3571:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrable_$113",
                          "typeString": "contract Arbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_Arbitrable_$113",
                          "typeString": "contract Arbitrable"
                        }
                      ],
                      "id": 211,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3544:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_Arbitrable_$113_$returns$__$",
                        "typeString": "function (uint256,contract Arbitrable)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3544:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "EmitStatement",
                  "src": "3539:55:2"
                }
              ]
            },
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "3141:238:2",
              "text": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n  @param _disputeID ID of the dispute to be appealed.\n  @param _extraData Can be used to give extra info on the appeal."
            },
            "functionSelector": "49912f88",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 207,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "3501:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 208,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "3513:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 209,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 206,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 156,
                  "src": "3484:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3484:40:2"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 220,
                  "src": "3400:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 220,
                  "src": "3420:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3420:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3399:45:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3529:0:2"
            },
            "scope": 258,
            "src": "3384:217:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 221,
              "nodeType": "StructuredDocumentation",
              "src": "3607:381:2",
              "text": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n  @param _disputeID ID of the dispute to be appealed.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return fee Amount to be paid."
            },
            "functionSelector": "f23f16e6",
            "id": 230,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 230,
                  "src": "4013:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 230,
                  "src": "4033:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4012:45:2"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 230,
                  "src": "4119:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4118:13:2"
            },
            "scope": 258,
            "src": "3993:139:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "4485:2:2",
              "statements": []
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "4138:207:2",
              "text": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\n  @param _disputeID ID of the dispute.\n  @return start end The start and end of the period."
            },
            "functionSelector": "afe15cfb",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "4372:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4371:20:2"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "4453:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "4468:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4468:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4452:28:2"
            },
            "scope": 258,
            "src": "4350:137:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "4493:151:2",
              "text": "@dev Return the status of a dispute.\n  @param _disputeID ID of the dispute to rule.\n  @return status The status of the dispute."
            },
            "functionSelector": "10f169e8",
            "id": 249,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 249,
                  "src": "4672:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4671:20:2"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 249,
                  "src": "4753:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$121",
                    "typeString": "enum Arbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 246,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 121,
                    "src": "4753:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$121",
                      "typeString": "enum Arbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4752:22:2"
            },
            "scope": 258,
            "src": "4649:126:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 250,
              "nodeType": "StructuredDocumentation",
              "src": "4781:268:2",
              "text": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n  @param _disputeID ID of the dispute.\n  @return ruling The ruling which has been given or the one which will be given if there is no appeal."
            },
            "functionSelector": "1c3db16d",
            "id": 257,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 257,
                  "src": "5077:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5076:20:2"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 257,
                  "src": "5158:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5157:16:2"
            },
            "scope": 258,
            "src": "5054:120:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 259,
        "src": "700:4476:2"
      }
    ],
    "src": "119:5058:2"
  },
  "legacyAST": {
    "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol",
    "exportedSymbols": {
      "Arbitrator": [
        258
      ]
    },
    "id": 259,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 115,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "119:25:2"
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrable.sol",
        "file": "./Arbitrable.sol",
        "id": 116,
        "nodeType": "ImportDirective",
        "scope": 259,
        "sourceUnit": 114,
        "src": "146:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 117,
          "nodeType": "StructuredDocumentation",
          "src": "174:525:2",
          "text": "@title Arbitrator\n  @author Clément Lesaege - <clement@lesaege.com>\n  Arbitrator abstract contract.\n  When developing arbitrator contracts we need to:\n  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n  -Define the functions for cost display (arbitrationCost and appealCost).\n  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling)."
        },
        "fullyImplemented": false,
        "id": 258,
        "linearizedBaseContracts": [
          258
        ],
        "name": "Arbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Arbitrator.DisputeStatus",
            "id": 121,
            "members": [
              {
                "id": 118,
                "name": "Waiting",
                "nodeType": "EnumValue",
                "src": "756:7:2"
              },
              {
                "id": 119,
                "name": "Appealable",
                "nodeType": "EnumValue",
                "src": "765:10:2"
              },
              {
                "id": 120,
                "name": "Solved",
                "nodeType": "EnumValue",
                "src": "777:6:2"
              }
            ],
            "name": "DisputeStatus",
            "nodeType": "EnumDefinition",
            "src": "735:50:2"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "847:157:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "878:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "878:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 129,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "907:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 128,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "891:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "891:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "878:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:44:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "857:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:129:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "857:129:2"
                },
                {
                  "id": 135,
                  "nodeType": "PlaceholderStatement",
                  "src": "996:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 137,
            "name": "requireArbitrationFee",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "822:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:25:2"
            },
            "src": "791:213:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1080:159:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1111:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1111:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 147,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1135:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 148,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "1147:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 146,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "1124:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1111:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f7374732e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        },
                        "value": "Not enough ETH to cover appeal costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1090:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:131:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:131:2"
                },
                {
                  "id": 154,
                  "nodeType": "PlaceholderStatement",
                  "src": "1231:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 156,
            "name": "requireAppealFee",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "1035:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "1055:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:45:2"
            },
            "src": "1009:230:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "1245:168:2",
              "text": "@dev To be raised when a dispute is created.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "id": 163,
            "name": "DisputeCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1449:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1485:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$113",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 160,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 113,
                    "src": "1485:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$113",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:82:2"
            },
            "src": "1418:104:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "1528:173:2",
              "text": "@dev To be raised when a dispute can be appealed.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "id": 170,
            "name": "AppealPossible",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1736:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "1772:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$113",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 167,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 113,
                    "src": "1772:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$113",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:82:2"
            },
            "src": "1706:103:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "1815:178:2",
              "text": "@dev To be raised when the current ruling is appealed.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "id": 177,
            "name": "AppealDecision",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "2028:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "2064:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$113",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 174,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 113,
                    "src": "2064:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$113",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2018:82:2"
            },
            "src": "1998:103:2"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2671:2:2",
              "statements": []
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "2107:364:2",
              "text": "@dev Create a dispute. Must be called by the arbitrable contract.\n  Must be paid at least arbitrationCost(_extraData).\n  @param _choices Amount of choices the arbitrator can make in this dispute.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return disputeID ID of the dispute created."
            },
            "functionSelector": "c13517e1",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 185,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 182,
                    "src": "2619:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 184,
                  "name": "requireArbitrationFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 137,
                  "src": "2597:21:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2597:33:2"
              }
            ],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2499:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2517:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2498:43:2"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2648:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:19:2"
            },
            "scope": 258,
            "src": "2476:197:2",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "2679:327:2",
              "text": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return fee Amount to be paid."
            },
            "functionSelector": "f7434ea9",
            "id": 199,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "3036:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3035:25:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "3122:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3122:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3121:13:2"
            },
            "scope": 258,
            "src": "3011:124:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "3529:72:2",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "3559:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3582:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3582:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 213,
                          "name": "Arbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "3571:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrable_$113_$",
                            "typeString": "type(contract Arbitrable)"
                          }
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3571:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrable_$113",
                          "typeString": "contract Arbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_Arbitrable_$113",
                          "typeString": "contract Arbitrable"
                        }
                      ],
                      "id": 211,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3544:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_Arbitrable_$113_$returns$__$",
                        "typeString": "function (uint256,contract Arbitrable)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3544:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "EmitStatement",
                  "src": "3539:55:2"
                }
              ]
            },
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "3141:238:2",
              "text": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n  @param _disputeID ID of the dispute to be appealed.\n  @param _extraData Can be used to give extra info on the appeal."
            },
            "functionSelector": "49912f88",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 207,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "3501:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 208,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "3513:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 209,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 206,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 156,
                  "src": "3484:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3484:40:2"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 220,
                  "src": "3400:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 220,
                  "src": "3420:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3420:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3399:45:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3529:0:2"
            },
            "scope": 258,
            "src": "3384:217:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 221,
              "nodeType": "StructuredDocumentation",
              "src": "3607:381:2",
              "text": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n  @param _disputeID ID of the dispute to be appealed.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return fee Amount to be paid."
            },
            "functionSelector": "f23f16e6",
            "id": 230,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 230,
                  "src": "4013:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 230,
                  "src": "4033:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4012:45:2"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 230,
                  "src": "4119:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4118:13:2"
            },
            "scope": 258,
            "src": "3993:139:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "4485:2:2",
              "statements": []
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "4138:207:2",
              "text": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\n  @param _disputeID ID of the dispute.\n  @return start end The start and end of the period."
            },
            "functionSelector": "afe15cfb",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "4372:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4371:20:2"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "4453:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "4468:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4468:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4452:28:2"
            },
            "scope": 258,
            "src": "4350:137:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "4493:151:2",
              "text": "@dev Return the status of a dispute.\n  @param _disputeID ID of the dispute to rule.\n  @return status The status of the dispute."
            },
            "functionSelector": "10f169e8",
            "id": 249,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 249,
                  "src": "4672:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4671:20:2"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 249,
                  "src": "4753:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$121",
                    "typeString": "enum Arbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 246,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 121,
                    "src": "4753:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$121",
                      "typeString": "enum Arbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4752:22:2"
            },
            "scope": 258,
            "src": "4649:126:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": {
              "id": 250,
              "nodeType": "StructuredDocumentation",
              "src": "4781:268:2",
              "text": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n  @param _disputeID ID of the dispute.\n  @return ruling The ruling which has been given or the one which will be given if there is no appeal."
            },
            "functionSelector": "1c3db16d",
            "id": 257,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 257,
                  "src": "5077:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5076:20:2"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 257,
                  "src": "5158:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5157:16:2"
            },
            "scope": 258,
            "src": "5054:120:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 259,
        "src": "700:4476:2"
      }
    ],
    "src": "119:5058:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-03T14:23:11.708Z",
  "devdoc": {
    "author": "Clément Lesaege - <clement@lesaege.com>  Arbitrator abstract contract.  When developing arbitrator contracts we need to:  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).  -Define the functions for cost display (arbitrationCost and appealCost).  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).",
    "events": {
      "AppealDecision(uint256,address)": {
        "details": "To be raised when the current ruling is appealed.",
        "params": {
          "_arbitrable": "The contract which created the dispute.",
          "_disputeID": "ID of the dispute."
        }
      },
      "AppealPossible(uint256,address)": {
        "details": "To be raised when a dispute can be appealed.",
        "params": {
          "_arbitrable": "The contract which created the dispute.",
          "_disputeID": "ID of the dispute."
        }
      },
      "DisputeCreation(uint256,address)": {
        "details": "To be raised when a dispute is created.",
        "params": {
          "_arbitrable": "The contract which created the dispute.",
          "_disputeID": "ID of the dispute."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "appeal(uint256,bytes)": {
        "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.",
          "_extraData": "Can be used to give extra info on the appeal."
        }
      },
      "appealCost(uint256,bytes)": {
        "details": "Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.",
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "fee": "Amount to be paid."
        }
      },
      "appealPeriod(uint256)": {
        "details": "Compute the start and end of the dispute's current or next appeal period, if possible.",
        "params": {
          "_disputeID": "ID of the dispute."
        },
        "returns": {
          "start": "end The start and end of the period."
        }
      },
      "arbitrationCost(bytes)": {
        "details": "Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
        "params": {
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "fee": "Amount to be paid."
        }
      },
      "createDispute(uint256,bytes)": {
        "details": "Create a dispute. Must be called by the arbitrable contract.  Must be paid at least arbitrationCost(_extraData).",
        "params": {
          "_choices": "Amount of choices the arbitrator can make in this dispute.",
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "disputeID": "ID of the dispute created."
        }
      },
      "currentRuling(uint256)": {
        "details": "Return the current ruling of a dispute. This is useful for parties to know if they should appeal.",
        "params": {
          "_disputeID": "ID of the dispute."
        },
        "returns": {
          "ruling": "The ruling which has been given or the one which will be given if there is no appeal."
        }
      },
      "disputeStatus(uint256)": {
        "details": "Return the status of a dispute.",
        "params": {
          "_disputeID": "ID of the dispute to rule."
        },
        "returns": {
          "status": "The status of the dispute."
        }
      }
    },
    "title": "Arbitrator",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}