{
  "contractName": "KlerosDagora",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeTimeoutDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_blacklistTimeoutDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenOwnerFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_reportExtraData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_orderExtraData",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "_ipfsDomain",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Arbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Arbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "enum Dagora.Party",
          "name": "_party",
          "type": "uint8"
        }
      ],
      "name": "HasToPayFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "ListingApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "ListingCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "OrderApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Arbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "TokenGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "TokenRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakeOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "commissioner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionPercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cashbackPercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "confirmationTimeout",
          "type": "uint256"
        }
      ],
      "name": "TransactionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "TransactionFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransactionRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "WarrantyClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INVERSE_BASIS_POINT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ipfsHash",
              "type": "bytes32"
            },
            {
              "internalType": "address payable",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "stakeOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commissionPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "warranty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashbackPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Listing",
          "name": "_listing",
          "type": "tuple"
        }
      ],
      "name": "approveListing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "approveOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "approvedHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "internalType": "contract Arbitrator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "availableToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Dagora.Sig[]",
          "name": "orderSignatures",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Dagora.Sig[]",
          "name": "listingSignatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchCreateTransaction",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchExecuteTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blackListTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cancelledOrFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "chargeGasFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "claimWarranty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "confirmReceipt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Dagora.Sig",
          "name": "orderSig",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Dagora.Sig",
          "name": "listingSig",
          "type": "tuple"
        }
      ],
      "name": "createTransaction",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputeIDtoHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "disputeTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "disputes",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "prosecution",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "defendant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "prosecutionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "defendantFee",
          "type": "uint256"
        },
        {
          "internalType": "enum Dagora.DisputeType",
          "name": "disputeType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "lastInteraction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metaEvidenceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        },
        {
          "internalType": "enum Dagora.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "grantAuthentication",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsDomain",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketToken",
      "outputs": [
        {
          "internalType": "contract ERC20Burnable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metaEvidenceCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderExtraData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "payArbitrationFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reportExtraData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "revokeAuthentication",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sellers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockedTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blackListExpire",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOwnerFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastStatusUpdate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasFee",
          "type": "uint256"
        },
        {
          "internalType": "enum Dagora.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "name": "updateRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ipfsHash",
              "type": "bytes32"
            },
            {
              "internalType": "address payable",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "stakeOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commissionPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "warranty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashbackPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Listing",
          "name": "_listing",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Dagora.Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "report",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "stakeOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "warranty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashbackPercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiration",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Dagora.Listing",
              "name": "listing",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "fundsHolder",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "commissioner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cashback",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHolderFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmationTimeout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dagora.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "disputeTransaction",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Dagora.DisputeType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeTimeoutDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blacklistTimeoutDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenOwnerFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_reportExtraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_orderExtraData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_ipfsDomain\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Arbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Arbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum Dagora.Party\",\"name\":\"_party\",\"type\":\"uint8\"}],\"name\":\"HasToPayFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"ListingApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"ListingCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"OrderApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Arbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TokenGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TokenRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"commissioner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"}],\"name\":\"TransactionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"TransactionFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransactionRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"WarrantyClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INVERSE_BASIS_POINT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"_listing\",\"type\":\"tuple\"}],\"name\":\"approveListing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"approveOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"approvedHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Dagora.DisputeType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbitrator\",\"outputs\":[{\"internalType\":\"contract Arbitrator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"availableToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Dagora.Sig[]\",\"name\":\"orderSignatures\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Dagora.Sig[]\",\"name\":\"listingSignatures\",\"type\":\"tuple[]\"}],\"name\":\"batchCreateTransaction\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"batchExecuteTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blackListTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelledOrFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"chargeGasFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"claimWarranty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"confirmReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Dagora.Sig\",\"name\":\"orderSig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Dagora.Sig\",\"name\":\"listingSig\",\"type\":\"tuple\"}],\"name\":\"createTransaction\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputeIDtoHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"disputeTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"disputeTransaction\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"prosecution\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"defendant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prosecutionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defendantFee\",\"type\":\"uint256\"},{\"internalType\":\"enum Dagora.DisputeType\",\"name\":\"disputeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastInteraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metaEvidenceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"internalType\":\"enum Dagora.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"grantAuthentication\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsDomain\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketToken\",\"outputs\":[{\"internalType\":\"contract ERC20Burnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metaEvidenceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderExtraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"payArbitrationFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"_listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Dagora.Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"report\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reportExtraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"revokeAuthentication\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blackListExpire\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOwnerFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastStatusUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasFee\",\"type\":\"uint256\"},{\"internalType\":\"enum Dagora.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"warranty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"fundsHolder\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"commissioner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHolderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Dagora.Order\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"updateRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"appeal(bytes32)\":{\"details\":\"Appeal an appealable ruling. UNTRUSTED.  Transfer the funds to the arbitrator.  Note that no checks are required as the checks are done by the arbitrator.\",\"params\":{\"_hash\":\"The hash of the order.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator.  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}},\"submitEvidence(bytes32,string)\":{\"details\":\"Submit a reference to evidence. EVENT.\",\"params\":{\"_evidence\":\"A link to an evidence using its URI.\",\"_hash\":\"The hash of the order.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/gustavo/projects/dagora/contracts/marketplace/KlerosDagora.sol\":\"KlerosDagora\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/gustavo/projects/dagora/contracts/arbitration/Arbitrable.sol\":{\"keccak256\":\"0x303554f83af82d901b5136ab9ca362a7944a69ab29ff1314afb2f04cbc75e00d\",\"urls\":[\"bzz-raw://8a0d6e2e096c9a0663b953d4b3ff31c9723341f7050ef577914e65992fc959e4\",\"dweb:/ipfs/QmTBBUiXuuvcC4GhvFyrcTmLhH7Cmixhj4xEkEMAFhqe2D\"]},\"/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol\":{\"keccak256\":\"0xfc956c98ef62bf85f6d65fad6a31afba48b7cf8a82a5884c7adf98a938e3603c\",\"urls\":[\"bzz-raw://df586a3bf951d5cddbe17a4db131ace97702e65b44f54dc29619fe977536cfac\",\"dweb:/ipfs/QmecCqMZrB6WuahwmdB9BvgUHW5VJBwiSz5NvoTJEmhUwb\"]},\"/home/gustavo/projects/dagora/contracts/arbitration/IArbitrable.sol\":{\"keccak256\":\"0xb8e4f21b3a03c18d419a6a793c7208cdc741bd81cc25e7f89a982f8cbd02cbfb\",\"urls\":[\"bzz-raw://f4376952fc7bea392308fca93cc990b583e929f0a2955ef1688c926fd851a603\",\"dweb:/ipfs/QmfWtyzgJvbCK2AWe1zgUp28RovqsNGfgVFERjkbvrSWHf\"]},\"/home/gustavo/projects/dagora/contracts/marketplace/BatchDagora.sol\":{\"keccak256\":\"0x856e01f6a8a49d7f6c3f8a703814a830c58d9524173ae974984a64dfaee5fb9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922b0c4ff19cb88a26a320e571d3f3039d458eacd18f398b3bdf4e7f01634964\",\"dweb:/ipfs/QmcPwTwBsAu4csPmnphoZjEALuXRhVBQjLWUBsiqUH5ayr\"]},\"/home/gustavo/projects/dagora/contracts/marketplace/Dagora.sol\":{\"keccak256\":\"0xe359d4d6dffc28b9e413b13a910da06ef12d0a8e6d09bbecb0fb69ecdbd930bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8a99029e9975eacd77801e54b36c214eaa01931f7febc3c57f12a94ba103597\",\"dweb:/ipfs/QmRtFjkiWMVEkR4bLHq7cSpmYsu4224yf6UAveAEzCjbw9\"]},\"/home/gustavo/projects/dagora/contracts/marketplace/KlerosDagora.sol\":{\"keccak256\":\"0xd68585e1a66a738b90d7f402eab1d14a41710b8a98fe789453bded67ed4adce7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e39a69a58d70d9feaa54e890d42c4153cd14d60a272acfe2af3eea814387bd77\",\"dweb:/ipfs/QmVjrzHFWq1AuYFV8GYD7ptsrzER1oRzA5TfcVsknodLwn\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620052b9380380620052b98339810160408190526200003491620002c2565b888888888888866000620000476200015d565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600a80546001600160a01b03808a166001600160a01b031992831617909255600f805492891692909116919091179055620151808086026008558402600755600d839055600e8290558051620000ef90600c90602084019062000161565b505050505050505089601060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082601190805190602001906200013692919062000161565b5081516200014c90601290602085019062000161565b5050505050505050505050620003b2565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a457805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d4578251825591602001919060010190620001b7565b50620001e2929150620001e6565b5090565b5b80821115620001e25760008155600101620001e7565b80516001600160a01b03811681146200021557600080fd5b92915050565b600082601f8301126200022c578081fd5b81516001600160401b038082111562000243578283fd5b6040516020601f8401601f191682018101838111838210171562000265578586fd5b806040525081945083825286818588010111156200028257600080fd5b600092505b83831015620002a6578583018101518284018201529182019162000287565b83831115620002b85760008185840101525b5050505092915050565b6000806000806000806000806000806101408b8d031215620002e2578586fd5b620002ee8c8c620001fd565b9950620002ff8c60208d01620001fd565b9850620003108c60408d01620001fd565b975060608b0151965060808b0151955060a08b0151945060c08b0151935060e08b015160018060401b038082111562000347578485fd5b620003558e838f016200021b565b94506101008d01519150808211156200036c578384fd5b6200037a8e838f016200021b565b93506101208d015191508082111562000391578283fd5b50620003a08d828e016200021b565b9150509295989b9194979a5092959850565b614ef780620003c26000396000f3fe6080604052600436106102725760003560e01c80638076f0051161014f578063b329036b116100c1578063d48fd7541161007a578063d48fd75414610723578063dd49756e14610743578063ece1de4414610763578063ee7269d714610776578063f2fde38b1461078b578063f48a0b31146107ab57610272565b8063b329036b14610691578063b6398667146106a6578063ba4bc763146106bb578063be6a18ef146106db578063cae6047f146106ee578063d1fcfdb81461070357610272565b80638e50e509116101135780638e50e509146105f057806396e7125014610605578063a0c59ef314610625578063a2031de41461063a578063ad48d6111461065c578063afd9e0d01461067157610272565b80638076f0051461056857806382ad5f751461058857806382e1e9721461059b57806387bd84cc146105bb5780638da5cb5b146105db57610272565b8063640b5aac116101e85780636cc6cde1116101ac5780636cc6cde1146104af5780636d47ab72146104c4578063703472f3146104f3578063715018a61461051357806372fc42131461052857806378e740ff1461054857610272565b8063640b5aac146103f0578063642f2eaf1461041057806364df049e1461044057806369dc9ff3146104625780636b83a0611461048f57610272565b806339d2a6941161023a57806339d2a694146103465780634140a5eb1461035957806353376d1f1461036e578063546f995c1461038e5780635af79807146103ae5780635d2569ad146103c357610272565b806311be19971461027757806320a1e5b5146102b75780632c3d01b8146102e4578063311a6c5614610306578063315a095d14610326575b600080fd5b34801561028357600080fd5b50610297610292366004613e85565b6107cb565b6040516102ae9b9a99989796959493929190614350565b60405180910390f35b3480156102c357600080fd5b506102d76102d2366004613fef565b610838565b6040516102ae9190614457565b3480156102f057600080fd5b506103046102ff366004613fd3565b6109de565b005b34801561031257600080fd5b5061030461032136600461407b565b610b1c565b34801561033257600080fd5b50610304610341366004613e85565b610c43565b6102d7610354366004613fd3565b610dab565b34801561036557600080fd5b506102d7610e2b565b34801561037a57600080fd5b50610304610389366004613d8a565b610e31565b34801561039a57600080fd5b506103046103a9366004613da6565b610eaf565b3480156103ba57600080fd5b506102d7610ee3565b3480156103cf57600080fd5b506103e36103de366004613de1565b610ee9565b6040516102ae9190614408565b3480156103fc57600080fd5b5061030461040b366004614037565b610fc2565b34801561041c57600080fd5b5061043061042b366004613e85565b611102565b6040516102ae9493929190614e0c565b34801561044c57600080fd5b5061045561112c565b6040516102ae91906142fb565b34801561046e57600080fd5b5061048261047d366004613d8a565b61113b565b6040516102ae919061444c565b34801561049b57600080fd5b506104826104aa366004613f51565b611150565b3480156104bb57600080fd5b5061045561125f565b3480156104d057600080fd5b506104e46104df366004613d8a565b61126e565b6040516102ae93929190614df6565b3480156104ff57600080fd5b506102d761050e366004613f32565b61128e565b34801561051f57600080fd5b506103046113de565b34801561053457600080fd5b50610304610543366004613e85565b61145d565b34801561055457600080fd5b50610482610563366004613fd3565b61161a565b34801561057457600080fd5b50610482610583366004613e85565b6116de565b6102d7610596366004613f6d565b6116f3565b3480156105a757600080fd5b506103046105b6366004613fd3565b611774565b3480156105c757600080fd5b506104826105d6366004613e85565b611869565b3480156105e757600080fd5b5061045561187e565b3480156105fc57600080fd5b506102d761188d565b34801561061157600080fd5b50610304610620366004613fd3565b611893565b34801561063157600080fd5b506102d7611999565b34801561064657600080fd5b5061064f61199f565b6040516102ae919061447e565b34801561066857600080fd5b50610455611a2d565b34801561067d57600080fd5b506102d761068c366004613fd3565b611a3c565b34801561069d57600080fd5b506102d7611a8f565b3480156106b257600080fd5b5061064f611a95565b3480156106c757600080fd5b506102d76106d6366004613e85565b611af0565b6103046106e9366004613e85565b611b02565b3480156106fa57600080fd5b506102d7611d25565b34801561070f57600080fd5b5061030461071e366004613d8a565b611d2b565b34801561072f57600080fd5b5061030461073e366004613fa3565b611dd2565b34801561074f57600080fd5b5061030461075e366004613e85565b611efd565b610304610771366004613e85565b612009565b34801561078257600080fd5b5061064f6120b8565b34801561079757600080fd5b506103046107a6366004613d8a565b612113565b3480156107b757600080fd5b506103046107c6366004613e9d565b6121c9565b600560208190526000918252604090912080546001820154600283015460038401546004850154958501546006860154600787015460088801546009890154600a909901546001600160a01b039889169a9789169996989095169695939460ff938416949293919291168b565b60006108458484846122f8565b6000818152600460205260408120919250600382015460ff16600581111561086957fe5b1461088f5760405162461bcd60e51b815260040161088690614c15565b60405180910390fd5b84608001516001600160a01b03166323b872dd8660200151308860a001516040518463ffffffff1660e01b81526004016108cb939291906143cb565b602060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d9190613e65565b6109395760405162461bcd60e51b815260040161088690614c8c565b4281556003810180546001919060ff1916828002179055508460000151602001516001600160a01b031685604001516001600160a01b0316837fe419a7cfec7b19a58f8ef66dbf85dd08b396bafa0e2f94b3181fd3d047cb748188600001516040015189606001518a608001518b60a001518c60e001518d60c001518e61016001516040516109ce979695949392919061430f565b60405180910390a4509392505050565b60006109e982612367565b60008181526004602052604090209091506001600382015460ff166005811115610a0f57fe5b1480610a2d57506002600382015460ff166005811115610a2b57fe5b145b80610a49575060038082015460ff166005811115610a4757fe5b145b610a655760405162461bcd60e51b8152600401610886906146cd565b60006001600383015460ff166005811115610a7c57fe5b1480610a99575060038083015460ff166005811115610a9757fe5b145b15610ad6578361016001516201518002826000015401421015610ace5760405162461bcd60e51b815260040161088690614638565b506000610b0d565b835160a0015182546201518090910201421015610b055760405162461bcd60e51b815260040161088690614638565b50825160c001515b610b168461237a565b50505050565b60008281526006602090815260408083205480845260059092529091206010546001600160a01b0316610b4d612740565b6001600160a01b031614610b735760405162461bcd60e51b815260040161088690614c4a565b6003600a82015460ff166004811115610b8857fe5b14610ba55760405162461bcd60e51b815260040161088690614530565b83610bae612740565b6001600160a01b03167f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e7562227685604051610be69190614457565b60405180910390a36001600682015460ff166002811115610c0357fe5b1415610c1857610c138184612744565b610b16565b610c228184612aa2565b506000908152600460205260409020600301805460ff191660051790555050565b600060016000610c51612740565b6001600160a01b03166001600160a01b0316815260200190815260200160002090508181600101548260000154031015610c9d5760405162461bcd60e51b8152600401610886906144b8565b600a546001600160a01b03166323b872dd610cb6612740565b30856040518463ffffffff1660e01b8152600401610cd6939291906143cb565b602060405180830381600087803b158015610cf057600080fd5b505af1158015610d04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d289190613e65565b610d3157600080fd5b8160016000610d3e612740565b6001600160a01b0316815260208101919091526040016000208054919091039055610d67612740565b6001600160a01b03167f05e8d4927d2e9cff8a7d6f1c0c3b0fdd4d7299da00fe4911745bda49a5834e6783604051610d9f9190614457565b60405180910390a25050565b6000610db682612edf565b600081815260056020908152604091829020600801548551519251939450927f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d92610e0492600c9201614252565b60408051601f1981840301815290829052610e1e9161447e565b60405180910390a2919050565b600e5481565b610e39612740565b6000546001600160a01b03908116911614610e665760405162461bcd60e51b8152600401610886906148ed565b6001600160a01b038116600081815260096020526040808220805460ff19169055517f45f62f30e7b8439e0da7d8e560fe39d01238091ce9e789e3d12b514edf98acea9190a250565b60005b8151811015610edf57610ed7828281518110610eca57fe5b60200260200101516109de565b600101610eb2565b5050565b600b5481565b606082518451148015610efd575081518351145b610f0657600080fd5b835167ffffffffffffffff81118015610f1e57600080fd5b50604051908082528060200260200182016040528015610f48578160200160208202803683370190505b50905060005b8451811015610fba57610f9b858281518110610f6657fe5b6020026020010151858381518110610f7a57fe5b6020026020010151858481518110610f8e57fe5b6020026020010151610838565b828281518110610fa757fe5b6020908102919091010152600101610f4e565b509392505050565b8151602001516001600160a01b0316610fd9612740565b6001600160a01b031614610fff5760405162461bcd60e51b815260040161088690614745565b600061100a83612367565b60008181526004602052604090209091506001600382015460ff16600581111561103057fe5b1461104d5760405162461bcd60e51b8152600401610886906146cd565b836101600151620151800281600001540142111561107d5760405162461bcd60e51b815260040161088690614990565b8360a001518460e001518561012001518661010001518760c00151010101840111156110bb5760405162461bcd60e51b8152600401610886906149fc565b828160010181905550817fe18fe462037a62d3500e07f2b32d9e16a69cee44850c9b7dcef7d856087e4aff846040516110f49190614457565b60405180910390a250505050565b60046020526000908152604090208054600182015460028301546003909301549192909160ff1684565b600f546001600160a01b031681565b60096020526000908152604090205460ff1681565b600081604001516001600160a01b0316611168612740565b6001600160a01b03161461118e5760405162461bcd60e51b8152600401610886906149c5565b81606001516001600061119f612740565b6001600160a01b0316815260208101919091526040016000205410156111d75760405162461bcd60e51b81526004016108869061477c565b60006111e283613096565b60008181526003602052604090205490915060ff16156112145760405162461bcd60e51b815260040161088690614576565b600081815260036020526040808220805460ff191660011790555182917f4e58c75167b3bff3ab3949a55f72203f341f94cca1c2c0c84370731b2b4c201791a260019150505b919050565b6010546001600160a01b031681565b600160208190526000918252604090912080549181015460029091015483565b60008082600281111561129d57fe5b116112a757600080fd5b60018260028111156112b557fe5b14156113435760105460405163f7434ea960e01b81526001600160a01b039091169063f7434ea9906112ec90601190600401614491565b60206040518083038186803b15801561130457600080fd5b505afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190614063565b905061125a565b600282600281111561135157fe5b141561125a5760105460405163f7434ea960e01b81526001600160a01b039091169063f7434ea99061138890601290600401614491565b60206040518083038186803b1580156113a057600080fd5b505afa1580156113b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d89190614063565b92915050565b6113e6612740565b6000546001600160a01b039081169116146114135760405162461bcd60e51b8152600401610886906148ed565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000818152600560205260409020600a81015460ff16600481111561147e57fe5b600010801561149f57506003600a82015460ff16600481111561149d57fe5b105b6114bb5760405162461bcd60e51b8152600401610886906147b3565b6008548160070154420310156114e35760405162461bcd60e51b815260040161088690614638565b6000816004015460001461156157600482018054600090915582546040516001600160a01b03909116908290611518906142f8565b60006040518083038185875af1925050503d8060008114611555576040519150601f19603f3d011682016040523d82523d6000602084013e61155a565b606091505b5090925050505b6005820154156115de57600582018054600090915560018301546040516001600160a01b03909116908290611595906142f8565b60006040518083038185875af1925050503d80600081146115d2576040519150601f19603f3d011682016040523d82523d6000602084013e6115d7565b606091505b5090925050505b6002600a83015460ff1660048111156115f357fe5b141561160a576116058260015b612744565b611615565b611615826002611600565b505050565b600081602001516001600160a01b0316611632612740565b6001600160a01b0316146116585760405162461bcd60e51b815260040161088690614922565b600061166383612367565b60008181526003602052604090205490915060ff16156116955760405162461bcd60e51b815260040161088690614576565b600081815260036020526040808220805460ff191660011790555182917f0bed755d9d22259660bf623a395b620bbff2af67319e990b538dc8603bdc3e5f91a250600192915050565b60026020526000908152604090205460ff1681565b60006116ff83836130a4565b6000818152600560209081526040918290206008015486519251939450927f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d9261174c92600c9201614252565b60408051601f19818403018152908290526117669161447e565b60405180910390a292915050565b600061177f82612367565b60008181526004602052604090209091506001600382015460ff1660058111156117a557fe5b1480156117ce575082604001516001600160a01b03166117c3612740565b6001600160a01b0316145b80611812575060038082015460ff1660058111156117e857fe5b14801561181257508251602001516001600160a01b0316611807612740565b6001600160a01b0316145b61182e5760405162461bcd60e51b815260040161088690614b27565b60018101541580156118445750825160a0015115155b156118605760038101805460ff19166002179055428155611615565b6116158361237a565b60036020526000908152604090205460ff1681565b6000546001600160a01b031690565b600d5481565b600061189e82612367565b60008181526004602052604090209091506002600382015460ff1660058111156118c457fe5b146118e15760405162461bcd60e51b8152600401610886906146cd565b82604001516001600160a01b03166118f7612740565b6001600160a01b03161461191d5760405162461bcd60e51b815260040161088690614bea565b825160a001518154620151809091020142111561194c5760405162461bcd60e51b815260040161088690614696565b6003818101805460ff1916909117905560a0830151600182015542815560405182907f99e77d4092287badf5165a76eb7add37ec282650747091906c6a02e0cd4f5b3d90600090a2505050565b60075481565b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611a255780601f106119fa57610100808354040283529160200191611a25565b820191906000526020600020905b815481529060010190602001808311611a0857829003601f168201915b505050505081565b600a546001600160a01b031681565b60008060046000611a4c85612367565b815260200190815260200160002090508260e001518361012001518461010001518560c001518460020154856001015401010101018360a0015103915050919050565b60085481565b6012805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611a255780601f106119fa57610100808354040283529160200191611a25565b60066020526000908152604090205481565b60008181526005602052604081206006810154909190611b249060ff1661128e565b600a83015490915060ff166004811115611b3a57fe5b6000108015611b5b57506003600a83015460ff166004811115611b5957fe5b105b611b775760405162461bcd60e51b8152600401610886906144ef565b81546001600160a01b0316611b8a612740565b6001600160a01b03161480611bbb575060018201546001600160a01b0316611bb0612740565b6001600160a01b0316145b611bd75760405162461bcd60e51b815260040161088690614959565b81546001600160a01b0316611bea612740565b6001600160a01b03161415611c8f57600482018054340190819055811115611c245760405162461bcd60e51b8152600401610886906146f4565b4260078301556005820154811115611c8557600a8201805460ff1916600217905560405183907ff972c77402d0ee7d94e4b2ea7cee21a3d392136bf7c9b72d2dc85e2a4d24a9cf90611c78906001906144a4565b60405180910390a2611605565b61160583826132ed565b600582018054340190819055811115611cba5760405162461bcd60e51b8152600401610886906146f4565b4260078301556004820154811115611d1b57600a8201805460ff1916600117905560405183907ff972c77402d0ee7d94e4b2ea7cee21a3d392136bf7c9b72d2dc85e2a4d24a9cf90611d0e906000906144a4565b60405180910390a2611615565b61161583826132ed565b61271081565b611d33612740565b6000546001600160a01b03908116911614611d605760405162461bcd60e51b8152600401610886906148ed565b6001600160a01b03811660009081526009602052604090205460ff1615611d8657600080fd5b6001600160a01b038116600081815260096020526040808220805460ff19166001179055517f52133ca86a0b20d025852c627bd9d5c8e6037a237d7ef7d22f399ae642e6b9b49190a250565b6000600481611dee611de936879003870187613fd3565b612367565b8152602081019190915260400160009081209150600382015460ff166005811115611e1557fe5b118015611e3457506005600382015460ff166005811115611e3257fe5b105b611e3d57600080fd5b81611e5061068c36869003860186613fd3565b1015611e5b57600080fd5b60028101805483019055611e7761018084016101608501613d8a565b6001600160a01b031663a9059cbb611e8d612740565b846040518363ffffffff1660e01b8152600401611eab9291906143ef565b602060405180830381600087803b158015611ec557600080fd5b505af1158015611ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b169190613e65565b600a546001600160a01b03166323b872dd611f16612740565b30846040518463ffffffff1660e01b8152600401611f36939291906143cb565b602060405180830381600087803b158015611f5057600080fd5b505af1158015611f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f889190613e65565b611f9157600080fd5b8060016000611f9e612740565b6001600160a01b03168152602081019190915260400160002080549091019055611fc6612740565b6001600160a01b03167fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda82604051611ffe9190614457565b60405180910390a250565b60008181526005602052604090206002600682015460ff16600281111561202c57fe5b146120495760405162461bcd60e51b815260040161088690614b9d565b601054600982015460405163093225f160e31b81526001600160a01b03909216916349912f889134916120829190601290600401614dcf565b6000604051808303818588803b15801561209b57600080fd5b505af11580156120af573d6000803e3d6000fd5b50505050505050565b6011805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611a255780601f106119fa57610100808354040283529160200191611a25565b61211b612740565b6000546001600160a01b039081169116146121485760405162461bcd60e51b8152600401610886906148ed565b6001600160a01b03811661216e5760405162461bcd60e51b8152600401610886906145f2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260056020526040902080546001600160a01b03166121ea612740565b6001600160a01b0316148061221b575060018101546001600160a01b0316612210612740565b6001600160a01b0316145b6122375760405162461bcd60e51b815260040161088690614d2d565b6002600682015460ff16600281111561224c57fe5b146122695760405162461bcd60e51b815260040161088690614a47565b6004600a82015460ff16600481111561227e57fe5b1061229b5760405162461bcd60e51b8152600401610886906145a0565b6122a3612740565b60088201546010546040516001600160a01b0393841693909116907fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c906122eb90879061447e565b60405180910390a4505050565b600061231261230a8560000151613096565b85518461352a565b61232e5760405162461bcd60e51b815260040161088690614d04565b61234461233a85612367565b915081858561365d565b6123605760405162461bcd60e51b815260040161088690614b76565b9392505050565b60006113d861237583613864565b6138ed565b600061238582612367565b6000818152600460205260408120600181015460a086015193945090929091906123af9083613900565b60038401805460ff191660051790556000808555600185015561010086015190915015612471576101008501516080860151600f5460405163a9059cbb60e01b815293839003936001600160a01b039283169363a9059cbb936124169316916004016143ef565b602060405180830381600087803b15801561243057600080fd5b505af1158015612444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124689190613e65565b61247157600080fd5b610120850151156125275761248b81866101200151613900565b905084608001516001600160a01b031663a9059cbb8660000151604001518761012001516040518363ffffffff1660e01b81526004016124cc9291906143ef565b602060405180830381600087803b1580156124e657600080fd5b505af11580156124fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251e9190613e65565b61252757600080fd5b60e0850151156125cd5760e08501516080860151606087015160405163a9059cbb60e01b815293839003936001600160a01b039092169263a9059cbb926125729291906004016143ef565b602060405180830381600087803b15801561258c57600080fd5b505af11580156125a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c49190613e65565b6125cd57600080fd5b60c0850151156126755760c08501516080860151604080880151905163a9059cbb60e01b815293839003936001600160a01b039092169263a9059cbb9261261a92918701906004016143ef565b602060405180830381600087803b15801561263457600080fd5b505af1158015612648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266c9190613e65565b61267557600080fd5b801561270e57608085015185516020015160405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb916126b39185906004016143ef565b602060405180830381600087803b1580156126cd57600080fd5b505af11580156126e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127059190613e65565b61270e57600080fd5b60405184907f24196ec40f90671b7144e716978686b4f3c7d6b00b23da3971ef2b52af27d87f90600090a25050505050565b3390565b60028111156127655760405162461bcd60e51b81526004016108869061466d565b6002820180546004808501805460058701805460009687905592869055859055600a8701805460ff191690931790925560016020819052808701546001600160a01b03168552929391929091908514156128be5785546040516001600160a01b039091169084906127d5906142f8565b60006040518083038185875af1925050503d8060008114612812576040519150601f19603f3d011682016040523d82523d6000602084013e612817565b606091505b50506001878101546001600160a01b03908116600090815260209290925260408083208054899003905589548216835290912080546002808904909101909155600a549293509116906342966c6890865b0486036040518263ffffffff1660e01b81526004016128879190614457565b600060405180830381600087803b1580156128a157600080fd5b505af11580156128b5573d6000803e3d6000fd5b50505050612a9a565b600285141561298e5760018601546040516001600160a01b039091169083906128e6906142f8565b60006040518083038185875af1925050503d8060008114612923576040519150601f19603f3d011682016040523d82523d6000602084013e612928565b606091505b505060075487546001600160a01b039081166000908152600160208190526040808320429095016002958601558b548416835280832080548b90039055908b01548316825290208054838904019055600a5492935091909116906342966c689086612868565b600186015460405160028504916001600160a01b031690828503906129b2906142f8565b60006040518083038185875af1925050503d80600081146129ef576040519150601f19603f3d011682016040523d82523d6000602084013e6129f4565b606091505b505087546040519193506001600160a01b0316908290612a13906142f8565b60006040518083038185875af1925050503d8060008114612a50576040519150601f19603f3d011682016040523d82523d6000602084013e612a55565b606091505b505087546001600160a01b039081166000908152600160208190526040808320805460028c0490819003909155918c0154909316825291902080549190910390559150505b505050505050565b6002811115612ac35760405162461bcd60e51b81526004016108869061466d565b6002820180546004808501805460058701805460009687905592869055859055600a8701805460ff191690931790925591929091906001851415612c0d5785546040516001600160a01b03909116908490612b1d906142f8565b60006040518083038185875af1925050503d8060008114612b5a576040519150601f19603f3d011682016040523d82523d6000602084013e612b5f565b606091505b50506003870154875460405163a9059cbb60e01b81529293506001600160a01b039182169263a9059cbb92612b9a92169088906004016143ef565b602060405180830381600087803b158015612bb457600080fd5b505af1158015612bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bec9190613e65565b612c085760405162461bcd60e51b8152600401610886906147f8565b612a9a565b6002851415612cb55760018601546040516001600160a01b03909116908390612c35906142f8565b60006040518083038185875af1925050503d8060008114612c72576040519150601f19603f3d011682016040523d82523d6000602084013e612c77565b606091505b50506003870154600188015460405163a9059cbb60e01b81529293506001600160a01b039182169263a9059cbb92612b9a92169088906004016143ef565b600186015460405160028504916001600160a01b03169082850390612cd9906142f8565b60006040518083038185875af1925050503d8060008114612d16576040519150601f19603f3d011682016040523d82523d6000602084013e612d1b565b606091505b505087546040519193506001600160a01b0316908290612d3a906142f8565b60006040518083038185875af1925050503d8060008114612d77576040519150601f19603f3d011682016040523d82523d6000602084013e612d7c565b606091505b50506003880154600189015460405163a9059cbb60e01b815292945060028804926001600160a01b039283169263a9059cbb92612dc292911690858b03906004016143ef565b602060405180830381600087803b158015612ddc57600080fd5b505af1158015612df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e149190613e65565b612e305760405162461bcd60e51b8152600401610886906147f8565b6003880154885460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92612e679291169085906004016143ef565b602060405180830381600087803b158015612e8157600080fd5b505af1158015612e95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eb99190613e65565b612ed55760405162461bcd60e51b8152600401610886906147f8565b5050505050505050565b6000612eea82612367565b60008181526004602052604090209091506001600382015460ff166005811115612f1057fe5b1480612f2d575060038082015460ff166005811115612f2b57fe5b145b612f495760405162461bcd60e51b8152600401610886906146cd565b8261016001516201518002816000015401421115612f795760405162461bcd60e51b815260040161088690614990565b6000612f85600261128e565b905080341015612fa75760405162461bcd60e51b815260040161088690614add565b6000806001600385015460ff166005811115612fbf57fe5b14156130135785604001516001600160a01b0316612fdb612740565b6001600160a01b0316146130015760405162461bcd60e51b81526004016108869061483e565b5050604084015184516020015161305e565b8551602001516001600160a01b031661302a612740565b6001600160a01b0316146130505760405162461bcd60e51b815260040161088690614875565b505060408401518451602001515b60038401805460ff1916600417905542845560a0860151608087015161308c91879185918591346002613942565b5050505050919050565b60006113d861237583613a51565b60006130b08383613a8b565b9050600080828152600560205260409020600a015460ff1660048111156130d357fe5b146130f05760405162461bcd60e51b8152600401610886906148ac565b82604001516001600160a01b0316613106612740565b6001600160a01b0316141561312d5760405162461bcd60e51b815260040161088690614d81565b6000613139600161128e565b90508034101561315b5760405162461bcd60e51b815260040161088690614add565b600060016000613169612740565b6001600160a01b03166001600160a01b031681526020019081526020016000209050806002015442116131ae5760405162461bcd60e51b815260040161088690614a96565b6001810154815460608701519190039081101561328157600a546001600160a01b03166323b872dd6131de612740565b30848a60600151036040518463ffffffff1660e01b8152600401613204939291906143cb565b602060405180830381600087803b15801561321e57600080fd5b505af1158015613232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132569190613e65565b6132725760405162461bcd60e51b815260040161088690614ccd565b60608601518254908290030182555b6040808701516001600160a01b0316600090815260016020819052919020606088015184830180548201905591810180549092019091556132e2856132c4612740565b60408a015160608b0151600a546001600160a01b0316346001613942565b505050505092915050565b6000828152600560205260409020600a810180546003919060ff191660018302179055506010546000906001600160a01b031663c13517e184600280600687015460ff16600281111561333c57fe5b1461334857601161334b565b60125b6040518463ffffffff1660e01b8152600401613368929190614e3a565b6020604051808303818588803b15801561338157600080fd5b505af1158015613395573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906133ba9190614063565b600081815260066020526040908190208690556010546008850154915192935083926001600160a01b03909116917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d9161341691908190614de8565b60405180910390a3600083836004015411156134a05760048301805490859055835460405191869003916001600160a01b03909116908290613457906142f8565b60006040518083038185875af1925050503d8060008114613494576040519150601f19603f3d011682016040523d82523d6000602084013e613499565b606091505b5090925050505b83836005015411156135235760058301805490859055600184015460405191869003916001600160a01b039091169082906134da906142f8565b60006040518083038185875af1925050503d8060008114613517576040519150601f19603f3d011682016040523d82523d6000602084013e61351c565b606091505b5090925050505b5050505050565b60008260e0015160001415801561354457508260e0015142115b1561355157506000612360565b6040808401516001600160a01b0316600090815260016020819052919020606085015191810154815491929103101561358e576000915050612360565b60008581526002602052604090205460ff16156135af576000915050612360565b60008581526003602052604090205460ff16156135d0576001915050612360565b83604001516001600160a01b03166001868560000151866020015187604001516040516000815260200160405260405161360d9493929190614460565b6020604051602081039080840390855afa15801561362f573d6000803e3d6000fd5b505050602060405103516001600160a01b03161415613652576001915050612360565b506000949350505050565b6000826101400151600014158015613679575082610140015142115b1561368657506000612360565b60808301516001600160a01b031660009081526009602052604090205460ff166136b257506000612360565b60008481526002602052604090205460ff16156136d157506000612360565b6136e78360a00151846000015160800151613abf565b8360e0015110156136fa57506000612360565b6137108360a00151846000015160c00151613abf565b8360c00151101561372357506000612360565b6137338360a00151600d54613abf565b836101000151101561374757506000612360565b825160208101516040909101516001600160a01b03908116911614801590613782575061377a8360a00151600e54613abf565b836101200151105b1561378f57506000612360565b8260e001518361012001518461010001518560c001510101018360a0015110156137bb57506000612360565b60008481526003602052604090205460ff16156137da57506001612360565b82604001516001600160a01b0316600185846000015185602001518660400151604051600081526020016040526040516138179493929190614460565b6020604051602081039080840390855afa158015613839573d6000803e3d6000fd5b505050602060405103516001600160a01b0316141561385a57506001612360565b5060009392505050565b60006138738260000151613096565b82604001518360200151846060015185608001518660a001518760c001518860e001518961010001518a61012001518b61014001518c61016001518d61018001516040516020016138d09d9c9b9a99989796959493929190614180565b604051602081830303815290604052805190602001209050919050565b6000816040516020016138d091906142c7565b600061236083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613ac8565b600087815260056020526040902080546001600160a01b038089166001600160a01b031992831617835560018084018054928a1692909316919091179091556002808301879055600483018054860190556006830180548593919260ff19909116919084908111156139b057fe5b021790555060018260028111156139c357fe5b14156139e7576003810180546001600160a01b0319166001600160a01b0386161790555b600a8101805460ff19166002179055426007820155600b80546001818101909255600883015560405189917ff972c77402d0ee7d94e4b2ea7cee21a3d392136bf7c9b72d2dc85e2a4d24a9cf91613a3e91906144a4565b60405180910390a2979650505050505050565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a015195516000996138d0999098979101614207565b6000613aa3613a9984613096565b915081848461352a565b6113d85760405162461bcd60e51b815260040161088690614d04565b61271091020490565b60008184841115613aec5760405162461bcd60e51b8152600401610886919061447e565b505050900390565b80356113d881614ea9565b600082601f830112613b0f578081fd5b8135613b22613b1d82614e7d565b614e56565b818152915060208083019084810161028080850287018301881015613b4657600080fd5b60005b85811015613b6d57613b5b8984613c64565b85529383019391810191600101613b49565b50505050505092915050565b600082601f830112613b89578081fd5b8135613b97613b1d82614e7d565b8181529150602080830190848101606080850287018301881015613bba57600080fd5b60005b85811015613b6d57613bcf8984613d3e565b85529383019391810191600101613bbd565b6000610100808385031215613bf4578182fd5b613bfd81614e56565b915050813581526020820135613c1281614ea9565b60208201526040820135613c2581614ea9565b80604083015250606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015292915050565b60006102808284031215613c76578081fd5b6101a0613c8281614e56565b9150613c8e8484613be1565b8252610100613c9f85828601613af4565b6020840152610120613cb386828701613af4565b6040850152610140613cc787828801613af4565b6060860152610160613cdb88828901613af4565b60808701526101808088013560a08801528588013560c08801526101c088013560e08801526101e0880135858801526102008801358488015261022088013583880152610240880135828801526102608801358188015250505050505092915050565b600060608284031215613d4f578081fd5b613d596060614e56565b9050813560ff81168114613d6c57600080fd5b80825250602082013560208201526040820135604082015292915050565b600060208284031215613d9b578081fd5b813561236081614ea9565b600060208284031215613db7578081fd5b813567ffffffffffffffff811115613dcd578182fd5b613dd984828501613aff565b949350505050565b600080600060608486031215613df5578182fd5b833567ffffffffffffffff80821115613e0c578384fd5b613e1887838801613aff565b94506020860135915080821115613e2d578384fd5b613e3987838801613b79565b93506040860135915080821115613e4e578283fd5b50613e5b86828701613b79565b9150509250925092565b600060208284031215613e76578081fd5b81518015158114612360578182fd5b600060208284031215613e96578081fd5b5035919050565b60008060408385031215613eaf578182fd5b8235915060208084013567ffffffffffffffff80821115613ece578384fd5b818601915086601f830112613ee1578384fd5b813581811115613eef578485fd5b613f01601f8201601f19168501614e56565b91508082528784828501011115613f16578485fd5b8084840185840137810190920192909252919491935090915050565b600060208284031215613f43578081fd5b813560038110612360578182fd5b60006101008284031215613f63578081fd5b6123608383613be1565b6000806101608385031215613f80578182fd5b613f8a8484613be1565b9150613f9a846101008501613d3e565b90509250929050565b6000808284036102a0811215613fb7578283fd5b61028080821215613fc6578384fd5b9395938601359450505050565b60006102808284031215613fe5578081fd5b6123608383613c64565b60008060006103408486031215614004578081fd5b61400e8585613c64565b925061401e856102808601613d3e565b915061402e856102e08601613d3e565b90509250925092565b6000806102a0838503121561404a578182fd5b6140548484613c64565b94610280939093013593505050565b600060208284031215614074578081fd5b5051919050565b6000806040838503121561408d578182fd5b50508035926020909101359150565b60601b6bffffffffffffffffffffffff19169052565b60008151808452815b818110156140d7576020818501810151868301820152016140bb565b818111156140e85782602083870101525b50601f01601f19169290920160200192915050565b6000815460018082166000811461411b576001811461413957614177565b60028304607f16865260ff1983166020870152604086019350614177565b6002830480875261414986614e9d565b60005b8281101561416d5781546020828b010152848201915060208101905061414c565b8801602001955050505b50505092915050565b60008e82526bffffffffffffffffffffffff19808f60601b166020840152808e60601b166034840152808d60601b166048840152506141c2605c83018c61409c565b506070810198909852609088019690965260b087019490945260d086019290925260f08501526101108401526101308301526101508201526101700195945050505050565b9788526bffffffffffffffffffffffff19606097881b811660208a01529590961b909416603487015260488601929092526068850152608884015260a883015260c882015260e80190565b60008084546001808216600081146142715760018114614288576142b7565b60ff198316865260028304607f16860193506142b7565b600283048886526020808720875b838110156142af5781548a820152908501908201614296565b505050860193505b5050509283525050602001919050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03978816815295871660208701529390951660408501526060840191909152608083015260a082019290925260c081019190915260e00190565b6001600160a01b038c811682528b81166020830152604082018b9052891660608201526080810188905260a0810187905261016081016003871061439057fe5b8660c08301528560e08301528461010083015283610120830152600583106143b457fe5b826101408301529c9b505050505050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b8181101561444057835183529284019291840191600101614424565b50909695505050505050565b901515815260200190565b90815260200190565b93845260ff9290921660208401526040830152606082015260800190565b60006020825261236060208301846140b2565b60006020825261236060208301846140fd565b60208101600283106144b257fe5b91905290565b6020808252601c908201527f596f7520646f6e2774206861766520656e6f67687420746f6b656e7300000000604082015260600190565b60208082526021908201527f446973707574652068617320616c7265616479206265656e20637265617465646040820152601760f91b606082015260800190565b60208082526026908201527f54686520646973707574652068617320616c7265616479206265656e2072657360408201526537b63b32b21760d11b606082015260800190565b60208082526010908201526f105b1c9958591e48185c1c1c9bdd995960821b604082015260600190565b60208082526032908201527f4d757374206e6f742073656e642065766964656e63652069662074686520646960408201527139b83aba329034b9903932b9b7b63b32b21760711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f54696d656f75742074696d6520686173206e6f7420706173736564207965742e604082015260600190565b6020808252600f908201526e24b73b30b634b210393ab634b7339760891b604082015260600190565b6020808252601c908201527f57617272616e74792074696d65206861732074696d6564206f75742e00000000604082015260600190565b6020808252600d908201526c496e76616c696420706861736560981b604082015260600190565b60208082526031908201527f5468652070726f7365637574696f6e20666565206d75737420636f7665722061604082015270393134ba3930ba34b7b71031b7b9ba399760791b606082015260800190565b6020808252601e908201527f596f75206d75737420626520746865206c697374696e672073656c6c65720000604082015260600190565b6020808252601b908201527f596f7520646f6e2774206861766520656e6f6768742066756e64730000000000604082015260600190565b60208082526025908201527f44697370757465206973206e6f742077616974696e6720666f7220616e79207060408201526430b93a3c9760d91b606082015260800190565b60208082526026908201527f54686520607472616e73666572602066756e6374696f6e206d757374206e6f74604082015265103330b4b61760d11b606082015260800190565b60208082526017908201527f4f6e6c792062757965722063616e20646973707574652e000000000000000000604082015260600190565b60208082526018908201527f4f6e6c792073656c6c65722063616e20646973707574652e0000000000000000604082015260600190565b60208082526021908201527f4c697374696e672068617320616c7265616479206265656e207265706f7274656040820152601960fa1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f53656e646572206973206e6f74206f72646572207369676e6572000000000000604082015260600190565b6020808252601e908201527f5468652063616c6c6572206d757374206265207468652073656e6465722e0000604082015260600190565b6020808252818101527f436f6e6669726d6174696f6e2074696d65206861732074696d6564206f75742e604082015260600190565b6020808252601c908201527f53656e646572206973206e6f74206c697374696e67207369676e657200000000604082015260600190565b6020808252602b908201527f526566756e642063616e27742062652067726561746572207468616e20746f7460408201526a30b61030b63637bbb2b21760a91b606082015260800190565b6020808252602f908201527f45766964656e63657320617265206f6e6c7920616c6c6f77656420666f72206f60408201526e393232b939903234b9b83aba32b99760891b606082015260800190565b60208082526027908201527f596f7520617265206e6f7420616c6c6f77656420746f207265706f7274206c6960408201526639ba34b733b99760c91b606082015260800190565b6020808252602a908201527f56616c7565206d7573742062652067726561746572207468616e2061726269746040820152691c985d1a5bdb90dbdcdd60b21b606082015260800190565b6020808252602f908201527f596f75206d7573742062652073656c6c6572206f7220627579657220696e207460408201526e3432903934b3b43a10383430b9b29760891b606082015260800190565b6020808252600d908201526c24b73b30b634b21037b93232b960991b604082015260600190565b6020808252602d908201527f41707065616c7320617265206f6e6c7920616c6c6f77656420666f72206f726460408201526c32b939903234b9b83aba32b99760991b606082015260800190565b6020808252601190820152702cb7ba9036bab9ba10313290313abcb2b960791b604082015260600190565b6020808252818101527f4f7264657220616c726561647920686173206265656e2070726f636573736564604082015260600190565b60208082526022908201527f5468652063616c6c6572206d757374206265207468652061726269747261746f604082015261391760f11b606082015260800190565b60208082526021908201527f4661696c656420746f207472616e7366657220627579657227732066756e64736040820152601760f91b606082015260800190565b60208082526019908201527f556e61626c6520746f207472616e7366657220746f6b656e7300000000000000604082015260600190565b6020808252600f908201526e496e76616c6964206c697374696e6760881b604082015260600190565b60208082526034908201527f5468652063616c6c6572206d757374206265207468652070726f73656375746960408201527337b71037b9103a3432903232b332b73230b73a1760611b606082015260800190565b6020808252602e908201527f596f752063616e2774207265706f727420796f757273656c662e20557365206360408201526d616e63656c4c697374696e67282960901b606082015260800190565b600083825260406020830152613dd960408301846140fd565b918252602082015260400190565b9283526020830191909152604082015260600190565b84815260208101849052604081018390526080810160068310614e2b57fe5b82606083015295945050505050565b600060ff8416825260406020830152613dd960408301846140fd565b60405181810167ffffffffffffffff81118282101715614e7557600080fd5b604052919050565b600067ffffffffffffffff821115614e93578081fd5b5060209081020190565b60009081526020902090565b6001600160a01b0381168114614ebe57600080fd5b5056fea264697066735822122025e738af50c53d8589df729f6a4a167562123bb85452a34ac399afd60042f71664736f6c634300060c0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "201:5532:8:-:0;;;480:777;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;899:6;919:21;954:15;983:21;1018:22;1054:24;1092:11;865:17:27;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:27;-1:-1:-1;;;;;907:18:27;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:27;940:43;;907:6;;940:43;-1:-1:-1;5410:11:6::1;:35:::0;;-1:-1:-1;;;;;5410:35:6;;::::1;-1:-1:-1::0;;;;;;5410:35:6;;::::1;;::::0;;;5455:20:::1;:44:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5541:6:::1;5522:26:::0;;::::1;5509:10;:39:::0;5577:32;::::1;-1:-1:-1::0;5558:51:6;5619:21:::1;:46:::0;;;5675:23:::1;:50:::0;;;5735:24;;::::1;::::0;:10:::1;::::0;:24:::1;::::0;::::1;::::0;::::1;:::i;:::-;;5113:653:::0;;;;;;;1152:11:8::1;1128:10;;:36;;;;;-1:-1:-1::0;;;;;1128:36:8::1;;;;;-1:-1:-1::0;;;;;1128:36:8::1;;;;;;1192:16;1174:15;:34;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1218:32:8;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;480:777:::0;;;;;;;;;;201:5532;;590:104:26;677:10;590:104;:::o;201:5532:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:5532:8;;;-1:-1:-1;201:5532:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;-1:-1;;;;;4065:54;;4546:35;;4536:2;;4595:1;;4585:12;4536:2;68:71;;;;:::o;147:442::-;;259:3;252:4;244:6;240:17;236:27;226:2;;-1:-1;;267:12;226:2;301:13;;-1:-1;;;;;3380:30;;;3377:2;;;-1:-1;;3413:12;3377:2;3047;3041:9;3554:4;3486:9;3467:17;;-1:-1;;3463:33;3073:17;;;;3133:34;;;3169:22;;;3130:62;3127:2;;;-1:-1;;3195:12;3127:2;3225:10;3047:2;3214:22;;320:73;;;413:6;406:5;399:21;517:3;3554:4;508:6;441;499:16;;496:25;493:2;;;534:1;;524:12;493:2;4276:1;4267:10;;4283:101;4297:6;4294:1;4291:13;4283:101;;;4364:11;;;;;4358:18;4345:11;;;;;4338:39;4312:10;;;;4283:101;;;4399:6;4396:1;4393:13;4390:2;;;4276:1;3554:4;4455:6;475:5;4446:16;;4439:27;4390:2;;;;;219:370;;;;:::o;1191:1787::-;;;;;;;;;;;1487:3;1475:9;1466:7;1462:23;1458:33;1455:2;;;-1:-1;;1494:12;1455:2;1556:64;1612:7;1588:22;1556:64;:::i;:::-;1546:74;;1675:64;1731:7;1657:2;1711:9;1707:22;1675:64;:::i;:::-;1665:74;;1794:64;1850:7;1776:2;1830:9;1826:22;1794:64;:::i;:::-;1784:74;;1895:2;1949:9;1945:22;1128:13;1903:74;;2014:3;2069:9;2065:22;1128:13;2023:74;;2134:3;2189:9;2185:22;1128:13;2143:74;;2254:3;2309:9;2305:22;1128:13;2263:74;;2395:3;2384:9;2380:19;2374:26;4076:42;;3391:18;;;2420;2412:6;2409:30;2406:2;;;-1:-1;;2442:12;2406:2;2472:73;2537:7;2528:6;2517:9;2513:22;2472:73;:::i;:::-;2462:83;;2603:3;2592:9;2588:19;2582:26;2568:40;;2420:18;2620:6;2617:30;2614:2;;;-1:-1;;2650:12;2614:2;2680:73;2745:7;2736:6;2725:9;2721:22;2680:73;:::i;:::-;2670:83;;2811:3;2800:9;2796:19;2790:26;2776:40;;2420:18;2828:6;2825:30;2822:2;;;-1:-1;;2858:12;2822:2;;2888:74;2954:7;2945:6;2934:9;2930:22;2888:74;:::i;:::-;2878:84;;;1449:1529;;;;;;;;;;;;;:::o;:::-;201:5532:8;;;;;;",
  "deployedSourceMap": "201:5532:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:50:6;;;;;;;;;;-1:-1:-1;4419:50:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;9358:1089;;;;;;;;;;-1:-1:-1;9358:1089:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11198:1221::-;;;;;;;;;;-1:-1:-1;11198:1221:6;;;;;:::i;:::-;;:::i;:::-;;4178:762:8;;;;;;;;;;-1:-1:-1;4178:762:8;;;;;:::i;:::-;;:::i;6320:416:6:-;;;;;;;;;;-1:-1:-1;6320:416:6;;;;;:::i;:::-;;:::i;1610:344:8:-;;;;;;:::i;:::-;;:::i;5027:38:6:-;;;;;;;;;;;;;:::i;5945:134::-;;;;;;;;;;-1:-1:-1;5945:134:6;;;;;:::i;:::-;;:::i;862:177:5:-;;;;;;;;;;-1:-1:-1;862:177:5;;;;;:::i;:::-;;:::i;4916:32:6:-;;;;;;;;;;;;;:::i;242:614:5:-;;;;;;;;;;-1:-1:-1;242:614:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14535:1011:6:-;;;;;;;;;;-1:-1:-1;14535:1011:6;;;;;:::i;:::-;;:::i;4334:51::-;;;;;;;;;;-1:-1:-1;4334:51:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5071:35::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4760:41::-;;;;;;;;;;-1:-1:-1;4760:41:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6742:785::-;;;;;;;;;;-1:-1:-1;6742:785:6;;;;;:::i;:::-;;:::i;257:28:8:-;;;;;;;;;;;;;:::i;3942:41:6:-;;;;;;;;;;-1:-1:-1;3942:41:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;5331:400:8:-;;;;;;;;;;-1:-1:-1;5331:400:8;;;;;:::i;:::-;;:::i;1689:145:27:-;;;;;;;;;;;;;:::i;19921:1219:6:-;;;;;;;;;;-1:-1:-1;19921:1219:6;;;;;:::i;:::-;;:::i;8138:628::-;;;;;;;;;;-1:-1:-1;8138:628:6;;;;;:::i;:::-;;:::i;4051:52::-;;;;;;;;;;-1:-1:-1;4051:52:6;;;;;:::i;:::-;;:::i;1263:341:8:-;;;;;;:::i;:::-;;:::i;10453:739:6:-;;;;;;;;;;-1:-1:-1;10453:739:6;;;;;:::i;:::-;;:::i;4281:46::-;;;;;;;;;;-1:-1:-1;4281:46:6;;;;;:::i;:::-;;:::i;1066:77:27:-;;;;;;;;;;;;;:::i;4985:36:6:-;;;;;;;;;;;;;:::i;13843:686::-;;;;;;;;;;-1:-1:-1;13843:686:6;;;;;:::i;:::-;;:::i;4559:31::-;;;;;;;;;;;;;:::i;4954:24::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4878:32::-;;;;;;;;;;;;;:::i;34479:423::-;;;;;;;;;;-1:-1:-1;34479:423:6;;;;;:::i;:::-;;:::i;4596:25::-;;;;;;;;;;;;;:::i;405:27:8:-;;;;;;;;;;;;;:::i;4502:50:6:-;;;;;;;;;;-1:-1:-1;4502:50:6;;;;;:::i;:::-;;:::i;21146:1845::-;;;;;;:::i;:::-;;:::i;294:51::-;;;;;;;;;;;;;:::i;5772:167::-;;;;;;;;;;-1:-1:-1;5772:167:6;;;;;:::i;:::-;;:::i;34016:457::-;;;;;;;;;;-1:-1:-1;34016:457:6;;;;;:::i;:::-;;:::i;6085:229::-;;;;;;;;;;-1:-1:-1;6085:229:6;;;;;:::i;:::-;;:::i;4946:379:8:-;;;;;;:::i;:::-;;:::i;330:28::-;;;;;;;;;;;;;:::i;1983:240:27:-;;;;;;;;;;-1:-1:-1;1983:240:27;;;;;:::i;:::-;;:::i;3377:795:8:-;;;;;;;;;;-1:-1:-1;3377:795:8;;;;;:::i;:::-;;:::i;4419:50:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4419:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9358:1089::-;9496:12;9527:47;9545:6;9553:8;9563:10;9527:17;:47::i;:::-;9584:31;9618:18;;;:12;:18;;;;;9520:54;;-1:-1:-1;9667:18:6;;;;;;:42;;;;;;;;;9646:121;;;;-1:-1:-1;;;9646:121:6;;;;;;;:::i;:::-;;;;;;;;;9798:6;:12;;;-1:-1:-1;;;;;9798:25:6;;9841:6;:18;;;9885:4;9908:6;:12;;;9798:136;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9777:216;;;;-1:-1:-1;;;9777:216:6;;;;;;;:::i;:::-;10034:3;10003:34;;10047:18;;;:47;;10068:26;;10047:18;-1:-1:-1;;10047:47:6;10068:26;;10047:47;;;;;10185:6;:14;;;:21;;;-1:-1:-1;;;;;10109:331:6;10159:6;:12;;;-1:-1:-1;;;;;10109:331:6;10141:4;10109:331;10220:6;:14;;;:25;;;10259:6;:19;;;10292:6;:12;;;10318:6;:12;;;10344:6;:17;;;10375:6;:15;;;10404:6;:26;;;10109:331;;;;;;;;;;;;:::i;:::-;;;;;;;;9358:1089;;;;;;:::o;11198:1221::-;11264:12;11279:23;11295:6;11279:15;:23::i;:::-;11312:31;11346:18;;;:12;:18;;;;;11264:38;;-1:-1:-1;11417:26:6;11395:18;;;;;;:48;;;;;;;;;:105;;;-1:-1:-1;11485:15:6;11463:18;;;;;;:37;;;;;;;;;11395:105;:174;;;-1:-1:-1;11542:27:6;11520:18;;;;;;:49;;;;;;;;;11395:174;11374:234;;;;-1:-1:-1;;;11374:234:6;;;;;;;:::i;:::-;11618:26;11693;11671:18;;;;;;:48;;;;;;;;;:113;;;-1:-1:-1;11757:27:6;11735:18;;;;;;:49;;;;;;;;;11671:113;11654:722;;;11917:6;:26;;;11947:6;11917:37;11861:11;:28;;;:94;11834:3;:121;;11809:212;;;;-1:-1:-1;;;11809:212:6;;;;;;;:::i;:::-;-1:-1:-1;12056:1:6;11654:722;;;12196:14;;:23;;;12140:28;;12223:6;12196:34;;;12140:91;12113:3;:118;;12088:209;;;;-1:-1:-1;;;12088:209:6;;;;;;;:::i;:::-;-1:-1:-1;12332:14:6;;:33;;;11654:722;12385:27;12405:6;12385:19;:27::i;:::-;11198:1221;;;;:::o;4178:762:8:-;4255:12;4270:27;;;:15;:27;;;;;;;;;4340:14;;;:8;:14;;;;;;4409:10;;-1:-1:-1;;;;;4409:10:8;4385:12;:10;:12::i;:::-;-1:-1:-1;;;;;4385:35:8;;4364:116;;;;-1:-1:-1;;;4364:116:8;;;;;;;:::i;:::-;4529:28;4511:14;;;;;;:46;;;;;;;;;4490:131;;;;-1:-1:-1;;;4490:131:8;;;;;;;:::i;:::-;4669:10;4654:12;:10;:12::i;:::-;-1:-1:-1;;;;;4636:53:8;;4681:7;4636:53;;;;;;:::i;:::-;;;;;;;;4726:18;4703:19;;;;;;:41;;;;;;;;;4699:235;;;4760:37;4780:7;4789;4760:19;:37::i;:::-;4699:235;;;4828:37;4848:7;4857;4828:19;:37::i;:::-;-1:-1:-1;4879:18:8;;;;:12;:18;;;;;:25;;:44;;-1:-1:-1;;4879:44:8;4907:16;4879:44;;;-1:-1:-1;;4178:762:8:o;6320:416:6:-;6376:21;6400:7;:21;6408:12;:10;:12::i;:::-;-1:-1:-1;;;;;6400:21:6;-1:-1:-1;;;;;6400:21:6;;;;;;;;;;;;6376:45;;6492:5;6469:6;:19;;;6452:6;:14;;;:36;:45;;6431:120;;;;-1:-1:-1;;;6431:120:6;;;;;;;:::i;:::-;6569:11;;-1:-1:-1;;;;;6569:11:6;:24;6594:12;:10;:12::i;:::-;6616:4;6623:5;6569:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6561:69;;;;;;6673:5;6640:7;:21;6648:12;:10;:12::i;:::-;-1:-1:-1;;;;;6640:21:6;;;;;;;;;;;;-1:-1:-1;6640:21:6;:38;;;;;;;;6709:12;:10;:12::i;:::-;-1:-1:-1;;;;;6693:36:6;;6723:5;6693:36;;;;;;:::i;:::-;;;;;;;;6320:416;;:::o;1610:344:8:-;1724:12;1759:33;1785:6;1759:25;:33::i;:::-;1833:14;;;;:8;:14;;;;;;;;;:29;;;1912:14;;:23;1883:53;;1752:40;;-1:-1:-1;1833:29:8;1807:140;;1883:53;;1900:10;;1883:53;;:::i;:::-;;;;-1:-1:-1;;1883:53:8;;;;;;;;;;1807:140;;;:::i;:::-;;;;;;;;1610:344;;;:::o;5027:38:6:-;;;;:::o;5945:134::-;1280:12:27;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:27;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;6016:15:6;::::1;6034:5;6016:15:::0;;;:9:::1;:15;::::0;;;;;:23;;-1:-1:-1;;6016:23:6::1;::::0;;6054:18;::::1;::::0;6034:5;6054:18:::1;5945:134:::0;:::o;862:177:5:-;940:9;935:98;959:6;:13;955:1;:17;935:98;;;993:29;1012:6;1019:1;1012:9;;;;;;;;;;;;;;993:18;:29::i;:::-;974:3;;935:98;;;;862:177;:::o;4916:32:6:-;;;;:::o;242:614:5:-;405:23;478:15;:22;461:6;:13;:39;:109;;;;;546:17;:24;520:15;:22;:50;461:109;440:140;;;;;;613:6;:13;599:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:28:5;;590:37;;642:9;637:213;661:6;:13;657:1;:17;637:213;;;707:132;742:6;749:1;742:9;;;;;;;;;;;;;;769:15;785:1;769:18;;;;;;;;;;;;;;805:17;823:1;805:20;;;;;;;;;;;;;;707:17;:132::i;:::-;695:6;702:1;695:9;;;;;;;;;;;;;;;;;:144;676:3;;637:213;;;;242:614;;;;;:::o;14535:1011:6:-;14648:14;;:21;;;-1:-1:-1;;;;;14632:37:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14632:37:6;;14611:114;;;;-1:-1:-1;;;14611:114:6;;;;;;;:::i;:::-;14735:12;14750:23;14766:6;14750:15;:23::i;:::-;14783:31;14817:18;;;:12;:18;;;;;14735:38;;-1:-1:-1;14888:26:6;14866:18;;;;;;:48;;;;;;;;;14845:108;;;;-1:-1:-1;;;14845:108:6;;;;;;;:::i;:::-;15059:6;:26;;;15089:6;15059:37;15007:11;:28;;;:90;14984:3;:113;;14963:192;;;;-1:-1:-1;;;14963:192:6;;;;;;;:::i;:::-;15373:6;:12;;;15335:6;:17;;;15291:6;:21;;;15250:6;:18;;;15212:6;:15;;;:56;:100;:140;15186:6;:167;:199;;15165:289;;;;-1:-1:-1;;;15165:289:6;;;;;;;:::i;:::-;15485:6;15464:11;:18;;:27;;;;15526:4;15506:33;15532:6;15506:33;;;;;;:::i;:::-;;;;;;;;14535:1011;;;;:::o;4334:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5071:35::-;;;-1:-1:-1;;;;;5071:35:6;;:::o;4760:41::-;;;;;;;;;;;;;;;:::o;6742:785::-;6807:4;6943:8;:19;;;-1:-1:-1;;;;;6927:35:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6927:35:6;;6906:110;;;;-1:-1:-1;;;6906:110:6;;;;;;;:::i;:::-;7080:8;:21;;;7047:7;:21;7055:12;:10;:12::i;:::-;-1:-1:-1;;;;;7047:21:6;;;;;;;;;;;;-1:-1:-1;7047:21:6;:29;:54;;7026:128;;;;-1:-1:-1;;;7026:128:6;;;;;;;:::i;:::-;7202:12;7217:27;7235:8;7217:17;:27::i;:::-;7323:20;;;;:14;:20;;;;;;7202:42;;-1:-1:-1;7323:20:6;;7322:21;7314:50;;;;-1:-1:-1;;;7314:50:6;;;;;;;:::i;:::-;7436:20;;;;:14;:20;;;;;;:27;;-1:-1:-1;;7436:27:6;7459:4;7436:27;;;7478:21;7451:4;;7478:21;;;7516:4;7509:11;;;6742:785;;;;:::o;257:28:8:-;;;-1:-1:-1;;;;;257:28:8;;:::o;3942:41:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5331:400:8:-;5437:11;;5472:5;:24;;;;;;;;;5464:33;;;;;;5520:18;5511:5;:27;;;;;;;;;5507:218;;;5560:10;;:43;;-1:-1:-1;;;5560:43:8;;-1:-1:-1;;;;;5560:10:8;;;;:26;;:43;;5587:15;;5560:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5554:49;;5507:218;;;5633:17;5624:5;:26;;;;;;;;;5620:105;;;5672:10;;:42;;-1:-1:-1;;;5672:42:8;;-1:-1:-1;;;;;5672:10:8;;;;:26;;:42;;5699:14;;5672:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5666:48;5331:400;-1:-1:-1;;5331:400:8:o;1689:145:27:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:27;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:27;;;;;;;:::i;:::-;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:27;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:27::1;::::0;;1689:145::o;19921:1219:6:-;19976:30;20009:14;;;:8;:14;;;;;20080;;;;;;20054:40;;;;;;;;:23;:40;:105;;;;-1:-1:-1;20131:28:6;20114:14;;;;;;:45;;;;;;;;;20054:105;20033:189;;;;-1:-1:-1;;;20033:189:6;;;;;;;:::i;:::-;20286:10;;20259:7;:23;;;20253:3;:29;:43;;20232:122;;;;-1:-1:-1;;;20232:122:6;;;;;;;:::i;:::-;20364:12;20390:7;:22;;;20416:1;20390:27;20386:226;;20458:22;;;;;20433;20494:26;;;20548:19;;:53;;-1:-1:-1;;;;;20548:19:6;;;;20458:22;;20548:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20534:67:6;;-1:-1:-1;;;20386:226:6;20625:20;;;;:25;20621:214;;20689:20;;;;;20666;20723:24;;;-1:-1:-1;20775:17:6;;;:49;;-1:-1:-1;;;;;20775:17:6;;;;20689:20;;20775:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20761:63:6;;-1:-1:-1;;;20621:214:6;20866:30;20848:14;;;;;;:48;;;;;;;;;20844:290;;;20912:114;20949:7;20982:29;20974:38;20912:19;:114::i;:::-;20844:290;;;21057:66;21077:7;21094:27;21086:36;;21057:66;19921:1219;;;:::o;8138:628::-;8196:4;8332:5;:17;;;-1:-1:-1;;;;;8316:33:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8316:33:6;;8295:106;;;;-1:-1:-1;;;8295:106:6;;;;;;;:::i;:::-;8449:12;8464:22;8480:5;8464:15;:22::i;:::-;8565:20;;;;:14;:20;;;;;;8449:37;;-1:-1:-1;8565:20:6;;8564:21;8556:50;;;;-1:-1:-1;;;8556:50:6;;;;;;;:::i;:::-;8676:20;;;;:14;:20;;;;;;:27;;-1:-1:-1;;8676:27:6;8699:4;8676:27;;;8719:19;8691:4;;8719:19;;;-1:-1:-1;8755:4:6;;8138:628;-1:-1:-1;;8138:628:6:o;4051:52::-;;;;;;;;;;;;;;;:::o;1263:341:8:-;1385:12;1420:28;1434:8;1444:3;1420:13;:28::i;:::-;1489:14;;;;:8;:14;;;;;;;;;:29;;;1568:17;;1539:47;;1413:35;;-1:-1:-1;1489:29:8;1463:134;;1539:47;;1556:10;;1539:47;;:::i;:::-;;;;-1:-1:-1;;1539:47:8;;;;;;;;;;1463:134;;;:::i;:::-;;;;;;;;1263:341;;;;:::o;10453:739:6:-;10515:12;10530:23;10546:6;10530:15;:23::i;:::-;10563:31;10597:18;;;:12;:18;;;;;10515:38;;-1:-1:-1;10669:26:6;10647:18;;;;;;:48;;;;;;;;;:96;;;;;10731:6;:12;;;-1:-1:-1;;;;;10715:28:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;10715:28:6;;10647:96;10646:230;;;-1:-1:-1;10787:27:6;10765:18;;;;;;:49;;;;;;;;;:110;;;;-1:-1:-1;10854:14:6;;:21;;;-1:-1:-1;;;;;10838:37:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;10838:37:6;;10765:110;10625:324;;;;-1:-1:-1;;;10625:324:6;;;;;;;:::i;:::-;10963:18;;;;:23;:54;;;;-1:-1:-1;10990:14:6;;:23;;;:27;;10963:54;10959:227;;;11033:18;;;:36;;-1:-1:-1;;11033:36:6;11054:15;11033:36;;;11114:3;11083:34;;10959:227;;;11148:27;11168:6;11148:19;:27::i;4281:46::-;;;;;;;;;;;;;;;:::o;1066:77:27:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:27;1066:77;:::o;4985:36:6:-;;;;:::o;13843:686::-;13904:12;13919:23;13935:6;13919:15;:23::i;:::-;13952:31;13986:18;;;:12;:18;;;;;13904:38;;-1:-1:-1;14044:15:6;14022:18;;;;;;:37;;;;;;;;;14014:63;;;;-1:-1:-1;;;14014:63:6;;;;;;;:::i;:::-;14111:6;:12;;;-1:-1:-1;;;;;14095:28:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14095:28:6;;14087:58;;;;-1:-1:-1;;;14087:58:6;;;;;;;:::i;:::-;14251:14;;:23;;;14199:28;;14278:6;14251:34;;;14199:87;14176:3;:110;;14155:185;;;;-1:-1:-1;;;14155:185:6;;;;;;;:::i;:::-;14372:27;14351:18;;;:48;;-1:-1:-1;;14351:48:6;;;;;;14430:12;;;;14351:48;14409:18;;:33;14483:3;14452:34;;14501:21;;14517:4;;14501:21;;-1:-1:-1;;14501:21:6;13843:686;;;:::o;4559:31::-;;;;:::o;4954:24::-;;;;;;;;;;;;;;;-1:-1:-1;;4954:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4878:32::-;;;-1:-1:-1;;;;;4878:32:6;;:::o;34479:423::-;34545:7;34564:31;34598:12;:37;34611:23;34627:6;34611:15;:23::i;:::-;34598:37;;;;;;;;;;;34564:71;;34877:6;:17;;;34837:6;:21;;;34800:6;:18;;;34766:6;:15;;;34729:11;:18;;;34692:11;:18;;;:55;:89;:126;:166;:202;34664:6;:12;;;:231;34645:250;;;34479:423;;;:::o;4596:25::-;;;;:::o;405:27:8:-;;;;;;;;;;;;;;;-1:-1:-1;;405:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4502:50:6;;;;;;;;;;;;;:::o;21146:1845::-;21212:30;21245:14;;;:8;:14;;;;;21311:19;;;;21245:14;;21212:30;21295:36;;21311:19;;21295:15;:36::i;:::-;21388:14;;;;21269:62;;-1:-1:-1;21388:14:6;;21362:40;;;;;;;;:23;:40;:105;;;;-1:-1:-1;21439:28:6;21422:14;;;;;;:45;;;;;;;;;21362:105;21341:185;;;;-1:-1:-1;;;21341:185:6;;;;;;;:::i;:::-;21573:19;;-1:-1:-1;;;;;21573:19:6;21557:12;:10;:12::i;:::-;-1:-1:-1;;;;;21557:35:6;;:88;;;-1:-1:-1;21628:17:6;;;;-1:-1:-1;;;;;21628:17:6;21612:12;:10;:12::i;:::-;-1:-1:-1;;;;;21612:33:6;;21557:88;21536:165;;;;-1:-1:-1;;;21536:165:6;;;;;;;:::i;:::-;21732:19;;-1:-1:-1;;;;;21732:19:6;21716:12;:10;:12::i;:::-;-1:-1:-1;;;;;21716:35:6;;21712:1273;;;21767:22;;;:35;;21793:9;21767:35;;;;;21841:41;-1:-1:-1;21841:41:6;21816:149;;;;-1:-1:-1;;;21816:149:6;;;;;;;:::i;:::-;22005:3;21979:23;;;:29;22026:20;;;;:38;-1:-1:-1;22022:333:6;;;22084:14;;;:47;;-1:-1:-1;;22084:47:6;22101:30;22084:47;;;22154:34;;22166:4;;22154:34;;;;22084:47;;22154:34;:::i;:::-;;;;;;;;22022:333;;;22305:35;22318:4;22324:15;22305:12;:35::i;21712:1273::-;22385:20;;;:33;;22409:9;22385:33;;;;;22457:39;-1:-1:-1;22457:39:6;22432:147;;;;-1:-1:-1;;;22432:147:6;;;;;;;:::i;:::-;22619:3;22593:23;;;:29;22640:22;;;;:40;-1:-1:-1;22636:339:6;;;22700:14;;;:49;;-1:-1:-1;;22700:49:6;22717:32;22700:49;;;22772:36;;22784:4;;22772:36;;;;-1:-1:-1;;22772:36:6;:::i;:::-;;;;;;;;22636:339;;;22925:35;22938:4;22944:15;22925:12;:35::i;294:51::-;340:5;294:51;:::o;5772:167::-;1280:12:27;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:27;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;5851:15:6;::::1;;::::0;;;:9:::1;:15;::::0;;;;;::::1;;5850:16;5842:25;;;::::0;::::1;;-1:-1:-1::0;;;;;5877:15:6;::::1;;::::0;;;:9:::1;:15;::::0;;;;;:22;;-1:-1:-1;;5877:22:6::1;5895:4;5877:22;::::0;;5914:18;::::1;::::0;5877:15;5914:18:::1;5772:167:::0;:::o;34016:457::-;34093:31;34127:12;34093:31;34140:23;;;;;;;;34156:6;34140:23;:::i;:::-;:15;:23::i;:::-;34127:37;;;;;;;;;;;-1:-1:-1;34127:37:6;;;;-1:-1:-1;34195:18:6;;;;;;:41;;;;;;;;;:98;;;;-1:-1:-1;34277:16:6;34256:18;;;;;;:37;;;;;;;;;34195:98;34174:129;;;;;;34347:3;34321:22;;;;;;;;34336:6;34321:22;:::i;:::-;:29;;34313:38;;;;;;34361:18;;;:25;;;;;;34396:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34396:21:6;;34418:12;:10;:12::i;:::-;34432:3;34396:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6085:229::-;6148:11;;-1:-1:-1;;;;;6148:11:6;:24;6173:12;:10;:12::i;:::-;6195:4;6202:5;6148:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6140:69;;;;;;6252:5;6219:7;:21;6227:12;:10;:12::i;:::-;-1:-1:-1;;;;;6219:21:6;;;;;;;;;;;;-1:-1:-1;6219:21:6;:38;;;;;;;6287:12;:10;:12::i;:::-;-1:-1:-1;;;;;6272:35:6;;6301:5;6272:35;;;;;;:::i;:::-;;;;;;;;6085:229;:::o;4946:379:8:-;5011:30;5044:15;;;:8;:15;;;;;5113:17;5090:19;;;;;;:40;;;;;;;;;5069:132;;;;-1:-1:-1;;;5069:132:8;;;;;;;:::i;:::-;5212:10;;5263:17;;;;5212:106;;-1:-1:-1;;;5212:106:8;;-1:-1:-1;;;;;5212:10:8;;;;:17;;5238:9;;5212:106;;5263:17;5294:14;;5212:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4946:379;;:::o;330:28::-;;;;;;;;;;;;;;;-1:-1:-1;;330:28:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:240:27;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:27;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:27;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:27::1;;;;;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:27;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:27::1;-1:-1:-1::0;;;;;2199:17:27;;;::::1;::::0;;;::::1;::::0;;1983:240::o;3377:795:8:-;3487:30;3520:15;;;:8;:15;;;;;3582:19;;-1:-1:-1;;;;;3582:19:8;3566:12;:10;:12::i;:::-;-1:-1:-1;;;;;3566:35:8;;:88;;;-1:-1:-1;3637:17:8;;;;-1:-1:-1;;;;;3637:17:8;3621:12;:10;:12::i;:::-;-1:-1:-1;;;;;3621:33:8;;3566:88;3545:187;;;;-1:-1:-1;;;3545:187:8;;;;;;;:::i;:::-;3786:17;3763:19;;;;;;:40;;;;;;;;;3742:134;;;;-1:-1:-1;;;3742:134:8;;;;;;;:::i;:::-;3924:22;3907:14;;;;;;:39;;;;;;;;;3886:136;;;;-1:-1:-1;;;3886:136:8;;;;;;;:::i;:::-;4120:12;:10;:12::i;:::-;4084:22;;;;4060:10;;4038:127;;-1:-1:-1;;;;;4038:127:8;;;;4060:10;;;;4038:127;;;;4146:9;;4038:127;:::i;:::-;;;;;;;;3377:795;;;:::o;33299:506:6:-;33443:12;33488:138;33521:32;33539:5;:13;;;33521:17;:32::i;:::-;33571:13;;33602:10;33488:15;:138::i;:::-;33467:200;;;;-1:-1:-1;;;33467:200:6;;;;;;;:::i;:::-;33698:61;33719:22;33735:5;33719:15;:22::i;:::-;33712:29;;;33743:5;33750:8;33698:13;:61::i;:::-;33677:121;;;;-1:-1:-1;;;33677:121:6;;;;;;;:::i;:::-;33299:506;;;;;:::o;32853:157::-;32945:7;32975:28;32986:16;32996:5;32986:9;:16::i;:::-;32975:10;:28::i;12425:1412::-;12493:12;12508:22;12524:5;12508:15;:22::i;:::-;12540:31;12574:18;;;:12;:18;;;;;12619;;;;12676:11;;;;12493:37;;-1:-1:-1;12574:18:6;;12619;;12540:31;12663:33;;12619:18;12663:12;:33::i;:::-;12707:18;;;:37;;-1:-1:-1;;12707:37:6;12728:16;12707:37;;;-1:-1:-1;12754:35:6;;;12707:37;12806:18;;12799:25;12839:17;;;;12647:49;;-1:-1:-1;12839:21:6;12835:192;;12885:17;;;;12941:11;;;;12962:20;;12941:61;;-1:-1:-1;;;12941:61:6;;12876:26;;;;;-1:-1:-1;;;;;12941:20:6;;;;;;:61;;12962:20;;12941:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12916:100;;;;;;13041:20;;;;:24;13037:283;;13089:41;13102:5;13109;:20;;;13089:12;:41::i;:::-;13081:49;;13169:5;:11;;;-1:-1:-1;;;;;13169:20:6;;13211:5;:13;;;:24;;;13257:5;:20;;;13169:126;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13144:165;;;;;;13334:16;;;;:20;13330:157;;13379:16;;;;13417:11;;;;13438:18;;;;13417:58;;-1:-1:-1;;;13417:58:6;;13370:25;;;;;-1:-1:-1;;;;;13417:20:6;;;;;;:58;;13438:18;13379:16;13417:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13409:67;;;;;;13501:14;;;;:18;13497:185;;13544:14;;;;13597:11;;;;13618;;;;;13597:60;;-1:-1:-1;;;13597:60:6;;13535:23;;;;;-1:-1:-1;;;;;13597:20:6;;;;;;:60;;13618:11;13632:23;;;13597:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13572:99;;;;;;13696:9;;13692:98;;13729:11;;;;13750:13;;:20;;;13729:49;;-1:-1:-1;;;13729:49:6;;-1:-1:-1;;;;;13729:20:6;;;;;;:49;;13772:5;;13729:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13721:58;;;;;;13804:26;;13825:4;;13804:26;;;;;12425:1412;;;;;:::o;590:104:26:-;677:10;590:104;:::o;25887:2156:6:-;387:1;26014:28;;;26006:56;;;;-1:-1:-1;;;26006:56:6;;;;;;;:::i;:::-;26090:14;;;;;26139:22;;;;;;26194:20;;;;;26073:14;26225:18;;;;26253:26;;;;26289:24;;;26323:14;;;:39;;-1:-1:-1;;26323:39:6;;;;;;;-1:-1:-1;26372:28:6;;;;26449:17;;;;-1:-1:-1;;;;;26449:17:6;26441:26;;26090:14;;26139:22;;26194:20;;26073:14;26667:49;;26663:1374;;;26746:19;;:53;;-1:-1:-1;;;;;26746:19:6;;;;26779:14;;26746:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26813:7:6;26821:17;;;;-1:-1:-1;;;;;26821:17:6;;;26813:26;;;;;;;;;;;;;:44;;;;;;;26879:19;;;;26871:28;;;;;:50;;26920:1;26911:10;;;26871:50;;;;;;26935:11;;26732:67;;-1:-1:-1;26935:11:6;;;:16;;26813:44;26962:10;;26952:6;:21;26935:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26663:1374;;;27014:27;26995:7;:47;26991:1046;;;27072:17;;;;:49;;-1:-1:-1;;;;;27072:17:6;;;;27103:12;;27072:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27220:16:6;;27143:19;;-1:-1:-1;;;;;27143:19:6;;;27135:28;;;;:7;:28;;;;;;;;27198:3;:38;;;27135:44;;;;:101;27258:19;;;;27250:28;;;;;:46;;;;;;;27318:17;;;;;;27310:26;;;;:48;;27348:10;;;27310:48;;;27372:11;;27058:63;;-1:-1:-1;27372:11:6;;;;;:16;;27250:46;27399:10;;26991:1046;27598:17;;;;:99;;27569:1;27552:18;;;-1:-1:-1;;;;;27598:17:6;;27645:34;;;;27598:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27725:19:6;;:86;;27584:113;;-1:-1:-1;;;;;;27725:19:6;;27774;;27725:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27922:19:6;;-1:-1:-1;;;;;27922:19:6;;;27914:28;;;;:7;:28;;;;;;;;:50;;27963:1;27954:10;;27914:50;;;;;;;27986:17;;;;;;;27978:26;;;;;:48;;;;;;;;27711:100;-1:-1:-1;;26991:1046:6;25887:2156;;;;;;:::o;23659:2098::-;387:1;23786:28;;;23778:56;;;;-1:-1:-1;;;23778:56:6;;;;;;;:::i;:::-;23862:14;;;;;23911:22;;;;;;23966:20;;;;;23845:14;23997:18;;;;24025:26;;;;24061:24;;;24095:14;;;:39;;-1:-1:-1;;24095:39:6;;;;;;;23862:14;;23911:22;;23966:20;-1:-1:-1;24303:49:6;;24299:1452;;;24382:19;;:53;;-1:-1:-1;;;;;24382:19:6;;;;24415:14;;24382:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24474:13:6;;;;24497:19;;24474:51;;-1:-1:-1;;;24474:51:6;;24368:67;;-1:-1:-1;;;;;;24474:13:6;;;;:22;;:51;;24497:19;;24518:6;;24474:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24449:148;;;;-1:-1:-1;;;24449:148:6;;;;;;;:::i;:::-;24299:1452;;;24637:27;24618:7;:47;24614:1137;;;24695:17;;;;:49;;-1:-1:-1;;;;;24695:17:6;;;;24726:12;;24695:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24783:13:6;;;;;24806:17;;;24783:49;;-1:-1:-1;;;24783:49:6;;24681:63;;-1:-1:-1;;;;;;24783:13:6;;;;:22;;:49;;24806:17;;24825:6;;24783:49;;;:::i;24614:1137::-;25161:17;;;;:99;;25062:1;25045:18;;;-1:-1:-1;;;;;25161:17:6;;25208:34;;;;25161:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25288:19:6;;:86;;25147:113;;-1:-1:-1;;;;;;25288:19:6;;25337;;25288:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25452:13:6;;;;;25475:17;;;25452:56;;-1:-1:-1;;;25452:56:6;;25274:100;;-1:-1:-1;25412:1:6;25403:10;;;-1:-1:-1;;;;;25452:13:6;;;;:22;;:56;;25475:17;;;25494:13;;;;25452:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25427:153;;;;-1:-1:-1;;;25427:153:6;;;;;;;:::i;:::-;25619:13;;;;25642:19;;25619:49;;-1:-1:-1;;;25619:49:6;;-1:-1:-1;;;;;25619:13:6;;;;:22;;:49;;25642:19;;;25663:4;;25619:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25594:146;;;;-1:-1:-1;;;25594:146:6;;;;;;;:::i;:::-;24614:1137;;23659:2098;;;;;;:::o;17378:1672::-;17491:12;17526:23;17542:6;17526:15;:23::i;:::-;17559:31;17593:18;;;:12;:18;;;;;17519:30;;-1:-1:-1;17664:26:6;17642:18;;;;;;:48;;;;;;;;;:117;;;-1:-1:-1;17732:27:6;17710:18;;;;;;:49;;;;;;;;;17642:117;17621:177;;;;-1:-1:-1;;;17621:177:6;;;;;;;:::i;:::-;17904:6;:26;;;17934:6;17904:37;17852:11;:28;;;:90;17829:3;:113;;17808:192;;;;-1:-1:-1;;;17808:192:6;;;;;;;:::i;:::-;18010:23;18036:34;18052:17;18036:15;:34::i;:::-;18010:60;;18114:15;18101:9;:28;;18080:117;;;;-1:-1:-1;;;18080:117:6;;;;;;;:::i;:::-;18207:27;;18305:26;18283:18;;;;;;:48;;;;;;;;;18279:468;;;18371:6;:12;;;-1:-1:-1;;;;;18355:28:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;18355:28:6;;18347:64;;;;-1:-1:-1;;;18347:64:6;;;;;;;:::i;:::-;-1:-1:-1;;18439:12:6;;;;18477:14;;:21;;;18279:468;;;18570:14;;:21;;;-1:-1:-1;;;;;18554:37:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;18554:37:6;;18529:120;;;;-1:-1:-1;;;18529:120:6;;;;;;;:::i;:::-;-1:-1:-1;;18677:12:6;;;;18715:14;;:21;;;18279:468;18756:18;;;:37;;-1:-1:-1;;18756:37:6;18777:16;18756:37;;;18834:3;18803:34;;18941:12;;;;18967;;;;18847:196;;18875:4;;18893:11;;18918:9;;18993;19016:17;18847:14;:196::i;:::-;;17378:1672;;;;;;;:::o;32680:167::-;32778:7;32808:32;32819:20;32831:7;32819:11;:20::i;15552:1820::-;15673:12;15729:34;15749:8;15759:3;15729:19;:34::i;:::-;15722:41;-1:-1:-1;15819:23:6;15794:14;;;;:8;:14;;;;;:21;;;;;:48;;;;;;;;;15773:128;;;;-1:-1:-1;;;15773:128:6;;;;;;;:::i;:::-;15948:8;:19;;;-1:-1:-1;;;;;15932:35:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;15932:35:6;;;15911:128;;;;-1:-1:-1;;;15911:128:6;;;;;;;:::i;:::-;16049:23;16075:35;16091:18;16075:15;:35::i;:::-;16049:61;;16154:15;16141:9;:28;;16120:117;;;;-1:-1:-1;;;16120:117:6;;;;;;;:::i;:::-;16247:26;16276:7;:21;16284:12;:10;:12::i;:::-;-1:-1:-1;;;;;16276:21:6;-1:-1:-1;;;;;16276:21:6;;;;;;;;;;;;16247:50;;16334:11;:27;;;16328:3;:33;16307:119;;;;-1:-1:-1;;;16307:119:6;;;;;;;:::i;:::-;16497:24;;;;16463:19;;16554:21;;;;16463:58;;;;16535:40;;16531:405;;;16616:11;;-1:-1:-1;;;;;16616:11:6;:24;16662:12;:10;:12::i;:::-;16704:4;16755:16;16731:8;:21;;;:40;16616:173;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16591:257;;;;-1:-1:-1;;;16591:257:6;;;;;;;:::i;:::-;16885:21;;;;16862:63;;16885:40;;;;16862:63;;;16531:405;17003:19;;;;;-1:-1:-1;;;;;16995:28:6;16968:24;16995:28;;;:7;:28;;;;;;;17061:21;;;;17033:24;;;:49;;;;;;17092:22;;;:47;;;;;;;;17149:216;17177:4;17195:12;:10;:12::i;:::-;17221:19;;;;17254:21;;;;17289:11;;-1:-1:-1;;;;;17289:11:6;17314:9;17289:11;17149:14;:216::i;:::-;;15552:1820;;;;;;;;:::o;1960:1411:8:-;2070:30;2103:14;;;:8;:14;;;;;2127;;;:45;;2144:28;;2127:14;-1:-1:-1;;2127:45:8;;2144:28;2127:45;;;;-1:-1:-1;2202:10:8;;2182:17;;-1:-1:-1;;;;;2202:10:8;:24;2235:16;387:1:6;;2298:19:8;;;;;;:40;;;;;;;;;:107;;2390:15;2298:107;;;2357:14;2298:107;2202:213;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2425:26;;;;:15;:26;;;;;;;:33;;;2494:10;;2541:22;;;;2473:136;;2182:233;;-1:-1:-1;2182:233:8;;-1:-1:-1;;;;;2494:10:8;;;;2473:136;;;;2541:22;;;2473:136;:::i;:::-;;;;;;;;2660:12;2711:16;2686:7;:22;;;:41;2682:328;;;2773:22;;;;;2844:41;;;;2913:19;;:86;;2773:57;;;;;-1:-1:-1;;;;;2913:19:8;;;;2773:57;;2913:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2899:100:8;;-1:-1:-1;;;2682:328:8;3090:16;3067:7;:20;;;:39;3063:302;;;3150:20;;;;;3203:39;;;;-1:-1:-1;3270:17:8;;;:84;;3150:39;;;;;-1:-1:-1;;;;;3270:17:8;;;;3150:39;;3270:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3256:98:8;;-1:-1:-1;;;3063:302:8;1960:1411;;;;;:::o;28049:1044:6:-;28182:4;28236:8;:19;;;28259:1;28236:24;;:53;;;;;28270:8;:19;;;28264:3;:25;28236:53;28232:96;;;-1:-1:-1;28312:5:6;28305:12;;28232:96;28424:19;;;;;-1:-1:-1;;;;;28416:28:6;28388:25;28416:28;;;:7;:28;;;;;;;28518:21;;;;28492:23;;;;28471:18;;28416:28;;28471:44;;:68;28454:133;;;28571:5;28564:12;;;;;28454:133;28670:26;;;;:20;:26;;;;;;;;28666:69;;;28719:5;28712:12;;;;;28666:69;28846:20;;;;:14;:20;;;;;;;;28842:62;;;28889:4;28882:11;;;;;28842:62;29007:8;:19;;;-1:-1:-1;;;;;28967:59:6;:36;28977:4;28983:3;:5;;;28990:3;:5;;;28997:3;:5;;;28967:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28967:59:6;;28963:101;;;29049:4;29042:11;;;;;28963:101;-1:-1:-1;29081:5:6;;28049:1044;-1:-1:-1;;;;28049:1044:6:o;29099:2169::-;29225:4;29277:5;:16;;;29297:1;29277:21;;:47;;;;;29308:5;:16;;;29302:3;:22;29277:47;29273:90;;;-1:-1:-1;29347:5:6;29340:12;;29273:90;29441:11;;;;-1:-1:-1;;;;;29423:31:6;;;;;:9;:31;;;;;;;;29418:75;;-1:-1:-1;29477:5:6;29470:12;;29418:75;29576:26;;;;:20;:26;;;;;;;;29572:69;;;-1:-1:-1;29625:5:6;29618:12;;29572:69;29735:123;29781:5;:11;;;29810:5;:13;;;:34;;;29735:28;:123::i;:::-;29704:5;:16;;;:154;29687:219;;;-1:-1:-1;29890:5:6;29883:12;;29687:219;29996:121;30042:5;:11;;;30071:5;:13;;;:32;;;29996:28;:121::i;:::-;29967:5;:14;;;:150;29950:215;;;-1:-1:-1;30149:5:6;30142:12;;29950:215;30258:64;30287:5;:11;;;30300:21;;30258:28;:64::i;:::-;30226:5;:17;;;:96;30209:161;;;-1:-1:-1;30354:5:6;30347:12;;30209:161;30467:13;;:20;;;;30439:24;;;;;-1:-1:-1;;;;;30439:48:6;;;;;;;;;:165;;;30538:66;30567:5;:11;;;30580:23;;30538:28;:66::i;:::-;30503:5;:20;;;:101;30439:165;30422:230;;;-1:-1:-1;30636:5:6;30629:12;;30422:230;30862:5;:16;;;30823:5;:20;;;30787:5;:17;;;30754:5;:14;;;:50;:89;:124;30727:5;:11;;;:152;30710:217;;;-1:-1:-1;30911:5:6;30904:12;;30710:217;31034:20;;;;:14;:20;;;;;;;;31030:62;;;-1:-1:-1;31077:4:6;31070:11;;31030:62;31190:5;:11;;;-1:-1:-1;;;;;31150:51:6;:36;31160:4;31166:3;:5;;;31173:3;:5;;;31180:3;:5;;;31150:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31150:51:6;;31146:93;;;-1:-1:-1;31224:4:6;31217:11;;31146:93;-1:-1:-1;31256:5:6;29099:2169;;;;;:::o;31798:669::-;31884:12;31976:32;31994:5;:13;;;31976:17;:32::i;:::-;32026:5;:11;;;32055:5;:17;;;32090:5;:18;;;32126:5;:11;;;32155:5;:11;;;32184:5;:14;;;32216:5;:16;;;32250:5;:17;;;32285:5;:20;;;32323:5;:16;;;32357:5;:25;;;32400:5;:15;;;31942:487;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;31919:520;;;;;;31912:527;;31798:669;;;:::o;32473:201::-;32530:7;32648:4;32595:58;;;;;;;;:::i;1321:134:29:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;19056:859:6:-;19308:30;19360:14;;;:8;:14;;;;;19384:33;;-1:-1:-1;;;;;19384:33:6;;;-1:-1:-1;;;;;;19384:33:6;;;;;;;19427:17;;;:29;;;;;;;;;;;;;;;;19466:14;;;;:23;;;19499:22;;;:40;;;;;;19549:19;;;:33;;19571:11;;19549:19;;-1:-1:-1;;19549:33:6;;;;19384;19571:11;;19549:33;;;;;;;;;;;-1:-1:-1;19668:18:6;19653:11;:33;;;;;;;;;19649:60;;;19688:13;;;:21;;-1:-1:-1;;;;;;19688:21:6;-1:-1:-1;;;;;19688:21:6;;;;;19649:60;19719:14;;;:47;;-1:-1:-1;;19719:47:6;19736:30;19719:47;;;19802:3;19776:23;;;:29;19840:17;:19;;19719:47;19840:19;;;;;;19815:22;;;:44;19874:34;;19886:4;;19874:34;;;;19719:47;19874:34;:::i;:::-;;;;;;;;19056:859;;;;;;;;;:::o;31274:518::-;31458:16;;31492:14;;;;;31524:18;;;;;31560:20;;;;31598:28;;;;31644:16;;;;31678:26;;;;31722:18;;;;31424:330;;31366:12;;31424:330;;31458:16;;31492:14;31722:18;31424:330;;:::i;33016:277::-;33132:12;33181:64;33204:26;33222:7;33204:17;:26::i;:::-;33197:33;;;33232:7;33241:3;33181:15;:64::i;:::-;33160:126;;;;-1:-1:-1;;;33160:126:6;;;;;;;:::i;33811:199::-;340:5;33962:18;;33961:42;;33811:199::o;1746:187:29:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:29;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:29;;;1746:187::o;142:146:-1:-;217:20;;242:41;217:20;242:41;:::i;325:777::-;;464:3;457:4;449:6;445:17;441:27;431:2;;-1:-1;;472:12;431:2;519:6;506:20;541:102;556:86;635:6;556:86;:::i;:::-;541:102;:::i;:::-;671:21;;;532:111;-1:-1;715:4;728:14;;;;703:17;;;829:6;817:19;;;808:29;;;;805:38;-1:-1;802:2;;;856:1;;846:12;802:2;881:1;866:230;891:6;888:1;885:13;866:230;;;971:59;1026:3;1014:10;971:59;:::i;:::-;959:72;;1045:14;;;;1073:16;;;;913:1;906:9;866:230;;;870:14;;;;;;424:678;;;;:::o;1138:767::-;;1275:3;1268:4;1260:6;1256:17;1252:27;1242:2;;-1:-1;;1283:12;1242:2;1330:6;1317:20;1352:100;1367:84;1444:6;1367:84;:::i;1352:100::-;1480:21;;;1343:109;-1:-1;1524:4;1537:14;;;;1512:17;;;1638:4;1626:17;;;1617:27;;;;1614:36;-1:-1;1611:2;;;1663:1;;1653:12;1611:2;1688:1;1673:226;1698:6;1695:1;1692:13;1673:226;;;1778:57;1831:3;1819:10;1778:57;:::i;:::-;1766:70;;1850:14;;;;1878;;;;1720:1;1713:9;1673:226;;2996:1414;;3109:6;;3097:9;3092:3;3088:19;3084:32;3081:2;;;-1:-1;;3119:12;3081:2;3147:22;3109:6;3147:22;:::i;:::-;3138:31;;;2128:6;2115:20;3237:16;3230:75;3368:2;3434:9;3430:22;217:20;242:41;277:5;242:41;:::i;:::-;3368:2;3383:16;;3376:83;3526:2;3588:22;;217:20;242:41;217:20;242:41;:::i;:::-;3559:57;3526:2;3545:5;3541:16;3534:83;;3686:2;3744:9;3740:22;7544:20;3686:2;3705:5;3701:16;3694:75;3846:3;3905:9;3901:22;7544:20;3846:3;3866:5;3862:16;3855:75;3995:3;4054:9;4050:22;7544:20;3995:3;4015:5;4011:16;4004:75;4154:3;4213:9;4209:22;7544:20;4154:3;4174:5;4170:16;4163:75;4305:3;4364:9;4360:22;7544:20;4305:3;4325:5;4321:16;4314:75;3075:1335;;;;:::o;4634:2210::-;;4745:6;4733:9;4728:3;4724:19;4720:32;4717:2;;;-1:-1;;4755:12;4717:2;4798:6;4783:22;4798:6;4783:22;:::i;:::-;4774:31;;4890:73;4959:3;4935:22;4890:73;:::i;:::-;4872:16;4865:99;5032:3;5066:57;5119:3;5032;5099:9;5095:22;5066:57;:::i;:::-;5059:4;5052:5;5048:16;5041:83;5186:3;5220:57;5273:3;5186;5253:9;5249:22;5220:57;:::i;:::-;5213:4;5206:5;5202:16;5195:83;5347:3;5381:57;5434:3;5347;5414:9;5410:22;5381:57;:::i;:::-;5374:4;5367:5;5363:16;5356:83;5501:3;5535:63;5594:3;5501;5574:9;5570:22;5535:63;:::i;:::-;5528:4;5521:5;5517:16;5510:89;5661:3;;5720:9;5716:22;7544:20;5688:4;5681:5;5677:16;5670:75;4798:6;5869:9;5865:22;7544:20;5837:4;5830:5;5826:16;5819:75;5961:3;6020:9;6016:22;7544:20;5988:4;5981:5;5977:16;5970:75;6113:3;6174:9;6170:22;7544:20;5032:3;6133:5;6129:18;6122:77;6270:3;6331:9;6327:22;7544:20;5186:3;6290:5;6286:18;6279:77;6423:3;6484:9;6480:22;7544:20;5347:3;6443:5;6439:18;6432:77;6585:3;6646:9;6642:22;7544:20;5501:3;6605:5;6601:18;6594:77;6737:3;6798:9;6794:22;7544:20;5661:3;6757:5;6753:18;6746:77;;;;;;;4711:2133;;;;:::o;6875:595::-;;6984:4;6972:9;6967:3;6963:19;6959:30;6956:2;;;-1:-1;;6992:12;6956:2;7020:20;6984:4;7020:20;:::i;:::-;7011:29;;7833:6;7820:20;70814:4;75298:5;70803:16;75275:5;75272:33;75262:2;;75319:1;;75309:12;75262:2;7119:47;7101:16;7094:73;;7225:2;7283:9;7279:22;2115:20;7225:2;7244:5;7240:16;7233:75;7366:2;7424:9;7420:22;2115:20;7366:2;7385:5;7381:16;7374:75;6950:520;;;;:::o;7888:241::-;;7992:2;7980:9;7971:7;7967:23;7963:32;7960:2;;;-1:-1;;7998:12;7960:2;85:6;72:20;97:33;124:5;97:33;:::i;8136:421::-;;8287:2;8275:9;8266:7;8262:23;8258:32;8255:2;;;-1:-1;;8293:12;8255:2;8351:17;8338:31;8389:18;8381:6;8378:30;8375:2;;;-1:-1;;8411:12;8375:2;8441:100;8533:7;8524:6;8513:9;8509:22;8441:100;:::i;:::-;8431:110;8249:308;-1:-1;;;;8249:308::o;8564:1023::-;;;;8839:2;8827:9;8818:7;8814:23;8810:32;8807:2;;;-1:-1;;8845:12;8807:2;8903:17;8890:31;8941:18;;8933:6;8930:30;8927:2;;;-1:-1;;8963:12;8927:2;8993:100;9085:7;9076:6;9065:9;9061:22;8993:100;:::i;:::-;8983:110;;9158:2;9147:9;9143:18;9130:32;9116:46;;8941:18;9174:6;9171:30;9168:2;;;-1:-1;;9204:12;9168:2;9234:98;9324:7;9315:6;9304:9;9300:22;9234:98;:::i;:::-;9224:108;;9397:2;9386:9;9382:18;9369:32;9355:46;;8941:18;9413:6;9410:30;9407:2;;;-1:-1;;9443:12;9407:2;;9473:98;9563:7;9554:6;9543:9;9539:22;9473:98;:::i;:::-;9463:108;;;8801:786;;;;;:::o;9594:257::-;;9706:2;9694:9;9685:7;9681:23;9677:32;9674:2;;;-1:-1;;9712:12;9674:2;1994:6;1988:13;74662:5;69765:13;69758:21;74640:5;74637:32;74627:2;;-1:-1;;74673:12;9858:241;;9962:2;9950:9;9941:7;9937:23;9933:32;9930:2;;;-1:-1;;9968:12;9930:2;-1:-1;2115:20;;9924:175;-1:-1;9924:175::o;10106:472::-;;;10237:2;10225:9;10216:7;10212:23;10208:32;10205:2;;;-1:-1;;10243:12;10205:2;2128:6;2115:20;10295:63;;10423:2;;10412:9;10408:18;10395:32;10447:18;;10439:6;10436:30;10433:2;;;-1:-1;;10469:12;10433:2;10545:6;10534:9;10530:22;;;2620:3;2613:4;2605:6;2601:17;2597:27;2587:2;;-1:-1;;2628:12;2587:2;2675:6;2662:20;10447:18;67294:6;67291:30;67288:2;;;-1:-1;;67324:12;67288:2;2697:65;67397:9;67378:17;;-1:-1;;67374:33;67455:15;;2697:65;:::i;:::-;2688:74;;2782:6;2775:5;2768:21;2886:3;10423:2;2877:6;2810;2868:16;;2865:25;2862:2;;;-1:-1;;2893:12;2862:2;72848:6;10423:2;2810:6;2806:17;10423:2;2844:5;2840:16;72825:30;72886:16;;;;;72879:27;;;;10199:379;;2844:5;;-1:-1;10199:379;;-1:-1;;10199:379::o;10861:271::-;;10980:2;10968:9;10959:7;10955:23;10951:32;10948:2;;;-1:-1;;10986:12;10948:2;2445:6;2432:20;75059:1;75052:5;75049:12;75039:2;;-1:-1;;75065:12;11139:290;;11267:3;11255:9;11246:7;11242:23;11238:33;11235:2;;;-1:-1;;11274:12;11235:2;11336:77;11405:7;11381:22;11336:77;:::i;11436:456::-;;;11601:3;11589:9;11580:7;11576:23;11572:33;11569:2;;;-1:-1;;11608:12;11569:2;11670:77;11739:7;11715:22;11670:77;:::i;:::-;11660:87;;11803:73;11868:7;11784:3;11848:9;11844:22;11803:73;:::i;:::-;11793:83;;11563:329;;;;;:::o;11899:416::-;;;12032:9;12023:7;12019:23;12044:3;12019:23;12015:33;12012:2;;;-1:-1;;12051:12;12012:2;4553:3;;4535:16;4531:26;4528:2;;;-1:-1;;4560:12;4528:2;12103:87;;12267:22;;;7544:20;;-1:-1;;;;12006:309::o;12322:286::-;;12448:3;12436:9;12427:7;12423:23;12419:33;12416:2;;;-1:-1;;12455:12;12416:2;12517:75;12584:7;12560:22;12517:75;:::i;12615:618::-;;;;12815:3;12803:9;12794:7;12790:23;12786:33;12783:2;;;-1:-1;;12822:12;12783:2;12884:75;12951:7;12927:22;12884:75;:::i;:::-;12874:85;;13015:73;13080:7;12996:3;13060:9;13056:22;13015:73;:::i;:::-;13005:83;;13144:73;13209:7;13125:3;13189:9;13185:22;13144:73;:::i;:::-;13134:83;;12777:456;;;;;:::o;13240:412::-;;;13383:3;13371:9;13362:7;13358:23;13354:33;13351:2;;;-1:-1;;13390:12;13351:2;13452:75;13519:7;13495:22;13452:75;:::i;:::-;13442:85;13564:3;13604:22;;;;7544:20;;-1:-1;;;13345:307::o;13907:263::-;;14022:2;14010:9;14001:7;13997:23;13993:32;13990:2;;;-1:-1;;14028:12;13990:2;-1:-1;7692:13;;13984:186;-1:-1;13984:186::o;14177:366::-;;;14298:2;14286:9;14277:7;14273:23;14269:32;14266:2;;;-1:-1;;14304:12;14266:2;-1:-1;;7544:20;;;14456:2;14495:22;;;7544:20;;-1:-1;14260:283::o;15025:184::-;73846:2;73842:14;-1:-1;;73842:14;15130:74;;15124:85::o;16565:343::-;;16707:5;68245:12;68789:6;68784:3;68777:19;-1:-1;72993:101;73007:6;73004:1;73001:13;72993:101;;;68826:4;73074:11;;;;;73068:18;73055:11;;;;;73048:39;73022:10;72993:101;;;73109:6;73106:1;73103:13;73100:2;;;-1:-1;68826:4;73165:6;68821:3;73156:16;;73149:27;73100:2;-1:-1;67397:9;73735:14;-1:-1;;73731:28;16864:39;;;;68826:4;16864:39;;16655:253;-1:-1;;16655:253::o;16938:826::-;;17059:5;17053:12;17093:1;;17082:9;17078:17;17106:1;17101:247;;;;17359:1;17354:404;;;;17071:687;;17101:247;17175:1;17160:17;;17179:4;17156:28;68777:19;;-1:-1;;17287:25;;68826:4;68817:14;;17275:38;17327:14;;;;-1:-1;17101:247;;17354:404;17423:1;17412:9;17408:17;68789:6;68784:3;68777:19;17531:41;17566:5;17531:41;:::i;:::-;-1:-1;17596:130;17610:6;17607:1;17604:13;17596:130;;;17675:7;17669:14;68826:4;17665:1;68821:3;17656:11;;17649:35;17093:1;17707:7;17703:15;17692:26;;68826:4;17629:1;17625:12;17620:17;;17596:130;;;17740:11;;68826:4;17740:11;;-1:-1;;;17071:687;;;;17029:735;;;;:::o;36091:2051::-;;16267:5;16244:3;16237:37;73842:14;;;15196:5;73846:2;73842:14;;36717:2;36712:3;36708:12;15130:74;73842:14;15196:5;73846:2;73842:14;;36835:12;36712:3;36835:12;15130:74;73842:14;69575:5;73846:2;73842:14;;36962:12;36712:3;36962:12;15130:74;;37112:89;37089:12;36712:3;37089:12;37188:6;37112:89;:::i;:::-;-1:-1;37214:12;;;16237:37;;;;37325:12;;;16237:37;;;;37436:12;;;16237:37;;;;37547:12;;;16237:37;;;;37658:12;;;16237:37;37769:12;;;16237:37;37881:12;;;16237:37;37993:12;;;16237:37;38105:12;;;36608:1534;-1:-1;;;;;36608:1534::o;38149:1290::-;16237:37;;;-1:-1;;73846:2;73842:14;;;;;38602:2;38593:12;;15130:74;73842:14;;;;;;;38720:12;;;15130:74;38847:12;;;16237:37;;;;38958:12;;;16237:37;39069:12;;;16237:37;39180:12;;;16237:37;39291:12;;;16237:37;39402:12;;;38493:946::o;39446:408::-;;-1:-1;20462:5;20456:12;20496:1;;20485:9;20481:17;20509:1;20504:268;;;;20783:1;20778:425;;;;20474:729;;20504:268;-1:-1;;20709:25;;20697:38;;20578:1;20563:17;;20582:4;20559:28;20749:16;;;-1:-1;20504:268;;20778:425;20847:1;20836:9;20832:17;67749:3;-1:-1;67739:14;67781:4;;-1:-1;67768:18;-1:-1;21036:130;21050:6;21047:1;21044:13;21036:130;;;21109:14;;21096:11;;;21089:35;21143:15;;;;21065:12;;21036:130;;;-1:-1;;;21180:16;;;-1:-1;20474:729;-1:-1;;;16237:37;;;-1:-1;;39826:2;39817:12;;39607:247;-1:-1;39607:247::o;39861:520::-;23335:66;23315:87;;23299:2;23421:12;;16237:37;;;;40344:12;;;40078:303::o;40388:379::-;40752:10;40576:191::o;40774:222::-;-1:-1;;;;;70598:54;;;;14968:45;;40901:2;40886:18;;40872:124::o;41003:952::-;-1:-1;;;;;70598:54;;;14811:58;;70598:54;;;41509:2;41494:18;;14811:58;70598:54;;;;41606:2;41591:18;;18710:68;41689:2;41674:18;;16237:37;;;;41772:3;41757:19;;16237:37;73842:14;41841:19;;16237:37;;;;41940:3;41925:19;;16237:37;;;;41328:3;41313:19;;41299:656::o;41962:1490::-;-1:-1;;;;;70598:54;;;14968:45;;70598:54;;;42641:2;42626:18;;14968:45;42724:2;42709:18;;16237:37;;;70598:54;;42821:2;42806:18;;18710:68;42904:3;42889:19;;16237:37;;;73842:14;42973:19;;16237:37;;;42444:3;42429:19;;74073:1;74063:12;;74053:2;;74079:9;74053:2;72097:39;43085:3;43074:9;43070:19;19575:63;16267:5;43169:3;43158:9;43154:19;16237:37;16267:5;43253:3;43242:9;43238:19;16237:37;16267:5;43337:3;43326:9;43322:19;16237:37;73960:1;73953:5;73950:12;73940:2;;73966:9;73940:2;71952:41;43437:3;43426:9;43422:19;19414:65;42415:1037;;;;;;;;;;;;;;:::o;43459:460::-;-1:-1;;;;;70598:54;;;14811:58;;70598:54;;;;43822:2;43807:18;;14968:45;43905:2;43890:18;;16237:37;;;;43650:2;43635:18;;43621:298::o;43926:349::-;-1:-1;;;;;70598:54;;;;14811:58;;44261:2;44246:18;;16237:37;44089:2;44074:18;;44060:215::o;44622:370::-;44799:2;44813:47;;;68245:12;;44784:18;;;68777:19;;;44622:370;;44799:2;67602:14;;;;68817;;;;44622:370;15775:260;15800:6;15797:1;15794:13;15775:260;;;15861:13;;16237:37;;68632:14;;;;14704;;;;15822:1;15815:9;15775:260;;;-1:-1;44866:116;;44770:222;-1:-1;;;;;;44770:222::o;44999:210::-;69765:13;;69758:21;16130:34;;45120:2;45105:18;;45091:118::o;45216:222::-;16237:37;;;45343:2;45328:18;;45314:124::o;45445:548::-;16237:37;;;70814:4;70803:16;;;;45813:2;45798:18;;36044:35;45896:2;45881:18;;16237:37;45979:2;45964:18;;16237:37;45652:3;45637:19;;45623:370::o;46000:306::-;;46145:2;46166:17;46159:47;46220:76;46145:2;46134:9;46130:18;46282:6;46220:76;:::i;46313:300::-;;46455:2;46476:17;46469:47;46530:73;46455:2;46444:9;46440:18;46589:6;46530:73;:::i;47158:236::-;47292:2;47277:18;;74180:1;74170:12;;74160:2;;74186:9;74160:2;19728:57;;;47263:131;:::o;47718:416::-;47918:2;47932:47;;;21442:2;47903:18;;;68777:19;21478:30;68817:14;;;21458:51;21528:12;;;47889:245::o;48141:416::-;48341:2;48355:47;;;21779:2;48326:18;;;68777:19;21815:34;68817:14;;;21795:55;-1:-1;;;21870:12;;;21863:25;21907:12;;;48312:245::o;48564:416::-;48764:2;48778:47;;;22158:2;48749:18;;;68777:19;22194:34;68817:14;;;22174:55;-1:-1;;;22249:12;;;22242:30;22291:12;;;48735:245::o;48987:416::-;49187:2;49201:47;;;22542:2;49172:18;;;68777:19;-1:-1;;;68817:14;;;22558:39;22616:12;;;49158:245::o;49410:416::-;49610:2;49624:47;;;22867:2;49595:18;;;68777:19;22903:34;68817:14;;;22883:55;-1:-1;;;22958:12;;;22951:42;23012:12;;;49581:245::o;49833:416::-;50033:2;50047:47;;;23672:2;50018:18;;;68777:19;23708:34;68817:14;;;23688:55;-1:-1;;;23763:12;;;23756:30;23805:12;;;50004:245::o;50256:416::-;50456:2;50470:47;;;50441:18;;;68777:19;24092:34;68817:14;;;24072:55;24146:12;;;50427:245::o;50679:416::-;50879:2;50893:47;;;24397:2;50864:18;;;68777:19;-1:-1;;;68817:14;;;24413:38;24470:12;;;50850:245::o;51102:416::-;51302:2;51316:47;;;24721:2;51287:18;;;68777:19;24757:30;68817:14;;;24737:51;24807:12;;;51273:245::o;51525:416::-;51725:2;51739:47;;;25058:2;51710:18;;;68777:19;-1:-1;;;68817:14;;;25074:36;25129:12;;;51696:245::o;51948:416::-;52148:2;52162:47;;;25380:2;52133:18;;;68777:19;25416:34;68817:14;;;25396:55;-1:-1;;;25471:12;;;25464:41;25524:12;;;52119:245::o;52371:416::-;52571:2;52585:47;;;25775:2;52556:18;;;68777:19;25811:32;68817:14;;;25791:53;25863:12;;;52542:245::o;52794:416::-;52994:2;53008:47;;;26114:2;52979:18;;;68777:19;26150:29;68817:14;;;26130:50;26199:12;;;52965:245::o;53217:416::-;53417:2;53431:47;;;26450:2;53402:18;;;68777:19;26486:34;68817:14;;;26466:55;-1:-1;;;26541:12;;;26534:29;26582:12;;;53388:245::o;53640:416::-;53840:2;53854:47;;;26833:2;53825:18;;;68777:19;26869:34;68817:14;;;26849:55;-1:-1;;;26924:12;;;26917:30;26966:12;;;53811:245::o;54063:416::-;54263:2;54277:47;;;27217:2;54248:18;;;68777:19;27253:25;68817:14;;;27233:46;27298:12;;;54234:245::o;54486:416::-;54686:2;54700:47;;;27549:2;54671:18;;;68777:19;27585:26;68817:14;;;27565:47;27631:12;;;54657:245::o;54909:416::-;55109:2;55123:47;;;27882:2;55094:18;;;68777:19;27918:34;68817:14;;;27898:55;-1:-1;;;27973:12;;;27966:25;28010:12;;;55080:245::o;55332:416::-;55532:2;55546:47;;;55517:18;;;68777:19;28297:34;68817:14;;;28277:55;28351:12;;;55503:245::o;55755:416::-;55955:2;55969:47;;;28602:2;55940:18;;;68777:19;28638:28;68817:14;;;28618:49;28686:12;;;55926:245::o;56178:416::-;56378:2;56392:47;;;28937:2;56363:18;;;68777:19;28973:32;68817:14;;;28953:53;29025:12;;;56349:245::o;56601:416::-;56801:2;56815:47;;;56786:18;;;68777:19;29312:34;68817:14;;;29292:55;29366:12;;;56772:245::o;57024:416::-;57224:2;57238:47;;;29617:2;57209:18;;;68777:19;29653:30;68817:14;;;29633:51;29703:12;;;57195:245::o;57447:416::-;57647:2;57661:47;;;29954:2;57632:18;;;68777:19;29990:34;68817:14;;;29970:55;-1:-1;;;30045:12;;;30038:35;30092:12;;;57618:245::o;57870:416::-;58070:2;58084:47;;;30343:2;58055:18;;;68777:19;30379:34;68817:14;;;30359:55;-1:-1;;;30434:12;;;30427:39;30485:12;;;58041:245::o;58293:416::-;58493:2;58507:47;;;30736:2;58478:18;;;68777:19;30772:34;68817:14;;;30752:55;-1:-1;;;30827:12;;;30820:31;30870:12;;;58464:245::o;58716:416::-;58916:2;58930:47;;;31121:2;58901:18;;;68777:19;31157:34;68817:14;;;31137:55;-1:-1;;;31212:12;;;31205:34;31258:12;;;58887:245::o;59139:416::-;59339:2;59353:47;;;31509:2;59324:18;;;68777:19;31545:34;68817:14;;;31525:55;-1:-1;;;31600:12;;;31593:39;31651:12;;;59310:245::o;59562:416::-;59762:2;59776:47;;;31902:2;59747:18;;;68777:19;-1:-1;;;68817:14;;;31918:36;31973:12;;;59733:245::o;59985:416::-;60185:2;60199:47;;;32529:2;60170:18;;;68777:19;32565:34;68817:14;;;32545:55;-1:-1;;;32620:12;;;32613:37;32669:12;;;60156:245::o;60408:416::-;60608:2;60622:47;;;32920:2;60593:18;;;68777:19;-1:-1;;;68817:14;;;32936:40;32995:12;;;60579:245::o;60831:416::-;61031:2;61045:47;;;61016:18;;;68777:19;33282:34;68817:14;;;33262:55;33336:12;;;61002:245::o;61254:416::-;61454:2;61468:47;;;33587:2;61439:18;;;68777:19;33623:34;68817:14;;;33603:55;-1:-1;;;33678:12;;;33671:26;33716:12;;;61425:245::o;61677:416::-;61877:2;61891:47;;;33967:2;61862:18;;;68777:19;34003:34;68817:14;;;33983:55;-1:-1;;;34058:12;;;34051:25;34095:12;;;61848:245::o;62100:416::-;62300:2;62314:47;;;34346:2;62285:18;;;68777:19;34382:27;68817:14;;;34362:48;34429:12;;;62271:245::o;62523:416::-;62723:2;62737:47;;;34680:2;62708:18;;;68777:19;-1:-1;;;68817:14;;;34696:38;34753:12;;;62694:245::o;62946:416::-;63146:2;63160:47;;;35004:2;63131:18;;;68777:19;35040:34;68817:14;;;35020:55;-1:-1;;;35095:12;;;35088:44;35151:12;;;63117:245::o;63369:416::-;63569:2;63583:47;;;35402:2;63554:18;;;68777:19;35438:34;68817:14;;;35418:55;-1:-1;;;35493:12;;;35486:38;35543:12;;;63540:245::o;64021:411::-;;16267:5;16244:3;16237:37;64191:2;64309;64298:9;64294:18;64287:48;64349:73;64191:2;64180:9;64176:18;64408:6;64349:73;:::i;64439:333::-;16237:37;;;64758:2;64743:18;;16237:37;64594:2;64579:18;;64565:207::o;64779:444::-;16237:37;;;65126:2;65111:18;;16237:37;;;;65209:2;65194:18;;16237:37;64962:2;64947:18;;64933:290::o;65230:572::-;16237:37;;;65614:2;65599:18;;16237:37;;;65697:2;65682:18;;16237:37;;;65449:3;65434:19;;74288:1;74278:12;;74268:2;;74294:9;74268:2;72366:34;65788:2;65777:9;65773:18;19876:58;65420:382;;;;;;;:::o;65809:415::-;;70814:4;70807:5;70803:16;35924:3;35917:48;65981:2;66097;66086:9;66082:18;66075:48;66137:77;65981:2;65970:9;65966:18;66200:6;66137:77;:::i;66231:256::-;66293:2;66287:9;66319:17;;;66394:18;66379:34;;66415:22;;;66376:62;66373:2;;;66451:1;;66441:12;66373:2;66293;66460:22;66271:216;;-1:-1;66271:216::o;66494:326::-;;66675:18;66667:6;66664:30;66661:2;;;-1:-1;;66697:12;66661:2;-1:-1;66742:4;66730:17;;;66795:15;;66598:222::o;67645:157::-;;67739:14;;;67781:4;67768:18;;;67698:104::o;74317:117::-;-1:-1;;;;;70598:54;;74376:35;;74366:2;;74425:1;;74415:12;74366:2;74360:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./BatchDagora.sol\";\nimport \"../arbitration/Arbitrator.sol\";\nimport \"../arbitration/IArbitrable.sol\";\n\ncontract KlerosDagora is BatchDagora, IArbitrable {\n    Arbitrator public arbitrator; // Address of the arbitrator contract.\n    bytes public reportExtraData; // Extra data to set up the arbitration.\n    bytes public orderExtraData; // Extra data to set up the arbitration.\n\n    constructor(\n        address _arbitrator,\n        address _token,\n        address _protocolFeeRecipient,\n        uint256 _feeTimeoutDays,\n        uint256 _blacklistTimeoutDays,\n        uint256 _protocolFeePercentage,\n        uint256 _tokenOwnerFeePercentage,\n        bytes memory _reportExtraData,\n        bytes memory _orderExtraData,\n        string memory _ipfsDomain\n    )\n        public\n        Dagora(\n            _token,\n            _protocolFeeRecipient,\n            _feeTimeoutDays,\n            _blacklistTimeoutDays,\n            _protocolFeePercentage,\n            _tokenOwnerFeePercentage,\n            _ipfsDomain\n        )\n    {\n        arbitrator = Arbitrator(_arbitrator);\n        reportExtraData = _reportExtraData;\n        orderExtraData = _orderExtraData;\n    }\n\n    function report(Listing memory _listing, Sig memory sig)\n        public\n        override\n        payable\n        returns (bytes32 hash)\n    {\n        hash = Dagora.report(_listing, sig);\n        emit MetaEvidence(\n            disputes[hash].metaEvidenceId,\n            string(abi.encodePacked(ipfsDomain, _listing.ipfsHash))\n        );\n    }\n\n    function disputeTransaction(Order memory _order)\n        public\n        override\n        payable\n        returns (bytes32 hash)\n    {\n        hash = Dagora.disputeTransaction(_order);\n        emit MetaEvidence(\n            disputes[hash].metaEvidenceId,\n            string(abi.encodePacked(ipfsDomain, _order.listing.ipfsHash))\n        );\n    }\n\n    function raiseDispute(bytes32 hash, uint256 _arbitrationCost)\n        internal\n        override\n    {\n        RunningDispute storage dispute = disputes[hash];\n        dispute.status = DisputeStatus.DisputeCreated;\n        uint256 disputeId = arbitrator.createDispute{ value: _arbitrationCost }(\n            AMOUNT_OF_CHOICES,\n            dispute.disputeType == DisputeType.Order\n                ? orderExtraData\n                : reportExtraData\n        );\n        disputeIDtoHash[disputeId] = hash;\n        emit Dispute(\n            arbitrator,\n            disputeId,\n            dispute.metaEvidenceId,\n            dispute.metaEvidenceId\n        );\n        // Refund sender if it overpaid.\n        bool success;\n        if (dispute.prosecutionFee > _arbitrationCost) {\n            uint256 extraFeeProsecution = dispute.prosecutionFee -\n                _arbitrationCost;\n            dispute.prosecutionFee = _arbitrationCost;\n            (success, ) = dispute.prosecution.call{\n                value: extraFeeProsecution\n            }(\"\");\n        }\n\n        // Refund receiver if it overpaid.\n        if (dispute.defendantFee > _arbitrationCost) {\n            uint256 extraFeeDefendant = dispute.defendantFee - _arbitrationCost;\n            dispute.defendantFee = _arbitrationCost;\n            (success, ) = dispute.defendant.call{ value: extraFeeDefendant }(\n                \"\"\n            );\n        }\n    }\n\n    function submitEvidence(bytes32 _hash, string memory _evidence)\n        public\n        override\n    {\n        RunningDispute storage dispute = disputes[_hash];\n        require(\n            _msgSender() == dispute.prosecution ||\n                _msgSender() == dispute.defendant,\n            \"The caller must be the prosecution or the defendant.\"\n        );\n        require(\n            dispute.disputeType == DisputeType.Order,\n            \"Evidences are only allowed for orders disputes.\"\n        );\n        require(\n            dispute.status < DisputeStatus.Resolved,\n            \"Must not send evidence if the dispute is resolved.\"\n        );\n\n        emit Evidence(\n            arbitrator,\n            dispute.metaEvidenceId,\n            _msgSender(),\n            _evidence\n        );\n    }\n\n    function rule(uint256 _disputeID, uint256 _ruling) public override {\n        bytes32 hash = disputeIDtoHash[_disputeID];\n        RunningDispute storage dispute = disputes[hash];\n        require(\n            _msgSender() == address(arbitrator),\n            \"The caller must be the arbitrator.\"\n        );\n        require(\n            dispute.status == DisputeStatus.DisputeCreated,\n            \"The dispute has already been resolved.\"\n        );\n        emit Ruling(Arbitrator(_msgSender()), _disputeID, _ruling);\n        if (dispute.disputeType == DisputeType.Report) {\n            executeReportRuling(dispute, _ruling);\n        } else {\n            _executeOrderRuling(dispute, _ruling);\n            transactions[hash].status = Status.Finalized;\n        }\n    }\n\n    function appeal(bytes32 _hash) public override payable {\n        RunningDispute storage dispute = disputes[_hash];\n        require(\n            dispute.disputeType == DisputeType.Order,\n            \"Appeals are only allowed for orders disputes.\"\n        );\n\n        arbitrator.appeal{ value: msg.value }(\n            dispute.disputeId,\n            orderExtraData\n        );\n    }\n\n    function arbitrationCost(DisputeType _type)\n        public\n        override\n        view\n        returns (uint256 fee)\n    {\n        require(_type > DisputeType.None);\n        if (_type == DisputeType.Report) {\n            fee = arbitrator.arbitrationCost(reportExtraData);\n        } else if (_type == DisputeType.Order) {\n            fee = arbitrator.arbitrationCost(orderExtraData);\n        }\n    }\n}\n",
  "sourcePath": "/home/gustavo/projects/dagora/contracts/marketplace/KlerosDagora.sol",
  "ast": {
    "absolutePath": "/home/gustavo/projects/dagora/contracts/marketplace/KlerosDagora.sol",
    "exportedSymbols": {
      "KlerosDagora": [
        3936
      ]
    },
    "id": 3937,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3481,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "id": 3482,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:8"
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/marketplace/BatchDagora.sol",
        "file": "./BatchDagora.sol",
        "id": 3483,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 591,
        "src": "91:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol",
        "file": "../arbitration/Arbitrator.sol",
        "id": 3484,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 259,
        "src": "119:39:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/IArbitrable.sol",
        "file": "../arbitration/IArbitrable.sol",
        "id": 3485,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 310,
        "src": "159:40:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3486,
              "name": "BatchDagora",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 590,
              "src": "226:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BatchDagora_$590",
                "typeString": "contract BatchDagora"
              }
            },
            "id": 3487,
            "nodeType": "InheritanceSpecifier",
            "src": "226:11:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3488,
              "name": "IArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 309,
              "src": "239:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrable_$309",
                "typeString": "contract IArbitrable"
              }
            },
            "id": 3489,
            "nodeType": "InheritanceSpecifier",
            "src": "239:11:8"
          }
        ],
        "contractDependencies": [
          309,
          590,
          3405,
          5964,
          6073
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3936,
        "linearizedBaseContracts": [
          3936,
          309,
          590,
          3405,
          6073,
          5964
        ],
        "name": "KlerosDagora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6cc6cde1",
            "id": 3491,
            "mutability": "mutable",
            "name": "arbitrator",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3936,
            "src": "257:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Arbitrator_$258",
              "typeString": "contract Arbitrator"
            },
            "typeName": {
              "contractScope": null,
              "id": 3490,
              "name": "Arbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 258,
              "src": "257:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Arbitrator_$258",
                "typeString": "contract Arbitrator"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee7269d7",
            "id": 3493,
            "mutability": "mutable",
            "name": "reportExtraData",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3936,
            "src": "330:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 3492,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "330:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6398667",
            "id": 3495,
            "mutability": "mutable",
            "name": "orderExtraData",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3936,
            "src": "405:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 3494,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "405:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3541,
              "nodeType": "Block",
              "src": "1118:139:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3527,
                      "name": "arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "1128:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$258",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3529,
                          "name": "_arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3497,
                          "src": "1152:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3528,
                        "name": "Arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "1141:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Arbitrator_$258_$",
                          "typeString": "type(contract Arbitrator)"
                        }
                      },
                      "id": 3530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1141:23:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$258",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "src": "1128:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$258",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "id": 3532,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:36:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3533,
                      "name": "reportExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3493,
                      "src": "1174:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3534,
                      "name": "_reportExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "1192:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1174:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 3536,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:34:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3537,
                      "name": "orderExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "1218:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3538,
                      "name": "_orderExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3513,
                      "src": "1235:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1218:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 3540,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:32:8"
                }
              ]
            },
            "documentation": null,
            "id": 3542,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3518,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3499,
                    "src": "899:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3519,
                    "name": "_protocolFeeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3501,
                    "src": "919:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3520,
                    "name": "_feeTimeoutDays",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3503,
                    "src": "954:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3521,
                    "name": "_blacklistTimeoutDays",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "983:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3522,
                    "name": "_protocolFeePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3507,
                    "src": "1018:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3523,
                    "name": "_tokenOwnerFeePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3509,
                    "src": "1054:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3524,
                    "name": "_ipfsDomain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3515,
                    "src": "1092:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3525,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3517,
                  "name": "Dagora",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3405,
                  "src": "879:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Dagora_$3405_$",
                    "typeString": "type(contract Dagora)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "879:234:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3497,
                  "mutability": "mutable",
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "501:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "530:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3501,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "554:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3503,
                  "mutability": "mutable",
                  "name": "_feeTimeoutDays",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "593:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3505,
                  "mutability": "mutable",
                  "name": "_blacklistTimeoutDays",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "626:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "_protocolFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "665:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3509,
                  "mutability": "mutable",
                  "name": "_tokenOwnerFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "705:32:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3511,
                  "mutability": "mutable",
                  "name": "_reportExtraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "747:29:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3513,
                  "mutability": "mutable",
                  "name": "_orderExtraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "786:28:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3512,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3515,
                  "mutability": "mutable",
                  "name": "_ipfsDomain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "824:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3514,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "491:364:8"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:8"
            },
            "scope": 3936,
            "src": "480:777:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1929
            ],
            "body": {
              "id": 3576,
              "nodeType": "Block",
              "src": "1403:201:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3552,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3550,
                      "src": "1413:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3555,
                          "name": "_listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3544,
                          "src": "1434:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                            "typeString": "struct Dagora.Listing memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3556,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3546,
                          "src": "1444:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sig_$694_memory_ptr",
                            "typeString": "struct Dagora.Sig memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                            "typeString": "struct Dagora.Listing memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_Sig_$694_memory_ptr",
                            "typeString": "struct Dagora.Sig memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3553,
                          "name": "Dagora",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1420:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Dagora_$3405_$",
                            "typeString": "type(contract Dagora)"
                          }
                        },
                        "id": 3554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "report",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1929,
                        "src": "1420:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Listing_$644_memory_ptr_$_t_struct$_Sig_$694_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (struct Dagora.Listing memory,struct Dagora.Sig memory) returns (bytes32)"
                        }
                      },
                      "id": 3557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1420:28:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1413:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3559,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:35:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3561,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "1489:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                              "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                            }
                          },
                          "id": 3563,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3562,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3550,
                            "src": "1498:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1489:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                            "typeString": "struct Dagora.RunningDispute storage ref"
                          }
                        },
                        "id": 3564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "1489:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3569,
                                "name": "ipfsDomain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "1556:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3570,
                                  "name": "_listing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3544,
                                  "src": "1568:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                                    "typeString": "struct Dagora.Listing memory"
                                  }
                                },
                                "id": 3571,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ipfsHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 629,
                                "src": "1568:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3567,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1539:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1539:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1539:47:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3565,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1532:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:55:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3560,
                      "name": "MetaEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "1463:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:134:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3575,
                  "nodeType": "EmitStatement",
                  "src": "1458:139:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "82ad5f75",
            "id": 3577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "report",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1343:8:8"
            },
            "parameters": {
              "id": 3547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3544,
                  "mutability": "mutable",
                  "name": "_listing",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "1279:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                    "typeString": "struct Dagora.Listing"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3543,
                    "name": "Listing",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 644,
                    "src": "1279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$644_storage_ptr",
                      "typeString": "struct Dagora.Listing"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3546,
                  "mutability": "mutable",
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "1304:14:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Sig_$694_memory_ptr",
                    "typeString": "struct Dagora.Sig"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3545,
                    "name": "Sig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 694,
                    "src": "1304:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sig_$694_storage_ptr",
                      "typeString": "struct Dagora.Sig"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1278:41:8"
            },
            "returnParameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "1385:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1384:14:8"
            },
            "scope": 3936,
            "src": "1263:341:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2076
            ],
            "body": {
              "id": 3609,
              "nodeType": "Block",
              "src": "1742:212:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3585,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3583,
                      "src": "1752:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3588,
                          "name": "_order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3579,
                          "src": "1785:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                            "typeString": "struct Dagora.Order memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                            "typeString": "struct Dagora.Order memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3586,
                          "name": "Dagora",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1759:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Dagora_$3405_$",
                            "typeString": "type(contract Dagora)"
                          }
                        },
                        "id": 3587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "disputeTransaction",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2076,
                        "src": "1759:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$671_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (struct Dagora.Order memory) returns (bytes32)"
                        }
                      },
                      "id": 3589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1759:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1752:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:40:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3593,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "1833:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                              "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                            }
                          },
                          "id": 3595,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3594,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3583,
                            "src": "1842:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1833:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                            "typeString": "struct Dagora.RunningDispute storage ref"
                          }
                        },
                        "id": 3596,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "1833:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3601,
                                "name": "ipfsDomain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "1900:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3602,
                                    "name": "_order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3579,
                                    "src": "1912:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                                      "typeString": "struct Dagora.Order memory"
                                    }
                                  },
                                  "id": 3603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "listing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 646,
                                  "src": "1912:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                                    "typeString": "struct Dagora.Listing memory"
                                  }
                                },
                                "id": 3604,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ipfsHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 629,
                                "src": "1912:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3599,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1883:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1883:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1883:53:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1876:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3597,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1876:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1876:61:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3592,
                      "name": "MetaEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "1807:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3608,
                  "nodeType": "EmitStatement",
                  "src": "1802:145:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "39d2a694",
            "id": 3610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeTransaction",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3581,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1682:8:8"
            },
            "parameters": {
              "id": 3580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3579,
                  "mutability": "mutable",
                  "name": "_order",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3610,
                  "src": "1638:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                    "typeString": "struct Dagora.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3578,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 671,
                    "src": "1638:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$671_storage_ptr",
                      "typeString": "struct Dagora.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1637:21:8"
            },
            "returnParameters": {
              "id": 3584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3610,
                  "src": "1724:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1723:14:8"
            },
            "scope": 3936,
            "src": "1610:344:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2447
            ],
            "body": {
              "id": 3726,
              "nodeType": "Block",
              "src": "2060:1311:8",
              "statements": [
                {
                  "assignments": [
                    3619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3619,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3726,
                      "src": "2070:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3618,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "2070:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3623,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3620,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "2103:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3622,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3621,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3612,
                      "src": "2112:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2103:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2070:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3624,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3619,
                        "src": "2127:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 716,
                      "src": "2127:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$620",
                        "typeString": "enum Dagora.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3627,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "2144:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$620_$",
                          "typeString": "type(enum Dagora.DisputeStatus)"
                        }
                      },
                      "id": 3628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DisputeCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2144:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$620",
                        "typeString": "enum Dagora.DisputeStatus"
                      }
                    },
                    "src": "2127:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$620",
                      "typeString": "enum Dagora.DisputeStatus"
                    }
                  },
                  "id": 3630,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:45:8"
                },
                {
                  "assignments": [
                    3632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3632,
                      "mutability": "mutable",
                      "name": "disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3726,
                      "src": "2182:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2182:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3647,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3637,
                        "name": "AMOUNT_OF_CHOICES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "2267:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          },
                          "id": 3642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3638,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "2298:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disputeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 708,
                            "src": "2298:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeType_$610",
                              "typeString": "enum Dagora.DisputeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3640,
                              "name": "DisputeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 610,
                              "src": "2321:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                                "typeString": "type(enum Dagora.DisputeType)"
                              }
                            },
                            "id": 3641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Order",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2321:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeType_$610",
                              "typeString": "enum Dagora.DisputeType"
                            }
                          },
                          "src": "2298:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 3644,
                          "name": "reportExtraData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3493,
                          "src": "2390:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 3645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "2298:107:8",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 3643,
                          "name": "orderExtraData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3495,
                          "src": "2357:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3633,
                          "name": "arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3491,
                          "src": "2202:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Arbitrator_$258",
                            "typeString": "contract Arbitrator"
                          }
                        },
                        "id": 3634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createDispute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 191,
                        "src": "2202:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,bytes memory) payable external returns (uint256)"
                        }
                      },
                      "id": 3636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 3635,
                          "name": "_arbitrationCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3614,
                          "src": "2235:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2202:51:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,bytes memory) payable external returns (uint256)"
                      }
                    },
                    "id": 3646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:213:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2182:233:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3648,
                        "name": "disputeIDtoHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "2425:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 3650,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3649,
                        "name": "disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3632,
                        "src": "2441:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2425:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3651,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3612,
                      "src": "2454:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2425:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3653,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:33:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3655,
                        "name": "arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3491,
                        "src": "2494:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3656,
                        "name": "disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3632,
                        "src": "2518:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3657,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3619,
                          "src": "2541:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "2541:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3659,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3619,
                          "src": "2577:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3660,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "2577:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3654,
                      "name": "Dispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "2473:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$258_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:136:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3662,
                  "nodeType": "EmitStatement",
                  "src": "2468:141:8"
                },
                {
                  "assignments": [
                    3664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3664,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3726,
                      "src": "2660:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3663,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2660:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3665,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2660:12:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3666,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3619,
                        "src": "2686:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3667,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prosecutionFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 704,
                      "src": "2686:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3668,
                      "name": "_arbitrationCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3614,
                      "src": "2711:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2686:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3695,
                  "nodeType": "IfStatement",
                  "src": "2682:328:8",
                  "trueBody": {
                    "id": 3694,
                    "nodeType": "Block",
                    "src": "2729:281:8",
                    "statements": [
                      {
                        "assignments": [
                          3671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3671,
                            "mutability": "mutable",
                            "name": "extraFeeProsecution",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3694,
                            "src": "2743:27:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3670,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2743:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3676,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3672,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "2773:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prosecutionFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "2773:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3674,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "2814:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2773:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2743:87:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3677,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "2844:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3679,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "prosecutionFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "2844:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3680,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "2869:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2844:41:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3682,
                        "nodeType": "ExpressionStatement",
                        "src": "2844:41:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 3683,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3664,
                                "src": "2900:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 3684,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2899:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 3690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2996:2:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3685,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3619,
                                    "src": "2913:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                      "typeString": "struct Dagora.RunningDispute storage pointer"
                                    }
                                  },
                                  "id": 3686,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "prosecution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 696,
                                  "src": "2913:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 3687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2913:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 3689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "argumentTypes": null,
                                  "id": 3688,
                                  "name": "extraFeeProsecution",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3671,
                                  "src": "2962:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "2913:82:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2913:86:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2899:100:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3693,
                        "nodeType": "ExpressionStatement",
                        "src": "2899:100:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3696,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3619,
                        "src": "3067:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3697,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "defendantFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 706,
                      "src": "3067:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3698,
                      "name": "_arbitrationCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3614,
                      "src": "3090:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3067:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3725,
                  "nodeType": "IfStatement",
                  "src": "3063:302:8",
                  "trueBody": {
                    "id": 3724,
                    "nodeType": "Block",
                    "src": "3108:257:8",
                    "statements": [
                      {
                        "assignments": [
                          3701
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3701,
                            "mutability": "mutable",
                            "name": "extraFeeDefendant",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3724,
                            "src": "3122:25:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3122:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3706,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3702,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "3150:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3703,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "defendantFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "3150:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3704,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "3173:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3150:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3122:67:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3707,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "3203:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3709,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "defendantFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "3203:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3710,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "3226:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3203:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3712,
                        "nodeType": "ExpressionStatement",
                        "src": "3203:39:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 3713,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3664,
                                "src": "3257:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 3714,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3256:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 3720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3338:2:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3715,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3619,
                                    "src": "3270:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                      "typeString": "struct Dagora.RunningDispute storage pointer"
                                    }
                                  },
                                  "id": 3716,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "defendant",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 698,
                                  "src": "3270:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 3717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3270:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 3719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "argumentTypes": null,
                                  "id": 3718,
                                  "name": "extraFeeDefendant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3701,
                                  "src": "3301:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "3270:50:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3270:84:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "3256:98:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3723,
                        "nodeType": "ExpressionStatement",
                        "src": "3256:98:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 3727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "raiseDispute",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3616,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2047:8:8"
            },
            "parameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3612,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3727,
                  "src": "1982:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3614,
                  "mutability": "mutable",
                  "name": "_arbitrationCost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3727,
                  "src": "1996:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:40:8"
            },
            "returnParameters": {
              "id": 3617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:8"
            },
            "scope": 3936,
            "src": "1960:1411:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2455
            ],
            "body": {
              "id": 3783,
              "nodeType": "Block",
              "src": "3477:695:8",
              "statements": [
                {
                  "assignments": [
                    3736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3736,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3783,
                      "src": "3487:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3735,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "3487:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3740,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3737,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "3520:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3739,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3738,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3729,
                      "src": "3529:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3520:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3487:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3742,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "3566:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3566:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3744,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3736,
                              "src": "3582:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3745,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prosecution",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 696,
                            "src": "3582:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3566:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 3751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3747,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "3621:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3621:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3749,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3736,
                              "src": "3637:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3750,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "defendant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 698,
                            "src": "3637:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3621:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3566:88:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c6572206d757374206265207468652070726f7365637574696f6e206f722074686520646566656e64616e742e",
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:54:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6036214a85f7e1f16d1ac713450302ce3099f65ba20d11f02b100ca50182d40",
                          "typeString": "literal_string \"The caller must be the prosecution or the defendant.\""
                        },
                        "value": "The caller must be the prosecution or the defendant."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6036214a85f7e1f16d1ac713450302ce3099f65ba20d11f02b100ca50182d40",
                          "typeString": "literal_string \"The caller must be the prosecution or the defendant.\""
                        }
                      ],
                      "id": 3741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3545:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:187:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3755,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:187:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        },
                        "id": 3761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3757,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "3763:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3758,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "disputeType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "3763:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3759,
                            "name": "DisputeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "3786:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                              "typeString": "type(enum Dagora.DisputeType)"
                            }
                          },
                          "id": 3760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3786:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "src": "3763:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45766964656e63657320617265206f6e6c7920616c6c6f77656420666f72206f72646572732064697370757465732e",
                        "id": 3762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3817:49:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad4c0fe8fc9e9c083515f600a13addbca5b82e1a54f7d3b81407c5d5d10e7a96",
                          "typeString": "literal_string \"Evidences are only allowed for orders disputes.\""
                        },
                        "value": "Evidences are only allowed for orders disputes."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad4c0fe8fc9e9c083515f600a13addbca5b82e1a54f7d3b81407c5d5d10e7a96",
                          "typeString": "literal_string \"Evidences are only allowed for orders disputes.\""
                        }
                      ],
                      "id": 3756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3742:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:134:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3764,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:134:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$620",
                          "typeString": "enum Dagora.DisputeStatus"
                        },
                        "id": 3770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3766,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "3907:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3767,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 716,
                          "src": "3907:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3768,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "3924:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$620_$",
                              "typeString": "type(enum Dagora.DisputeStatus)"
                            }
                          },
                          "id": 3769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Resolved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3924:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "src": "3907:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206e6f742073656e642065766964656e6365206966207468652064697370757465206973207265736f6c7665642e",
                        "id": 3771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3960:52:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17476fa1eb25af1078f838ea0cb9f2aa15a274ca729ba1922ba7b6fab935d55b",
                          "typeString": "literal_string \"Must not send evidence if the dispute is resolved.\""
                        },
                        "value": "Must not send evidence if the dispute is resolved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17476fa1eb25af1078f838ea0cb9f2aa15a274ca729ba1922ba7b6fab935d55b",
                          "typeString": "literal_string \"Must not send evidence if the dispute is resolved.\""
                        }
                      ],
                      "id": 3765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3886:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:136:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:136:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3775,
                        "name": "arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3491,
                        "src": "4060:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3776,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3736,
                          "src": "4084:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3777,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "4084:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3778,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5952,
                          "src": "4120:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4120:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3780,
                        "name": "_evidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "4146:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3774,
                      "name": "Evidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "4038:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$258_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,address,string memory)"
                      }
                    },
                    "id": 3781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4038:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3782,
                  "nodeType": "EmitStatement",
                  "src": "4033:132:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f48a0b31",
            "id": 3784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3733,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3464:8:8"
            },
            "parameters": {
              "id": 3732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3729,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3784,
                  "src": "3401:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "_evidence",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3784,
                  "src": "3416:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3400:40:8"
            },
            "returnParameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3477:0:8"
            },
            "scope": 3936,
            "src": "3377:795:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              308
            ],
            "body": {
              "id": 3859,
              "nodeType": "Block",
              "src": "4245:695:8",
              "statements": [
                {
                  "assignments": [
                    3793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3793,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3859,
                      "src": "4255:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3792,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4255:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3797,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3794,
                      "name": "disputeIDtoHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "4270:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 3796,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3795,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3786,
                      "src": "4286:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4270:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4255:42:8"
                },
                {
                  "assignments": [
                    3799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3799,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3859,
                      "src": "4307:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3798,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "4307:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3803,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3800,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "4340:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3802,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3801,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3793,
                      "src": "4349:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4340:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4307:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3805,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5952,
                            "src": "4385:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 3806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4385:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3809,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3491,
                              "src": "4409:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Arbitrator_$258",
                                "typeString": "contract Arbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Arbitrator_$258",
                                "typeString": "contract Arbitrator"
                              }
                            ],
                            "id": 3808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4401:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3807,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4401:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4401:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4385:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c6572206d757374206265207468652061726269747261746f722e",
                        "id": 3812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4434:36:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d708c92ffcedb80332990adcfb1e0c60bf83ca7ddae226ed2c23c9593bd69c2d",
                          "typeString": "literal_string \"The caller must be the arbitrator.\""
                        },
                        "value": "The caller must be the arbitrator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d708c92ffcedb80332990adcfb1e0c60bf83ca7ddae226ed2c23c9593bd69c2d",
                          "typeString": "literal_string \"The caller must be the arbitrator.\""
                        }
                      ],
                      "id": 3804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4364:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:116:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3814,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:116:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$620",
                          "typeString": "enum Dagora.DisputeStatus"
                        },
                        "id": 3820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3816,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3799,
                            "src": "4511:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 716,
                          "src": "4511:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3818,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "4529:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$620_$",
                              "typeString": "type(enum Dagora.DisputeStatus)"
                            }
                          },
                          "id": 3819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DisputeCreated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4529:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "src": "4511:46:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520646973707574652068617320616c7265616479206265656e207265736f6c7665642e",
                        "id": 3821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4571:40:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150d59758e8a2d8d7b6b05e286d474270f4ef159428a22a9e8d5b12a3d396836",
                          "typeString": "literal_string \"The dispute has already been resolved.\""
                        },
                        "value": "The dispute has already been resolved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150d59758e8a2d8d7b6b05e286d474270f4ef159428a22a9e8d5b12a3d396836",
                          "typeString": "literal_string \"The dispute has already been resolved.\""
                        }
                      ],
                      "id": 3815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4490:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4490:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3823,
                  "nodeType": "ExpressionStatement",
                  "src": "4490:131:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3826,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "4654:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4654:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3825,
                          "name": "Arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4643:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrator_$258_$",
                            "typeString": "type(contract Arbitrator)"
                          }
                        },
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4643:24:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3829,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3786,
                        "src": "4669:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3830,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3788,
                        "src": "4681:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3824,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "4636:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$258_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,uint256)"
                      }
                    },
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3832,
                  "nodeType": "EmitStatement",
                  "src": "4631:58:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DisputeType_$610",
                      "typeString": "enum Dagora.DisputeType"
                    },
                    "id": 3837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3833,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3799,
                        "src": "4703:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disputeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 708,
                      "src": "4703:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3835,
                        "name": "DisputeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "4726:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                          "typeString": "type(enum Dagora.DisputeType)"
                        }
                      },
                      "id": 3836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Report",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4726:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "src": "4703:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3857,
                    "nodeType": "Block",
                    "src": "4814:120:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3845,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3799,
                              "src": "4848:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3846,
                              "name": "_ruling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3788,
                              "src": "4857:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3844,
                            "name": "_executeOrderRuling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2643,
                            "src": "4828:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RunningDispute_$717_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct Dagora.RunningDispute storage pointer,uint256)"
                            }
                          },
                          "id": 3847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4828:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3848,
                        "nodeType": "ExpressionStatement",
                        "src": "4828:37:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3849,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "4879:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Transaction_$680_storage_$",
                                  "typeString": "mapping(bytes32 => struct Dagora.Transaction storage ref)"
                                }
                              },
                              "id": 3851,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3850,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3793,
                                "src": "4892:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4879:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$680_storage",
                                "typeString": "struct Dagora.Transaction storage ref"
                              }
                            },
                            "id": 3852,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 679,
                            "src": "4879:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$627",
                              "typeString": "enum Dagora.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3853,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "4907:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$627_$",
                                "typeString": "type(enum Dagora.Status)"
                              }
                            },
                            "id": 3854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Finalized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4907:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$627",
                              "typeString": "enum Dagora.Status"
                            }
                          },
                          "src": "4879:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$627",
                            "typeString": "enum Dagora.Status"
                          }
                        },
                        "id": 3856,
                        "nodeType": "ExpressionStatement",
                        "src": "4879:44:8"
                      }
                    ]
                  },
                  "id": 3858,
                  "nodeType": "IfStatement",
                  "src": "4699:235:8",
                  "trueBody": {
                    "id": 3843,
                    "nodeType": "Block",
                    "src": "4746:62:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3839,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3799,
                              "src": "4780:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3840,
                              "name": "_ruling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3788,
                              "src": "4789:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3838,
                            "name": "executeReportRuling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "4760:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RunningDispute_$717_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct Dagora.RunningDispute storage pointer,uint256)"
                            }
                          },
                          "id": 3841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4760:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3842,
                        "nodeType": "ExpressionStatement",
                        "src": "4760:37:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "311a6c56",
            "id": 3860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3790,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4236:8:8"
            },
            "parameters": {
              "id": 3789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3786,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3860,
                  "src": "4192:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4192:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3788,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3860,
                  "src": "4212:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4212:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4191:37:8"
            },
            "returnParameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4245:0:8"
            },
            "scope": 3936,
            "src": "4178:762:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2461
            ],
            "body": {
              "id": 3892,
              "nodeType": "Block",
              "src": "5001:324:8",
              "statements": [
                {
                  "assignments": [
                    3867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3867,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3892,
                      "src": "5011:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3866,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "5011:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3871,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3868,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "5044:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3870,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3869,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3862,
                      "src": "5053:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5044:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5011:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3873,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3867,
                            "src": "5090:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3874,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "disputeType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "5090:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3875,
                            "name": "DisputeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "5113:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                              "typeString": "type(enum Dagora.DisputeType)"
                            }
                          },
                          "id": 3876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5113:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "src": "5090:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41707065616c7320617265206f6e6c7920616c6c6f77656420666f72206f72646572732064697370757465732e",
                        "id": 3878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5144:47:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d3a53c3ab72230d4ae60ed0f073d0083f80f399c8e75942a9893501e1f0ff9",
                          "typeString": "literal_string \"Appeals are only allowed for orders disputes.\""
                        },
                        "value": "Appeals are only allowed for orders disputes."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d3a53c3ab72230d4ae60ed0f073d0083f80f399c8e75942a9893501e1f0ff9",
                          "typeString": "literal_string \"Appeals are only allowed for orders disputes.\""
                        }
                      ],
                      "id": 3872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5069:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:132:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3880,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:132:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3887,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3867,
                          "src": "5263:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "disputeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 714,
                        "src": "5263:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3889,
                        "name": "orderExtraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "5294:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3881,
                          "name": "arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3491,
                          "src": "5212:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Arbitrator_$258",
                            "typeString": "contract Arbitrator"
                          }
                        },
                        "id": 3883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appeal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 220,
                        "src": "5212:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (uint256,bytes memory) payable external"
                        }
                      },
                      "id": 3886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3884,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5238:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5238:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5212:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (uint256,bytes memory) payable external"
                      }
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5212:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3891,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:106:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ece1de44",
            "id": 3893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3864,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4984:8:8"
            },
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3862,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3893,
                  "src": "4962:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3861,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4961:15:8"
            },
            "returnParameters": {
              "id": 3865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5001:0:8"
            },
            "scope": 3936,
            "src": "4946:379:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2650
            ],
            "body": {
              "id": 3934,
              "nodeType": "Block",
              "src": "5454:277:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        },
                        "id": 3905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3902,
                          "name": "_type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "5472:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3903,
                            "name": "DisputeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "5480:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                              "typeString": "type(enum Dagora.DisputeType)"
                            }
                          },
                          "id": 3904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5480:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "src": "5472:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5464:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5464:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3907,
                  "nodeType": "ExpressionStatement",
                  "src": "5464:33:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DisputeType_$610",
                      "typeString": "enum Dagora.DisputeType"
                    },
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3908,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "5511:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3909,
                        "name": "DisputeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "5520:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                          "typeString": "type(enum Dagora.DisputeType)"
                        }
                      },
                      "id": 3910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Report",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5520:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "src": "5511:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      },
                      "id": 3923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3920,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "5624:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3921,
                          "name": "DisputeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "5633:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                            "typeString": "type(enum Dagora.DisputeType)"
                          }
                        },
                        "id": 3922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5633:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        }
                      },
                      "src": "5624:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 3932,
                    "nodeType": "IfStatement",
                    "src": "5620:105:8",
                    "trueBody": {
                      "id": 3931,
                      "nodeType": "Block",
                      "src": "5652:73:8",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 3929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 3924,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3899,
                              "src": "5666:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3927,
                                  "name": "orderExtraData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3495,
                                  "src": "5699:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage",
                                    "typeString": "bytes storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_storage",
                                    "typeString": "bytes storage ref"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3925,
                                  "name": "arbitrator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3491,
                                  "src": "5672:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Arbitrator_$258",
                                    "typeString": "contract Arbitrator"
                                  }
                                },
                                "id": 3926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "arbitrationCost",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 199,
                                "src": "5672:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (bytes memory) view external returns (uint256)"
                                }
                              },
                              "id": 3928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5672:42:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5666:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3930,
                          "nodeType": "ExpressionStatement",
                          "src": "5666:48:8"
                        }
                      ]
                    }
                  },
                  "id": 3933,
                  "nodeType": "IfStatement",
                  "src": "5507:218:8",
                  "trueBody": {
                    "id": 3919,
                    "nodeType": "Block",
                    "src": "5540:74:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3912,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3899,
                            "src": "5554:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3915,
                                "name": "reportExtraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3493,
                                "src": "5587:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3913,
                                "name": "arbitrator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3491,
                                "src": "5560:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Arbitrator_$258",
                                  "typeString": "contract Arbitrator"
                                }
                              },
                              "id": 3914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arbitrationCost",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 199,
                              "src": "5560:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (bytes memory) view external returns (uint256)"
                              }
                            },
                            "id": 3916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5560:43:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5554:49:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3918,
                        "nodeType": "ExpressionStatement",
                        "src": "5554:49:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "703472f3",
            "id": 3935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3897,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5398:8:8"
            },
            "parameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3895,
                  "mutability": "mutable",
                  "name": "_type",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3935,
                  "src": "5356:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeType_$610",
                    "typeString": "enum Dagora.DisputeType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3894,
                    "name": "DisputeType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 610,
                    "src": "5356:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeType_$610",
                      "typeString": "enum Dagora.DisputeType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5355:19:8"
            },
            "returnParameters": {
              "id": 3900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3899,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3935,
                  "src": "5437:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5436:13:8"
            },
            "scope": 3936,
            "src": "5331:400:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3937,
        "src": "201:5532:8"
      }
    ],
    "src": "32:5702:8"
  },
  "legacyAST": {
    "absolutePath": "/home/gustavo/projects/dagora/contracts/marketplace/KlerosDagora.sol",
    "exportedSymbols": {
      "KlerosDagora": [
        3936
      ]
    },
    "id": 3937,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3481,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "id": 3482,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:8"
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/marketplace/BatchDagora.sol",
        "file": "./BatchDagora.sol",
        "id": 3483,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 591,
        "src": "91:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/Arbitrator.sol",
        "file": "../arbitration/Arbitrator.sol",
        "id": 3484,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 259,
        "src": "119:39:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gustavo/projects/dagora/contracts/arbitration/IArbitrable.sol",
        "file": "../arbitration/IArbitrable.sol",
        "id": 3485,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 310,
        "src": "159:40:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3486,
              "name": "BatchDagora",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 590,
              "src": "226:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BatchDagora_$590",
                "typeString": "contract BatchDagora"
              }
            },
            "id": 3487,
            "nodeType": "InheritanceSpecifier",
            "src": "226:11:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3488,
              "name": "IArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 309,
              "src": "239:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrable_$309",
                "typeString": "contract IArbitrable"
              }
            },
            "id": 3489,
            "nodeType": "InheritanceSpecifier",
            "src": "239:11:8"
          }
        ],
        "contractDependencies": [
          309,
          590,
          3405,
          5964,
          6073
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3936,
        "linearizedBaseContracts": [
          3936,
          309,
          590,
          3405,
          6073,
          5964
        ],
        "name": "KlerosDagora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6cc6cde1",
            "id": 3491,
            "mutability": "mutable",
            "name": "arbitrator",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3936,
            "src": "257:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Arbitrator_$258",
              "typeString": "contract Arbitrator"
            },
            "typeName": {
              "contractScope": null,
              "id": 3490,
              "name": "Arbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 258,
              "src": "257:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Arbitrator_$258",
                "typeString": "contract Arbitrator"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee7269d7",
            "id": 3493,
            "mutability": "mutable",
            "name": "reportExtraData",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3936,
            "src": "330:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 3492,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "330:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6398667",
            "id": 3495,
            "mutability": "mutable",
            "name": "orderExtraData",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3936,
            "src": "405:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 3494,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "405:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3541,
              "nodeType": "Block",
              "src": "1118:139:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3527,
                      "name": "arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "1128:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$258",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3529,
                          "name": "_arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3497,
                          "src": "1152:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3528,
                        "name": "Arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "1141:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Arbitrator_$258_$",
                          "typeString": "type(contract Arbitrator)"
                        }
                      },
                      "id": 3530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1141:23:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$258",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "src": "1128:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$258",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "id": 3532,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:36:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3533,
                      "name": "reportExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3493,
                      "src": "1174:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3534,
                      "name": "_reportExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "1192:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1174:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 3536,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:34:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3537,
                      "name": "orderExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "1218:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3538,
                      "name": "_orderExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3513,
                      "src": "1235:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1218:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 3540,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:32:8"
                }
              ]
            },
            "documentation": null,
            "id": 3542,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3518,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3499,
                    "src": "899:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3519,
                    "name": "_protocolFeeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3501,
                    "src": "919:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3520,
                    "name": "_feeTimeoutDays",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3503,
                    "src": "954:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3521,
                    "name": "_blacklistTimeoutDays",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3505,
                    "src": "983:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3522,
                    "name": "_protocolFeePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3507,
                    "src": "1018:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3523,
                    "name": "_tokenOwnerFeePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3509,
                    "src": "1054:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3524,
                    "name": "_ipfsDomain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3515,
                    "src": "1092:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3525,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3517,
                  "name": "Dagora",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3405,
                  "src": "879:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Dagora_$3405_$",
                    "typeString": "type(contract Dagora)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "879:234:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3497,
                  "mutability": "mutable",
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "501:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "530:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3501,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "554:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3503,
                  "mutability": "mutable",
                  "name": "_feeTimeoutDays",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "593:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3505,
                  "mutability": "mutable",
                  "name": "_blacklistTimeoutDays",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "626:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "_protocolFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "665:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3509,
                  "mutability": "mutable",
                  "name": "_tokenOwnerFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "705:32:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3511,
                  "mutability": "mutable",
                  "name": "_reportExtraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "747:29:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3513,
                  "mutability": "mutable",
                  "name": "_orderExtraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "786:28:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3512,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3515,
                  "mutability": "mutable",
                  "name": "_ipfsDomain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3542,
                  "src": "824:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3514,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "491:364:8"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:8"
            },
            "scope": 3936,
            "src": "480:777:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1929
            ],
            "body": {
              "id": 3576,
              "nodeType": "Block",
              "src": "1403:201:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3552,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3550,
                      "src": "1413:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3555,
                          "name": "_listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3544,
                          "src": "1434:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                            "typeString": "struct Dagora.Listing memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3556,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3546,
                          "src": "1444:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sig_$694_memory_ptr",
                            "typeString": "struct Dagora.Sig memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                            "typeString": "struct Dagora.Listing memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_Sig_$694_memory_ptr",
                            "typeString": "struct Dagora.Sig memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3553,
                          "name": "Dagora",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1420:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Dagora_$3405_$",
                            "typeString": "type(contract Dagora)"
                          }
                        },
                        "id": 3554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "report",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1929,
                        "src": "1420:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Listing_$644_memory_ptr_$_t_struct$_Sig_$694_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (struct Dagora.Listing memory,struct Dagora.Sig memory) returns (bytes32)"
                        }
                      },
                      "id": 3557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1420:28:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1413:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3559,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:35:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3561,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "1489:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                              "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                            }
                          },
                          "id": 3563,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3562,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3550,
                            "src": "1498:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1489:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                            "typeString": "struct Dagora.RunningDispute storage ref"
                          }
                        },
                        "id": 3564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "1489:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3569,
                                "name": "ipfsDomain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "1556:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3570,
                                  "name": "_listing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3544,
                                  "src": "1568:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                                    "typeString": "struct Dagora.Listing memory"
                                  }
                                },
                                "id": 3571,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ipfsHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 629,
                                "src": "1568:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3567,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1539:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1539:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1539:47:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3565,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1532:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:55:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3560,
                      "name": "MetaEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "1463:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:134:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3575,
                  "nodeType": "EmitStatement",
                  "src": "1458:139:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "82ad5f75",
            "id": 3577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "report",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1343:8:8"
            },
            "parameters": {
              "id": 3547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3544,
                  "mutability": "mutable",
                  "name": "_listing",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "1279:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                    "typeString": "struct Dagora.Listing"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3543,
                    "name": "Listing",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 644,
                    "src": "1279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$644_storage_ptr",
                      "typeString": "struct Dagora.Listing"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3546,
                  "mutability": "mutable",
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "1304:14:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Sig_$694_memory_ptr",
                    "typeString": "struct Dagora.Sig"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3545,
                    "name": "Sig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 694,
                    "src": "1304:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sig_$694_storage_ptr",
                      "typeString": "struct Dagora.Sig"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1278:41:8"
            },
            "returnParameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "1385:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1384:14:8"
            },
            "scope": 3936,
            "src": "1263:341:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2076
            ],
            "body": {
              "id": 3609,
              "nodeType": "Block",
              "src": "1742:212:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3585,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3583,
                      "src": "1752:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3588,
                          "name": "_order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3579,
                          "src": "1785:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                            "typeString": "struct Dagora.Order memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                            "typeString": "struct Dagora.Order memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3586,
                          "name": "Dagora",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1759:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Dagora_$3405_$",
                            "typeString": "type(contract Dagora)"
                          }
                        },
                        "id": 3587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "disputeTransaction",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2076,
                        "src": "1759:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$671_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (struct Dagora.Order memory) returns (bytes32)"
                        }
                      },
                      "id": 3589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1759:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1752:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:40:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3593,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "1833:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                              "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                            }
                          },
                          "id": 3595,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3594,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3583,
                            "src": "1842:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1833:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                            "typeString": "struct Dagora.RunningDispute storage ref"
                          }
                        },
                        "id": 3596,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "1833:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3601,
                                "name": "ipfsDomain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "1900:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3602,
                                    "name": "_order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3579,
                                    "src": "1912:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                                      "typeString": "struct Dagora.Order memory"
                                    }
                                  },
                                  "id": 3603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "listing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 646,
                                  "src": "1912:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Listing_$644_memory_ptr",
                                    "typeString": "struct Dagora.Listing memory"
                                  }
                                },
                                "id": 3604,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ipfsHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 629,
                                "src": "1912:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3599,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1883:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1883:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1883:53:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1876:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3597,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1876:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1876:61:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3592,
                      "name": "MetaEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "1807:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3608,
                  "nodeType": "EmitStatement",
                  "src": "1802:145:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "39d2a694",
            "id": 3610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeTransaction",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3581,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1682:8:8"
            },
            "parameters": {
              "id": 3580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3579,
                  "mutability": "mutable",
                  "name": "_order",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3610,
                  "src": "1638:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$671_memory_ptr",
                    "typeString": "struct Dagora.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3578,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 671,
                    "src": "1638:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$671_storage_ptr",
                      "typeString": "struct Dagora.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1637:21:8"
            },
            "returnParameters": {
              "id": 3584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3610,
                  "src": "1724:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1723:14:8"
            },
            "scope": 3936,
            "src": "1610:344:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2447
            ],
            "body": {
              "id": 3726,
              "nodeType": "Block",
              "src": "2060:1311:8",
              "statements": [
                {
                  "assignments": [
                    3619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3619,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3726,
                      "src": "2070:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3618,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "2070:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3623,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3620,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "2103:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3622,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3621,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3612,
                      "src": "2112:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2103:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2070:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3624,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3619,
                        "src": "2127:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 716,
                      "src": "2127:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$620",
                        "typeString": "enum Dagora.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3627,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "2144:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$620_$",
                          "typeString": "type(enum Dagora.DisputeStatus)"
                        }
                      },
                      "id": 3628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DisputeCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2144:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$620",
                        "typeString": "enum Dagora.DisputeStatus"
                      }
                    },
                    "src": "2127:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$620",
                      "typeString": "enum Dagora.DisputeStatus"
                    }
                  },
                  "id": 3630,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:45:8"
                },
                {
                  "assignments": [
                    3632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3632,
                      "mutability": "mutable",
                      "name": "disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3726,
                      "src": "2182:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2182:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3647,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3637,
                        "name": "AMOUNT_OF_CHOICES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "2267:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          },
                          "id": 3642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3638,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "2298:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disputeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 708,
                            "src": "2298:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeType_$610",
                              "typeString": "enum Dagora.DisputeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3640,
                              "name": "DisputeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 610,
                              "src": "2321:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                                "typeString": "type(enum Dagora.DisputeType)"
                              }
                            },
                            "id": 3641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Order",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2321:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeType_$610",
                              "typeString": "enum Dagora.DisputeType"
                            }
                          },
                          "src": "2298:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 3644,
                          "name": "reportExtraData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3493,
                          "src": "2390:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 3645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "2298:107:8",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 3643,
                          "name": "orderExtraData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3495,
                          "src": "2357:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3633,
                          "name": "arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3491,
                          "src": "2202:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Arbitrator_$258",
                            "typeString": "contract Arbitrator"
                          }
                        },
                        "id": 3634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createDispute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 191,
                        "src": "2202:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,bytes memory) payable external returns (uint256)"
                        }
                      },
                      "id": 3636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 3635,
                          "name": "_arbitrationCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3614,
                          "src": "2235:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2202:51:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,bytes memory) payable external returns (uint256)"
                      }
                    },
                    "id": 3646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:213:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2182:233:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3648,
                        "name": "disputeIDtoHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "2425:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 3650,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3649,
                        "name": "disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3632,
                        "src": "2441:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2425:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3651,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3612,
                      "src": "2454:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2425:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3653,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:33:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3655,
                        "name": "arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3491,
                        "src": "2494:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3656,
                        "name": "disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3632,
                        "src": "2518:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3657,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3619,
                          "src": "2541:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "2541:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3659,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3619,
                          "src": "2577:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3660,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "2577:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3654,
                      "name": "Dispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "2473:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$258_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:136:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3662,
                  "nodeType": "EmitStatement",
                  "src": "2468:141:8"
                },
                {
                  "assignments": [
                    3664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3664,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3726,
                      "src": "2660:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3663,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2660:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3665,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2660:12:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3666,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3619,
                        "src": "2686:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3667,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prosecutionFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 704,
                      "src": "2686:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3668,
                      "name": "_arbitrationCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3614,
                      "src": "2711:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2686:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3695,
                  "nodeType": "IfStatement",
                  "src": "2682:328:8",
                  "trueBody": {
                    "id": 3694,
                    "nodeType": "Block",
                    "src": "2729:281:8",
                    "statements": [
                      {
                        "assignments": [
                          3671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3671,
                            "mutability": "mutable",
                            "name": "extraFeeProsecution",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3694,
                            "src": "2743:27:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3670,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2743:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3676,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3672,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "2773:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prosecutionFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "2773:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3674,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "2814:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2773:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2743:87:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3677,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "2844:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3679,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "prosecutionFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "2844:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3680,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "2869:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2844:41:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3682,
                        "nodeType": "ExpressionStatement",
                        "src": "2844:41:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 3683,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3664,
                                "src": "2900:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 3684,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2899:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 3690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2996:2:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3685,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3619,
                                    "src": "2913:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                      "typeString": "struct Dagora.RunningDispute storage pointer"
                                    }
                                  },
                                  "id": 3686,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "prosecution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 696,
                                  "src": "2913:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 3687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2913:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 3689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "argumentTypes": null,
                                  "id": 3688,
                                  "name": "extraFeeProsecution",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3671,
                                  "src": "2962:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "2913:82:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2913:86:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2899:100:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3693,
                        "nodeType": "ExpressionStatement",
                        "src": "2899:100:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3696,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3619,
                        "src": "3067:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3697,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "defendantFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 706,
                      "src": "3067:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3698,
                      "name": "_arbitrationCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3614,
                      "src": "3090:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3067:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3725,
                  "nodeType": "IfStatement",
                  "src": "3063:302:8",
                  "trueBody": {
                    "id": 3724,
                    "nodeType": "Block",
                    "src": "3108:257:8",
                    "statements": [
                      {
                        "assignments": [
                          3701
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3701,
                            "mutability": "mutable",
                            "name": "extraFeeDefendant",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3724,
                            "src": "3122:25:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3122:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3706,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3702,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "3150:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3703,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "defendantFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "3150:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3704,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "3173:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3150:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3122:67:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3707,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3619,
                              "src": "3203:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3709,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "defendantFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "3203:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3710,
                            "name": "_arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3614,
                            "src": "3226:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3203:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3712,
                        "nodeType": "ExpressionStatement",
                        "src": "3203:39:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 3713,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3664,
                                "src": "3257:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 3714,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3256:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 3720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3338:2:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3715,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3619,
                                    "src": "3270:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                      "typeString": "struct Dagora.RunningDispute storage pointer"
                                    }
                                  },
                                  "id": 3716,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "defendant",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 698,
                                  "src": "3270:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 3717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3270:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 3719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "argumentTypes": null,
                                  "id": 3718,
                                  "name": "extraFeeDefendant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3701,
                                  "src": "3301:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "3270:50:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3270:84:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "3256:98:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3723,
                        "nodeType": "ExpressionStatement",
                        "src": "3256:98:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 3727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "raiseDispute",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3616,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2047:8:8"
            },
            "parameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3612,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3727,
                  "src": "1982:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3614,
                  "mutability": "mutable",
                  "name": "_arbitrationCost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3727,
                  "src": "1996:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:40:8"
            },
            "returnParameters": {
              "id": 3617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:8"
            },
            "scope": 3936,
            "src": "1960:1411:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2455
            ],
            "body": {
              "id": 3783,
              "nodeType": "Block",
              "src": "3477:695:8",
              "statements": [
                {
                  "assignments": [
                    3736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3736,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3783,
                      "src": "3487:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3735,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "3487:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3740,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3737,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "3520:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3739,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3738,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3729,
                      "src": "3529:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3520:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3487:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3742,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "3566:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3566:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3744,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3736,
                              "src": "3582:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3745,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prosecution",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 696,
                            "src": "3582:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3566:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 3751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3747,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "3621:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3621:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3749,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3736,
                              "src": "3637:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            "id": 3750,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "defendant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 698,
                            "src": "3637:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3621:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3566:88:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c6572206d757374206265207468652070726f7365637574696f6e206f722074686520646566656e64616e742e",
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:54:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6036214a85f7e1f16d1ac713450302ce3099f65ba20d11f02b100ca50182d40",
                          "typeString": "literal_string \"The caller must be the prosecution or the defendant.\""
                        },
                        "value": "The caller must be the prosecution or the defendant."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6036214a85f7e1f16d1ac713450302ce3099f65ba20d11f02b100ca50182d40",
                          "typeString": "literal_string \"The caller must be the prosecution or the defendant.\""
                        }
                      ],
                      "id": 3741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3545:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:187:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3755,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:187:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        },
                        "id": 3761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3757,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "3763:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3758,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "disputeType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "3763:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3759,
                            "name": "DisputeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "3786:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                              "typeString": "type(enum Dagora.DisputeType)"
                            }
                          },
                          "id": 3760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3786:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "src": "3763:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45766964656e63657320617265206f6e6c7920616c6c6f77656420666f72206f72646572732064697370757465732e",
                        "id": 3762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3817:49:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad4c0fe8fc9e9c083515f600a13addbca5b82e1a54f7d3b81407c5d5d10e7a96",
                          "typeString": "literal_string \"Evidences are only allowed for orders disputes.\""
                        },
                        "value": "Evidences are only allowed for orders disputes."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad4c0fe8fc9e9c083515f600a13addbca5b82e1a54f7d3b81407c5d5d10e7a96",
                          "typeString": "literal_string \"Evidences are only allowed for orders disputes.\""
                        }
                      ],
                      "id": 3756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3742:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:134:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3764,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:134:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$620",
                          "typeString": "enum Dagora.DisputeStatus"
                        },
                        "id": 3770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3766,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "3907:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3767,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 716,
                          "src": "3907:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3768,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "3924:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$620_$",
                              "typeString": "type(enum Dagora.DisputeStatus)"
                            }
                          },
                          "id": 3769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Resolved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3924:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "src": "3907:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206e6f742073656e642065766964656e6365206966207468652064697370757465206973207265736f6c7665642e",
                        "id": 3771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3960:52:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17476fa1eb25af1078f838ea0cb9f2aa15a274ca729ba1922ba7b6fab935d55b",
                          "typeString": "literal_string \"Must not send evidence if the dispute is resolved.\""
                        },
                        "value": "Must not send evidence if the dispute is resolved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17476fa1eb25af1078f838ea0cb9f2aa15a274ca729ba1922ba7b6fab935d55b",
                          "typeString": "literal_string \"Must not send evidence if the dispute is resolved.\""
                        }
                      ],
                      "id": 3765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3886:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:136:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:136:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3775,
                        "name": "arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3491,
                        "src": "4060:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3776,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3736,
                          "src": "4084:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3777,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "metaEvidenceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 712,
                        "src": "4084:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3778,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5952,
                          "src": "4120:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4120:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3780,
                        "name": "_evidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "4146:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3774,
                      "name": "Evidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "4038:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$258_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,address,string memory)"
                      }
                    },
                    "id": 3781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4038:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3782,
                  "nodeType": "EmitStatement",
                  "src": "4033:132:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f48a0b31",
            "id": 3784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3733,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3464:8:8"
            },
            "parameters": {
              "id": 3732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3729,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3784,
                  "src": "3401:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "_evidence",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3784,
                  "src": "3416:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3400:40:8"
            },
            "returnParameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3477:0:8"
            },
            "scope": 3936,
            "src": "3377:795:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              308
            ],
            "body": {
              "id": 3859,
              "nodeType": "Block",
              "src": "4245:695:8",
              "statements": [
                {
                  "assignments": [
                    3793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3793,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3859,
                      "src": "4255:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3792,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4255:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3797,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3794,
                      "name": "disputeIDtoHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "4270:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 3796,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3795,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3786,
                      "src": "4286:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4270:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4255:42:8"
                },
                {
                  "assignments": [
                    3799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3799,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3859,
                      "src": "4307:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3798,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "4307:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3803,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3800,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "4340:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3802,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3801,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3793,
                      "src": "4349:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4340:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4307:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3805,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5952,
                            "src": "4385:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 3806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4385:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3809,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3491,
                              "src": "4409:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Arbitrator_$258",
                                "typeString": "contract Arbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Arbitrator_$258",
                                "typeString": "contract Arbitrator"
                              }
                            ],
                            "id": 3808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4401:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3807,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4401:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4401:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4385:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c6572206d757374206265207468652061726269747261746f722e",
                        "id": 3812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4434:36:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d708c92ffcedb80332990adcfb1e0c60bf83ca7ddae226ed2c23c9593bd69c2d",
                          "typeString": "literal_string \"The caller must be the arbitrator.\""
                        },
                        "value": "The caller must be the arbitrator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d708c92ffcedb80332990adcfb1e0c60bf83ca7ddae226ed2c23c9593bd69c2d",
                          "typeString": "literal_string \"The caller must be the arbitrator.\""
                        }
                      ],
                      "id": 3804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4364:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:116:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3814,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:116:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$620",
                          "typeString": "enum Dagora.DisputeStatus"
                        },
                        "id": 3820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3816,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3799,
                            "src": "4511:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 716,
                          "src": "4511:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3818,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "4529:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$620_$",
                              "typeString": "type(enum Dagora.DisputeStatus)"
                            }
                          },
                          "id": 3819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DisputeCreated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4529:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$620",
                            "typeString": "enum Dagora.DisputeStatus"
                          }
                        },
                        "src": "4511:46:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520646973707574652068617320616c7265616479206265656e207265736f6c7665642e",
                        "id": 3821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4571:40:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150d59758e8a2d8d7b6b05e286d474270f4ef159428a22a9e8d5b12a3d396836",
                          "typeString": "literal_string \"The dispute has already been resolved.\""
                        },
                        "value": "The dispute has already been resolved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150d59758e8a2d8d7b6b05e286d474270f4ef159428a22a9e8d5b12a3d396836",
                          "typeString": "literal_string \"The dispute has already been resolved.\""
                        }
                      ],
                      "id": 3815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4490:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4490:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3823,
                  "nodeType": "ExpressionStatement",
                  "src": "4490:131:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3826,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "4654:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4654:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3825,
                          "name": "Arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4643:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrator_$258_$",
                            "typeString": "type(contract Arbitrator)"
                          }
                        },
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4643:24:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3829,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3786,
                        "src": "4669:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3830,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3788,
                        "src": "4681:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$258",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3824,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "4636:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$258_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,uint256)"
                      }
                    },
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3832,
                  "nodeType": "EmitStatement",
                  "src": "4631:58:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DisputeType_$610",
                      "typeString": "enum Dagora.DisputeType"
                    },
                    "id": 3837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3833,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3799,
                        "src": "4703:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute storage pointer"
                        }
                      },
                      "id": 3834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disputeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 708,
                      "src": "4703:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3835,
                        "name": "DisputeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "4726:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                          "typeString": "type(enum Dagora.DisputeType)"
                        }
                      },
                      "id": 3836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Report",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4726:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "src": "4703:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3857,
                    "nodeType": "Block",
                    "src": "4814:120:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3845,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3799,
                              "src": "4848:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3846,
                              "name": "_ruling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3788,
                              "src": "4857:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3844,
                            "name": "_executeOrderRuling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2643,
                            "src": "4828:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RunningDispute_$717_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct Dagora.RunningDispute storage pointer,uint256)"
                            }
                          },
                          "id": 3847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4828:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3848,
                        "nodeType": "ExpressionStatement",
                        "src": "4828:37:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3849,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "4879:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Transaction_$680_storage_$",
                                  "typeString": "mapping(bytes32 => struct Dagora.Transaction storage ref)"
                                }
                              },
                              "id": 3851,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3850,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3793,
                                "src": "4892:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4879:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$680_storage",
                                "typeString": "struct Dagora.Transaction storage ref"
                              }
                            },
                            "id": 3852,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 679,
                            "src": "4879:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$627",
                              "typeString": "enum Dagora.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3853,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "4907:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$627_$",
                                "typeString": "type(enum Dagora.Status)"
                              }
                            },
                            "id": 3854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Finalized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4907:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$627",
                              "typeString": "enum Dagora.Status"
                            }
                          },
                          "src": "4879:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$627",
                            "typeString": "enum Dagora.Status"
                          }
                        },
                        "id": 3856,
                        "nodeType": "ExpressionStatement",
                        "src": "4879:44:8"
                      }
                    ]
                  },
                  "id": 3858,
                  "nodeType": "IfStatement",
                  "src": "4699:235:8",
                  "trueBody": {
                    "id": 3843,
                    "nodeType": "Block",
                    "src": "4746:62:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3839,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3799,
                              "src": "4780:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3840,
                              "name": "_ruling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3788,
                              "src": "4789:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                                "typeString": "struct Dagora.RunningDispute storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3838,
                            "name": "executeReportRuling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "4760:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RunningDispute_$717_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct Dagora.RunningDispute storage pointer,uint256)"
                            }
                          },
                          "id": 3841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4760:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3842,
                        "nodeType": "ExpressionStatement",
                        "src": "4760:37:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "311a6c56",
            "id": 3860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3790,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4236:8:8"
            },
            "parameters": {
              "id": 3789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3786,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3860,
                  "src": "4192:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4192:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3788,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3860,
                  "src": "4212:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4212:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4191:37:8"
            },
            "returnParameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4245:0:8"
            },
            "scope": 3936,
            "src": "4178:762:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2461
            ],
            "body": {
              "id": 3892,
              "nodeType": "Block",
              "src": "5001:324:8",
              "statements": [
                {
                  "assignments": [
                    3867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3867,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3892,
                      "src": "5011:30:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                        "typeString": "struct Dagora.RunningDispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3866,
                        "name": "RunningDispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 717,
                        "src": "5011:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                          "typeString": "struct Dagora.RunningDispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3871,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3868,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "5044:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningDispute_$717_storage_$",
                        "typeString": "mapping(bytes32 => struct Dagora.RunningDispute storage ref)"
                      }
                    },
                    "id": 3870,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3869,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3862,
                      "src": "5053:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5044:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningDispute_$717_storage",
                      "typeString": "struct Dagora.RunningDispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5011:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3873,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3867,
                            "src": "5090:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                              "typeString": "struct Dagora.RunningDispute storage pointer"
                            }
                          },
                          "id": 3874,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "disputeType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "5090:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3875,
                            "name": "DisputeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "5113:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                              "typeString": "type(enum Dagora.DisputeType)"
                            }
                          },
                          "id": 3876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5113:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "src": "5090:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41707065616c7320617265206f6e6c7920616c6c6f77656420666f72206f72646572732064697370757465732e",
                        "id": 3878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5144:47:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d3a53c3ab72230d4ae60ed0f073d0083f80f399c8e75942a9893501e1f0ff9",
                          "typeString": "literal_string \"Appeals are only allowed for orders disputes.\""
                        },
                        "value": "Appeals are only allowed for orders disputes."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d3a53c3ab72230d4ae60ed0f073d0083f80f399c8e75942a9893501e1f0ff9",
                          "typeString": "literal_string \"Appeals are only allowed for orders disputes.\""
                        }
                      ],
                      "id": 3872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5069:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:132:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3880,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:132:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3887,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3867,
                          "src": "5263:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningDispute_$717_storage_ptr",
                            "typeString": "struct Dagora.RunningDispute storage pointer"
                          }
                        },
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "disputeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 714,
                        "src": "5263:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3889,
                        "name": "orderExtraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "5294:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3881,
                          "name": "arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3491,
                          "src": "5212:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Arbitrator_$258",
                            "typeString": "contract Arbitrator"
                          }
                        },
                        "id": 3883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appeal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 220,
                        "src": "5212:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (uint256,bytes memory) payable external"
                        }
                      },
                      "id": 3886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3884,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5238:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5238:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5212:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (uint256,bytes memory) payable external"
                      }
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5212:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3891,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:106:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ece1de44",
            "id": 3893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3864,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4984:8:8"
            },
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3862,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3893,
                  "src": "4962:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3861,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4961:15:8"
            },
            "returnParameters": {
              "id": 3865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5001:0:8"
            },
            "scope": 3936,
            "src": "4946:379:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2650
            ],
            "body": {
              "id": 3934,
              "nodeType": "Block",
              "src": "5454:277:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        },
                        "id": 3905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3902,
                          "name": "_type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "5472:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3903,
                            "name": "DisputeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "5480:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                              "typeString": "type(enum Dagora.DisputeType)"
                            }
                          },
                          "id": 3904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5480:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeType_$610",
                            "typeString": "enum Dagora.DisputeType"
                          }
                        },
                        "src": "5472:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5464:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5464:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3907,
                  "nodeType": "ExpressionStatement",
                  "src": "5464:33:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DisputeType_$610",
                      "typeString": "enum Dagora.DisputeType"
                    },
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3908,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "5511:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3909,
                        "name": "DisputeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "5520:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                          "typeString": "type(enum Dagora.DisputeType)"
                        }
                      },
                      "id": 3910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Report",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5520:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      }
                    },
                    "src": "5511:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DisputeType_$610",
                        "typeString": "enum Dagora.DisputeType"
                      },
                      "id": 3923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3920,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "5624:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3921,
                          "name": "DisputeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "5633:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DisputeType_$610_$",
                            "typeString": "type(enum Dagora.DisputeType)"
                          }
                        },
                        "id": 3922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5633:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeType_$610",
                          "typeString": "enum Dagora.DisputeType"
                        }
                      },
                      "src": "5624:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 3932,
                    "nodeType": "IfStatement",
                    "src": "5620:105:8",
                    "trueBody": {
                      "id": 3931,
                      "nodeType": "Block",
                      "src": "5652:73:8",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 3929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 3924,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3899,
                              "src": "5666:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3927,
                                  "name": "orderExtraData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3495,
                                  "src": "5699:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage",
                                    "typeString": "bytes storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_storage",
                                    "typeString": "bytes storage ref"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3925,
                                  "name": "arbitrator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3491,
                                  "src": "5672:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Arbitrator_$258",
                                    "typeString": "contract Arbitrator"
                                  }
                                },
                                "id": 3926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "arbitrationCost",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 199,
                                "src": "5672:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (bytes memory) view external returns (uint256)"
                                }
                              },
                              "id": 3928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5672:42:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5666:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3930,
                          "nodeType": "ExpressionStatement",
                          "src": "5666:48:8"
                        }
                      ]
                    }
                  },
                  "id": 3933,
                  "nodeType": "IfStatement",
                  "src": "5507:218:8",
                  "trueBody": {
                    "id": 3919,
                    "nodeType": "Block",
                    "src": "5540:74:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3912,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3899,
                            "src": "5554:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3915,
                                "name": "reportExtraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3493,
                                "src": "5587:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3913,
                                "name": "arbitrator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3491,
                                "src": "5560:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Arbitrator_$258",
                                  "typeString": "contract Arbitrator"
                                }
                              },
                              "id": 3914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arbitrationCost",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 199,
                              "src": "5560:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (bytes memory) view external returns (uint256)"
                              }
                            },
                            "id": 3916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5560:43:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5554:49:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3918,
                        "nodeType": "ExpressionStatement",
                        "src": "5554:49:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "703472f3",
            "id": 3935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3897,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5398:8:8"
            },
            "parameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3895,
                  "mutability": "mutable",
                  "name": "_type",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3935,
                  "src": "5356:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeType_$610",
                    "typeString": "enum Dagora.DisputeType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3894,
                    "name": "DisputeType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 610,
                    "src": "5356:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeType_$610",
                      "typeString": "enum Dagora.DisputeType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5355:19:8"
            },
            "returnParameters": {
              "id": 3900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3899,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3935,
                  "src": "5437:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5436:13:8"
            },
            "scope": 3936,
            "src": "5331:400:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3937,
        "src": "201:5532:8"
      }
    ],
    "src": "32:5702:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-07T21:28:33.771Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "appeal(bytes32)": {
        "details": "Appeal an appealable ruling. UNTRUSTED.  Transfer the funds to the arbitrator.  Note that no checks are required as the checks are done by the arbitrator.",
        "params": {
          "_hash": "The hash of the order."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rule(uint256,uint256)": {
        "details": "Give a ruling for a dispute. Must be called by the arbitrator.  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.",
        "params": {
          "_disputeID": "ID of the dispute in the Arbitrator contract.",
          "_ruling": "Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
        }
      },
      "submitEvidence(bytes32,string)": {
        "details": "Submit a reference to evidence. EVENT.",
        "params": {
          "_evidence": "A link to an evidence using its URI.",
          "_hash": "The hash of the order."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}